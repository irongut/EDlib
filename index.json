{
  "api/EDlib.APIException.html": {
    "href": "api/EDlib.APIException.html",
    "title": "Class APIException | EDlib",
    "keywords": "Class APIException Represents errors from an API. Inheritance System.Object APIException Namespace : EDlib Assembly : Taranis.EDlib.dll Syntax public class APIException : Exception Constructors APIException() Initializes a new instance of the APIException class. Declaration public APIException() APIException(SerializationInfo, StreamingContext) Initializes a new instance of the APIException class with serialised data. Declaration protected APIException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. APIException(String) Initializes a new instance of the APIException class with a specified error message. Declaration public APIException(string message) Parameters Type Name Description System.String message The message that describes the error. APIException(String, Exception) Initializes a new instance of the APIException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public APIException(string message, Exception innerException) Parameters Type Name Description System.String message The error message that explains the reason for the exception. Exception innerException The exception that is the cause of the current exception, or a null reference if no inner exception is specified. APIException(String, Exception, Nullable<Int32>) Initializes a new instance of the APIException class with a specified error message, error code and a reference to the inner exception that is the cause of this exception. Declaration public APIException(string message, Exception innerException, int? code) Parameters Type Name Description System.String message The error message that explains the reason for the exception. Exception innerException The exception that is the cause of the current exception, or a null reference if no inner exception is specified. System.Nullable < System.Int32 > code The error code from the API. APIException(String, Nullable<Int32>) Initializes a new instance of the APIException class with a specified error message and error code. Declaration public APIException(string message, int? code) Parameters Type Name Description System.String message The message that describes the error. System.Nullable < System.Int32 > code The error code from the API. Properties StatusCode The error code from the API if available. Declaration public int? StatusCode { get; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/EDlib.BGS.BgsTick.html": {
    "href": "api/EDlib.BGS.BgsTick.html",
    "title": "Class BgsTick | EDlib",
    "keywords": "Class BgsTick Represents the BGS Tick. Inheritance System.Object BgsTick Namespace : EDlib.BGS Assembly : Taranis.EDlib.dll Syntax public class BgsTick : object Constructors BgsTick() Initializes a new instance of the BgsTick class, with the value Unknown for the time string. Declaration public BgsTick() BgsTick(DateTime) Initializes a new instance of the BgsTick class with the specified date and time. Declaration public BgsTick(DateTime time) Parameters Type Name Description DateTime time Date and time of the BGS Tick. Properties Time Returns the date and time of the BGS tick. Declaration public DateTime Time { get; } Property Value Type Description DateTime TimeString Returns the date and time of the BGS tick as a string. Declaration public string TimeString { get; } Property Value Type Description System.String"
  },
  "api/EDlib.BGS.BgsTickService.html": {
    "href": "api/EDlib.BGS.BgsTickService.html",
    "title": "Class BgsTickService | EDlib",
    "keywords": "Class BgsTickService Gets the date and time that the Background Simulation (BGS) updates, known as the BGS tick. Inheritance System.Object BgsTickService Namespace : EDlib.BGS Assembly : Taranis.EDlib.dll Syntax public sealed class BgsTickService : object Methods GetData(Boolean) Gets the latest BGS tick. Declaration public Task<(BgsTick tick, DateTime updated)> GetData(bool ignoreCache = false) Parameters Type Name Description System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < System.ValueTuple < BgsTick , DateTime >> BgsTick GetData(Int32, Boolean) Gets multiple recent BGS ticks. Declaration public Task<(List<BgsTick> ticks, DateTime updated)> GetData(int days, bool ignoreCache = false) Parameters Type Name Description System.Int32 days The required number of days worth of ticks. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < System.ValueTuple < List < BgsTick >, DateTime >> Task<(List<BgsTick>, DateTime)> Instance(IDownloadService) Instantiates the BgsTickService class. Declaration public static BgsTickService Instance(IDownloadService downloadService) Parameters Type Name Description IDownloadService downloadService IDownloadService instance used to download data. Returns Type Description BgsTickService BgsTickService"
  },
  "api/EDlib.BGS.html": {
    "href": "api/EDlib.BGS.html",
    "title": "Namespace EDlib.BGS | EDlib",
    "keywords": "Namespace EDlib.BGS The EDlib.BGS namespace contains classes that get the date and time that the Background Simulation (BGS) updates, known as the BGS tick, from CMDR Phelbore. BgsTickService Gets the date and time that the Background Simulation (BGS) updates, known as the BGS tick. Classes BgsTick Represents the BGS Tick. BgsTickService Gets the date and time that the Background Simulation (BGS) updates, known as the BGS tick."
  },
  "api/EDlib.Common.html": {
    "href": "api/EDlib.Common.html",
    "title": "Namespace EDlib.Common | EDlib",
    "keywords": "Namespace EDlib.Common Classes Topic Topic for GalNet News articles and Community Goals."
  },
  "api/EDlib.Common.Topic.html": {
    "href": "api/EDlib.Common.Topic.html",
    "title": "Class Topic | EDlib",
    "keywords": "Class Topic Topic for GalNet News articles and Community Goals. Inheritance System.Object Topic Namespace : EDlib.Common Assembly : Taranis.EDlib.dll Syntax public class Topic : object Constructors Topic(String, List<String>) Initializes a new instance of the Topic class. Declaration public Topic(string name, List<string> terms) Parameters Type Name Description System.String name The topic name. List < System.String > terms The words used to determine if the topic is relevant to the content. Properties Count The number of times the terms were found in the content. Declaration public int Count { get; set; } Property Value Type Description System.Int32 Name The topic name. Declaration public string Name { get; } Property Value Type Description System.String Terms The words used to determine if the topic is relevant to the content. Declaration public List<string> Terms { get; } Property Value Type Description List < System.String >"
  },
  "api/EDlib.EDSM.Body.html": {
    "href": "api/EDlib.EDSM.Body.html",
    "title": "Class Body | EDlib",
    "keywords": "Class Body Represents the location of a planetary outpost returned by EDSM System API methods. See EDSM API documentation for System v1 . Inheritance System.Object Body Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public class Body : object Properties Id The ID of the body. Declaration public long Id { get; set; } Property Value Type Description System.Int64 Latitude The latitude of the planetary outpost if known. Declaration public double? Latitude { get; set; } Property Value Type Description System.Nullable < System.Double > Longitude The longitude of the planetary outpost if known. Declaration public double? Longitude { get; set; } Property Value Type Description System.Nullable < System.Double > Name The name of the body. Declaration public string Name { get; set; } Property Value Type Description System.String"
  },
  "api/EDlib.EDSM.Commodity.html": {
    "href": "api/EDlib.EDSM.Commodity.html",
    "title": "Class Commodity | EDlib",
    "keywords": "Class Commodity Represents a market commodity returned by EDSM System API methods. See EDSM API documentation for System v1 . Inheritance System.Object Commodity Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public class Commodity : object Properties BuyPrice The price when buying the commodity. Declaration public long BuyPrice { get; set; } Property Value Type Description System.Int64 Demand Demand for the commodity when selling. Declaration public long Demand { get; set; } Property Value Type Description System.Int64 Id The ID of the commodity. Declaration public string Id { get; set; } Property Value Type Description System.String Name The name of the commodity. Declaration public string Name { get; set; } Property Value Type Description System.String SellPrice The price when selling the commodity. Declaration public long SellPrice { get; set; } Property Value Type Description System.Int64 Stock The quantity of the commodity available to buy. Declaration public long Stock { get; set; } Property Value Type Description System.Int64 StockBracket Stock bracket for the commodity. Declaration public long StockBracket { get; set; } Property Value Type Description System.Int64"
  },
  "api/EDlib.EDSM.ControllingFaction.html": {
    "href": "api/EDlib.EDSM.ControllingFaction.html",
    "title": "Class ControllingFaction | EDlib",
    "keywords": "Class ControllingFaction Represents the BGS faction that controls a system or station returned by EDSM System API methods. See EDSM API documentation for System v1 . Inheritance System.Object ControllingFaction Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public class ControllingFaction : object Properties Allegiance The superpower allegiance of the faction when returned by the EDSM method. Declaration public string Allegiance { get; set; } Property Value Type Description System.String Government The government type of the faction when returned by the EDSM method. Declaration public string Government { get; set; } Property Value Type Description System.String Id The ID of the faction. Engineer factions do not have an Id so this property is nullable. Declaration public long? Id { get; set; } Property Value Type Description System.Nullable < System.Int64 > Name The name of the faction. Declaration public string Name { get; set; } Property Value Type Description System.String"
  },
  "api/EDlib.EDSM.Coords.html": {
    "href": "api/EDlib.EDSM.Coords.html",
    "title": "Class Coords | EDlib",
    "keywords": "Class Coords Represents galactic coordinates for a solar system returned by EDSM Systems API methods. See EDSM API documentation for Systems v1 . Inheritance System.Object Coords Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public class Coords : object Properties X X coordinate. Declaration public double X { get; set; } Property Value Type Description System.Double Y Y coordinate. Declaration public double Y { get; set; } Property Value Type Description System.Double Z Z coordinate. Declaration public double Z { get; set; } Property Value Type Description System.Double"
  },
  "api/EDlib.EDSM.EdsmService.html": {
    "href": "api/EDlib.EDSM.EdsmService.html",
    "title": "Class EdsmService | EDlib",
    "keywords": "Class EdsmService Utility service used by other services to get data from EDSM APIs. See EDSM API documentation. . Inheritance System.Object EdsmService Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public sealed class EdsmService : object Methods GetData(String, Dictionary<String, String>, DownloadOptions) Gets data from an EDSM API. Declaration public Task<(string data, DateTime updated)> GetData(string method, Dictionary<string, string> parameters, DownloadOptions options) Parameters Type Name Description System.String method The EDSM API method. Dictionary < System.String , System.String > parameters The parameters for the API method. DownloadOptions options Options for download. Returns Type Description Task < System.ValueTuple < System.String , DateTime >> Task<(string, DateTime)> Instance(IDownloadService) Instantiates the EdsmService class. Declaration public static EdsmService Instance(IDownloadService downloadService) Parameters Type Name Description IDownloadService downloadService IDownloadService instance used to download data. Returns Type Description EdsmService EdsmService"
  },
  "api/EDlib.EDSM.EliteStatus.html": {
    "href": "api/EDlib.EDSM.EliteStatus.html",
    "title": "Class EliteStatus | EDlib",
    "keywords": "Class EliteStatus Represents the Elite: Dangerous server status. See EDSM API documentation for Status v1 . Inheritance System.Object EliteStatus Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public class EliteStatus : object Constructors EliteStatus() Initializes a new instance of the EliteStatus class with unknown status. Declaration public EliteStatus() EliteStatus(Int32, String, String, DateTime) Initializes a new instance of the EliteStatus class. Declaration public EliteStatus(int status, string type, string message, DateTime lastupdate) Parameters Type Name Description System.Int32 status The server status code. System.String type The status string. System.String message The server status message. DateTime lastupdate When the server status was last checked. Properties LastUpdated When EDSM last checked the status from the Elite: Dangerous server. Declaration public DateTime LastUpdated { get; } Property Value Type Description DateTime Message The message returned by the Elite: Dangerous server. Declaration public string Message { get; } Property Value Type Description System.String Status The status code returned by the Elite: Dangerous server. Declaration public int Status { get; } Property Value Type Description System.Int32 Type A Bootstrap style status string - success / warning / danger. Declaration public string Type { get; } Property Value Type Description System.String Methods ToString() Returns the server status message and last updated as a string. Declaration public override string ToString() Returns Type Description System.String A that represents the server status."
  },
  "api/EDlib.EDSM.EliteStatusService.html": {
    "href": "api/EDlib.EDSM.EliteStatusService.html",
    "title": "Class EliteStatusService | EDlib",
    "keywords": "Class EliteStatusService Gets the status of the Elite: Dangerous game servers. See EDSM API documentation for Status v1 . Inheritance System.Object EliteStatusService Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public sealed class EliteStatusService : object Methods GetData(CancellationTokenSource, Int32, Boolean) Gets the status of the Elite: Dangerous server. Declaration public Task<(EliteStatus status, DateTime updated)> GetData(CancellationTokenSource cancelToken, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description CancellationTokenSource cancelToken A cancellation token. System.Int32 cacheMinutes The number of minutes to cache the data. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < System.ValueTuple < EliteStatus , DateTime >> Task<(List<NewsArticle>, DateTime)> Exceptions Type Condition APIException Errors from the API called. GetData(Int32, Boolean) Gets the status of the Elite: Dangerous server. Declaration public Task<(EliteStatus status, DateTime updated)> GetData(int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.Int32 cacheMinutes The number of minutes to cache the data. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < System.ValueTuple < EliteStatus , DateTime >> Task<(List<NewsArticle>, DateTime)> Exceptions Type Condition APIException Errors from the API called. Instance(IDownloadService) Instantiates the EliteStatusService class. Declaration public static EliteStatusService Instance(IDownloadService downloadService) Parameters Type Name Description IDownloadService downloadService IDownloadService instance used to download data. Returns Type Description EliteStatusService EliteStatusService"
  },
  "api/EDlib.EDSM.Faction.html": {
    "href": "api/EDlib.EDSM.Faction.html",
    "title": "Class Faction | EDlib",
    "keywords": "Class Faction Represents a BGS faction returned by EDSM System API methods. See EDSM API documentation for System v1 . Inheritance System.Object Faction Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public class Faction : object Properties ActiveStates The faction's active states. Declaration public FactionState[] ActiveStates { get; set; } Property Value Type Description FactionState [] Allegiance The superpower allegiance of the faction. Declaration public string Allegiance { get; set; } Property Value Type Description System.String Government The government type of the faction. Declaration public string Government { get; set; } Property Value Type Description System.String Happiness The faction's current happiness. Declaration public string Happiness { get; set; } Property Value Type Description System.String Id The ID of the faction. Declaration public long Id { get; set; } Property Value Type Description System.Int64 Influence The faction's influence level. Declaration public double Influence { get; set; } Property Value Type Description System.Double IsPlayer true if the faction is a player faction. Declaration public bool IsPlayer { get; set; } Property Value Type Description System.Boolean LastUpdate The date and time when the information was requested. Declaration public long LastUpdate { get; set; } Property Value Type Description System.Int64 Name The name of the faction. Declaration public string Name { get; set; } Property Value Type Description System.String PendingStates The faction's pending states. Declaration public FactionState[] PendingStates { get; set; } Property Value Type Description FactionState [] RecoveringStates The faction's recovering states. Declaration public FactionState[] RecoveringStates { get; set; } Property Value Type Description FactionState [] State The faction's current state. Declaration public string State { get; set; } Property Value Type Description System.String"
  },
  "api/EDlib.EDSM.FactionState.html": {
    "href": "api/EDlib.EDSM.FactionState.html",
    "title": "Class FactionState | EDlib",
    "keywords": "Class FactionState Represents a faction's BGS state returned by EDSM System API methods. See EDSM API documentation for System v1 . Inheritance System.Object FactionState Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public class FactionState : object Properties State The BGS state. Declaration public string State { get; set; } Property Value Type Description System.String Trend The BGS state trend. Declaration public long? Trend { get; set; } Property Value Type Description System.Nullable < System.Int64 >"
  },
  "api/EDlib.EDSM.html": {
    "href": "api/EDlib.EDSM.html",
    "title": "Namespace EDlib.EDSM | EDlib",
    "keywords": "Namespace EDlib.EDSM The EDlib.EDSM namespace contains classes for interacting with the EDSM API . EliteStatusService Gets the status of the Elite: Dangerous game servers. See EDSM API documentation for Status v1 . SystemService Gets data from the EDSM System API including stations, markets, shipyards, outfitting and factions. See EDSM API documentation for System v1 . SystemsService Gets data from the EDSM Systems API including allegiance, government, controlling faction, population, security and economic information. See EDSM API documentation for Systems v1 . Classes Body Represents the location of a planetary outpost returned by EDSM System API methods. See EDSM API documentation for System v1 . Commodity Represents a market commodity returned by EDSM System API methods. See EDSM API documentation for System v1 . ControllingFaction Represents the BGS faction that controls a system or station returned by EDSM System API methods. See EDSM API documentation for System v1 . Coords Represents galactic coordinates for a solar system returned by EDSM Systems API methods. See EDSM API documentation for Systems v1 . EdsmService Utility service used by other services to get data from EDSM APIs. See EDSM API documentation. . EliteStatus Represents the Elite: Dangerous server status. See EDSM API documentation for Status v1 . EliteStatusService Gets the status of the Elite: Dangerous game servers. See EDSM API documentation for Status v1 . Faction Represents a BGS faction returned by EDSM System API methods. See EDSM API documentation for System v1 . FactionState Represents a faction's BGS state returned by EDSM System API methods. See EDSM API documentation for System v1 . Market Represents a station market returned by EDSM System API methods. See EDSM API documentation for System v1 . PrimaryStar Represents the primary star in a solar system returned by EDSM Systems API methods. See EDSM API documentation for Systems v1 . Ship Represents a ship returned by EDSM System API methods. See EDSM API documentation for System v1 . ShipModule Represents a ship module returned by EDSM System API methods. See EDSM API documentation for System v1 . Shipyard Represents a station shipyard returned by EDSM System API methods. See EDSM API documentation for System v1 . SolarSystem Represents a solar system returned by EDSM Systems API methods. See EDSM API documentation for Systems v1 . Station Represents a station returned by EDSM System API methods. See EDSM API documentation for System v1 . StationOutfitting Represents an outfitting service returned by EDSM System API methods. See EDSM API documentation for System v1 . SystemFactions Lists the factions in a system returned by EDSM System API methods. See EDSM API documentation for System v1 . SystemInfo A summary of information about a solar system returned by EDSM Systems API methods. See EDSM API documentation for Systems v1 . SystemService Gets data from the EDSM System API including stations, markets, shipyards, outfitting and factions. See EDSM API documentation for System v1 . SystemsOptions Request options for EDSM Systems API methods. See EDSM API documentation for Systems v1 . SystemsService Gets data from the EDSM Systems API including allegiance, government, controlling faction, population, security and economic information. See EDSM API documentation for Systems v1 . SystemStations Lists the stations in a system returned by EDSM System API methods. See EDSM API documentation for System v1 . UpdateTime Represents when the station details were last updated on ESDM. See EDSM API documentation for System v1 ."
  },
  "api/EDlib.EDSM.Market.html": {
    "href": "api/EDlib.EDSM.Market.html",
    "title": "Class Market | EDlib",
    "keywords": "Class Market Represents a station market returned by EDSM System API methods. See EDSM API documentation for System v1 . Inheritance System.Object Market Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public class Market : object Constructors Market(Int64, Int64, String, Int64, Int64, String, String, List<Commodity>) Initializes a new instance of the Market class. Declaration public Market(long id, long id64, string name, long marketId, long sId, string sName, string url, List<Commodity> commodities) Parameters Type Name Description System.Int64 id The EDSM market ID. System.Int64 id64 The EDSM 64 bit market ID. System.String name The system name. System.Int64 marketId The market ID. System.Int64 sId The station ID. System.String sName The station name. System.String url The EDSM URL for the market. List < Commodity > commodities List of Commodity available from this market. Properties Commodities List of Commodity available from this market. Declaration public List<Commodity> Commodities { get; set; } Property Value Type Description List < Commodity > Id The EDSM internal ID of the market. Declaration public long Id { get; set; } Property Value Type Description System.Int64 Id64 The EDSM internal ID of the market (64 bit). Declaration public long Id64 { get; set; } Property Value Type Description System.Int64 LastUpdated The date and time when the information was requested. Declaration public DateTime LastUpdated { get; } Property Value Type Description DateTime MarketId The market ID (use this ID for EDSM queries). Declaration public long MarketId { get; set; } Property Value Type Description System.Int64 Name The name of the system. Declaration public string Name { get; set; } Property Value Type Description System.String SId The EDSM internal ID of the station. Declaration public long SId { get; set; } Property Value Type Description System.Int64 SName The name of the station. Declaration public string SName { get; set; } Property Value Type Description System.String Url The EDSM URL for the market. Declaration public string Url { get; set; } Property Value Type Description System.String"
  },
  "api/EDlib.EDSM.PrimaryStar.html": {
    "href": "api/EDlib.EDSM.PrimaryStar.html",
    "title": "Class PrimaryStar | EDlib",
    "keywords": "Class PrimaryStar Represents the primary star in a solar system returned by EDSM Systems API methods. See EDSM API documentation for Systems v1 . Inheritance System.Object PrimaryStar Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public class PrimaryStar : object Properties IsScoopable Whether the primary star can be scooped for fuel. Declaration public bool IsScoopable { get; set; } Property Value Type Description System.Boolean Name The name of the primary star. Declaration public string Name { get; set; } Property Value Type Description System.String Type The type of the primary star. See the EDSM Celestial Bodies FAQ for more info. Declaration public string Type { get; set; } Property Value Type Description System.String"
  },
  "api/EDlib.EDSM.Ship.html": {
    "href": "api/EDlib.EDSM.Ship.html",
    "title": "Class Ship | EDlib",
    "keywords": "Class Ship Represents a ship returned by EDSM System API methods. See EDSM API documentation for System v1 . Inheritance System.Object Ship Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public class Ship : object Properties Id The ship ID. Declaration public long Id { get; set; } Property Value Type Description System.Int64 Name The name of the ship. Declaration public string Name { get; set; } Property Value Type Description System.String"
  },
  "api/EDlib.EDSM.ShipModule.html": {
    "href": "api/EDlib.EDSM.ShipModule.html",
    "title": "Class ShipModule | EDlib",
    "keywords": "Class ShipModule Represents a ship module returned by EDSM System API methods. See EDSM API documentation for System v1 . Inheritance System.Object ShipModule Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public class ShipModule : object Properties Id The module ID. Declaration public string Id { get; set; } Property Value Type Description System.String Name The name of the module. Declaration public string Name { get; set; } Property Value Type Description System.String"
  },
  "api/EDlib.EDSM.Shipyard.html": {
    "href": "api/EDlib.EDSM.Shipyard.html",
    "title": "Class Shipyard | EDlib",
    "keywords": "Class Shipyard Represents a station shipyard returned by EDSM System API methods. See EDSM API documentation for System v1 . Inheritance System.Object Shipyard Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public class Shipyard : object Constructors Shipyard(Int64, Int64, String, Int64, Int64, String, String, List<Ship>) Initializes a new instance of the Market class. Declaration public Shipyard(long id, long id64, string name, long marketId, long sId, string sName, string url, List<Ship> ships) Parameters Type Name Description System.Int64 id The EDSM shipyard ID. System.Int64 id64 The EDSM 64 bit shipyard ID. System.String name The system name. System.Int64 marketId The shipyard ID. System.Int64 sId The station ID. System.String sName The station name. System.String url The EDSM URL for the shipyard. List < Ship > ships List of Ship available from this shipyard. Properties Id The EDSM internal ID of the shipyard. Declaration public long Id { get; set; } Property Value Type Description System.Int64 Id64 The EDSM internal ID of the shipyard (64 bit). Declaration public long Id64 { get; set; } Property Value Type Description System.Int64 LastUpdated The date and time when the information was requested. Declaration public DateTime LastUpdated { get; } Property Value Type Description DateTime MarketId The shipyard ID (use this ID for EDSM queries). Declaration public long MarketId { get; set; } Property Value Type Description System.Int64 Name The name of the system. Declaration public string Name { get; set; } Property Value Type Description System.String Ships List of Ship available from this shipyard. Declaration public List<Ship> Ships { get; set; } Property Value Type Description List < Ship > SId The EDSM internal ID of the station. Declaration public long SId { get; set; } Property Value Type Description System.Int64 SName The name of the station. Declaration public string SName { get; set; } Property Value Type Description System.String Url The EDSM URL for the shipyard. Declaration public string Url { get; set; } Property Value Type Description System.String"
  },
  "api/EDlib.EDSM.SolarSystem.html": {
    "href": "api/EDlib.EDSM.SolarSystem.html",
    "title": "Class SolarSystem | EDlib",
    "keywords": "Class SolarSystem Represents a solar system returned by EDSM Systems API methods. See EDSM API documentation for Systems v1 . Inheritance System.Object SolarSystem Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public class SolarSystem : object Constructors SolarSystem(String, Double, Int64, Int64, Coords, Boolean, Boolean, String, SystemInfo, PrimaryStar) Initializes a new instance of the SolarSystem class. Declaration public SolarSystem(string name, double distance, long id, long id64, Coords coords, bool coordsLocked, bool requirePermit, string permitName, SystemInfo information, PrimaryStar primaryStar) Parameters Type Name Description System.String name The system name. System.Double distance Distance from a specified system. System.Int64 id The EDSM system ID. System.Int64 id64 The EDSM 64 bit system ID. Coords coords The system coords. System.Boolean coordsLocked if set to true [coords locked]. System.Boolean requirePermit If the system requires a permit. System.String permitName Name of the system permit. SystemInfo information The system information. PrimaryStar primaryStar The primary star information. Properties Coords Coordinates of the system. Declaration public Coords Coords { get; } Property Value Type Description Coords CoordsLocked Whether EDSM has locked the coordinates of the system. Declaration public bool CoordsLocked { get; } Property Value Type Description System.Boolean Distance Distance in light years from another system specified in the API request. Declaration public double Distance { get; set; } Property Value Type Description System.Double Id The EDSM internal ID of the system. Declaration public long Id { get; } Property Value Type Description System.Int64 Id64 The EDSM internal ID of the system (64 bit). Declaration public long Id64 { get; } Property Value Type Description System.Int64 Information A summary of information about the system. Includes Allegiance, Government, Faction, Population, Security and Economic information. Declaration public SystemInfo Information { get; } Property Value Type Description SystemInfo LastUpdated The date and time when the information was requested. Declaration public DateTime LastUpdated { get; } Property Value Type Description DateTime Name The name of the system. Declaration public string Name { get; } Property Value Type Description System.String PermitName The name of the system permit if required. Declaration public string PermitName { get; set; } Property Value Type Description System.String PrimaryStar Information concerning the primary star of the system. Includes Type, Name and if the star can be scooped for fuel. Declaration public PrimaryStar PrimaryStar { get; } Property Value Type Description PrimaryStar RequiresPermit Whether the system requires a permit. Declaration public bool RequiresPermit { get; } Property Value Type Description System.Boolean"
  },
  "api/EDlib.EDSM.Station.html": {
    "href": "api/EDlib.EDSM.Station.html",
    "title": "Class Station | EDlib",
    "keywords": "Class Station Represents a station returned by EDSM System API methods. See EDSM API documentation for System v1 . Inheritance System.Object Station Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public class Station : object Properties Allegiance The superpower allegiance of the faction. Declaration public string Allegiance { get; set; } Property Value Type Description System.String Body Location of a planetary outpost. Declaration public Body Body { get; set; } Property Value Type Description Body ControllingFaction The current faction that controls the station. Declaration public ControllingFaction ControllingFaction { get; set; } Property Value Type Description ControllingFaction DistanceToArrival Distance from the primary star to the station in light seconds. Declaration public double DistanceToArrival { get; set; } Property Value Type Description System.Double Economy The primary economy type of the station. Declaration public string Economy { get; set; } Property Value Type Description System.String Government The government type of the faction. Declaration public string Government { get; set; } Property Value Type Description System.String HaveMarket true if the station has a market. Declaration public bool HaveMarket { get; set; } Property Value Type Description System.Boolean HaveOutfitting true if the station has an outfitting service. Declaration public bool HaveOutfitting { get; set; } Property Value Type Description System.Boolean HaveShipyard true if the station has a shipyard. Declaration public bool HaveShipyard { get; set; } Property Value Type Description System.Boolean Id The EDSM internal ID of the station. Declaration public long Id { get; set; } Property Value Type Description System.Int64 MarketId The market ID of the station (use this ID for EDSM queries). Declaration public long MarketId { get; set; } Property Value Type Description System.Int64 Name The name of station. Declaration public string Name { get; set; } Property Value Type Description System.String OtherServices Array of other services available in the station. Declaration public string[] OtherServices { get; set; } Property Value Type Description System.String [] SecondEconomy The secondary economy type of the station. Declaration public string SecondEconomy { get; set; } Property Value Type Description System.String Type The type of station. Declaration public string Type { get; set; } Property Value Type Description System.String UpdateTime When the station details were last updated on ESDM. Declaration public UpdateTime UpdateTime { get; set; } Property Value Type Description UpdateTime"
  },
  "api/EDlib.EDSM.StationOutfitting.html": {
    "href": "api/EDlib.EDSM.StationOutfitting.html",
    "title": "Class StationOutfitting | EDlib",
    "keywords": "Class StationOutfitting Represents an outfitting service returned by EDSM System API methods. See EDSM API documentation for System v1 . Inheritance System.Object StationOutfitting Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public class StationOutfitting : object Constructors StationOutfitting(Int64, Int64, String, Int64, Int64, String, String, List<ShipModule>) Initializes a new instance of the StationOutfitting class. Declaration public StationOutfitting(long id, long id64, string name, long marketId, long sId, string sName, string url, List<ShipModule> outfitting) Parameters Type Name Description System.Int64 id The EDSM outfitting service ID. System.Int64 id64 The EDSM 64 bit outfitting service ID. System.String name The system name. System.Int64 marketId The outfitting service ID. System.Int64 sId The station ID. System.String sName The station name. System.String url The EDSM URL for the outfitting service. List < ShipModule > outfitting List of Outfitting available from this outfitting service. Properties Id The EDSM internal ID of the outfitting service. Declaration public long Id { get; set; } Property Value Type Description System.Int64 Id64 The EDSM internal ID of the outfitting service (64 bit). Declaration public long Id64 { get; set; } Property Value Type Description System.Int64 LastUpdated The date and time when the information was requested. Declaration public DateTime LastUpdated { get; } Property Value Type Description DateTime MarketId The outfitting service ID (use this ID for EDSM queries). Declaration public long MarketId { get; set; } Property Value Type Description System.Int64 Name The name of the system. Declaration public string Name { get; set; } Property Value Type Description System.String Outfitting List of ShipModule available from this outfitting service. Declaration public List<ShipModule> Outfitting { get; set; } Property Value Type Description List < ShipModule > SId The EDSM internal ID of the station. Declaration public long SId { get; set; } Property Value Type Description System.Int64 SName The name of the station. Declaration public string SName { get; set; } Property Value Type Description System.String Url The EDSM URL for the outfitting service. Declaration public string Url { get; set; } Property Value Type Description System.String"
  },
  "api/EDlib.EDSM.SystemFactions.html": {
    "href": "api/EDlib.EDSM.SystemFactions.html",
    "title": "Class SystemFactions | EDlib",
    "keywords": "Class SystemFactions Lists the factions in a system returned by EDSM System API methods. See EDSM API documentation for System v1 . Inheritance System.Object SystemFactions Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public class SystemFactions : object Constructors SystemFactions(Int64, Int64, String, String, ControllingFaction, List<Faction>) Initializes a new instance of the SystemFactions class. Declaration public SystemFactions(long id, long id64, string name, string url, ControllingFaction controlFaction, List<Faction> factions) Parameters Type Name Description System.Int64 id The EDSM system ID. System.Int64 id64 The EDSM 64 bit system ID. System.String name The system name. System.String url The EDSM URL for the system. ControllingFaction controlFaction The faction that controls the system. List < Faction > factions Array of Faction in the system. Properties ControllingFaction The BGS faction that controls the system. Declaration public ControllingFaction ControllingFaction { get; set; } Property Value Type Description ControllingFaction Factions Array of Faction in the system. Declaration public List<Faction> Factions { get; set; } Property Value Type Description List < Faction > Id The EDSM internal ID of the system. Declaration public long Id { get; set; } Property Value Type Description System.Int64 Id64 The EDSM internal ID of the system (64 bit). Declaration public long Id64 { get; set; } Property Value Type Description System.Int64 LastUpdated The date and time when the information was requested. Declaration public DateTime LastUpdated { get; } Property Value Type Description DateTime Name The name of the system. Declaration public string Name { get; set; } Property Value Type Description System.String Url The EDSM URL for the system. Declaration public string Url { get; set; } Property Value Type Description System.String"
  },
  "api/EDlib.EDSM.SystemInfo.html": {
    "href": "api/EDlib.EDSM.SystemInfo.html",
    "title": "Class SystemInfo | EDlib",
    "keywords": "Class SystemInfo A summary of information about a solar system returned by EDSM Systems API methods. See EDSM API documentation for Systems v1 . Inheritance System.Object SystemInfo Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public class SystemInfo : object Properties Allegiance The current superpower allegiance of the system. Declaration public string Allegiance { get; set; } Property Value Type Description System.String Economy The primary economy type of the system. Declaration public string Economy { get; set; } Property Value Type Description System.String Faction The current faction who controls the system. Declaration public string Faction { get; set; } Property Value Type Description System.String FactionState The current active state of the controlling faction. Declaration public string FactionState { get; set; } Property Value Type Description System.String Government The current government type of the system. Declaration public string Government { get; set; } Property Value Type Description System.String Population The population of the system. Declaration public long Population { get; set; } Property Value Type Description System.Int64 Reserve The mining reserves present in system. Declaration public string Reserve { get; set; } Property Value Type Description System.String SecondEconomy The secondary economy type of the system. Declaration public string SecondEconomy { get; set; } Property Value Type Description System.String Security The current security level of the system. Declaration public string Security { get; set; } Property Value Type Description System.String"
  },
  "api/EDlib.EDSM.SystemService.html": {
    "href": "api/EDlib.EDSM.SystemService.html",
    "title": "Class SystemService | EDlib",
    "keywords": "Class SystemService Gets data from the EDSM System API including stations, markets, shipyards, outfitting and factions. See EDSM API documentation for System v1 . Inheritance System.Object SystemService Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public sealed class SystemService : object Methods GetFactions(String, CancellationTokenSource, Int32, Boolean) Gets information about factions in a system. Declaration public Task<SystemFactions> GetFactions(string systemName, CancellationTokenSource cancelToken, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.String systemName The system name. CancellationTokenSource cancelToken A cancellation token. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < SystemFactions > Task<SystemFactions> Exceptions Type Condition APIException Errors from the API called. GetFactions(String, Int32, Boolean) Gets information about factions in a system. Declaration public Task<SystemFactions> GetFactions(string systemName, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.String systemName The system name. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < SystemFactions > Task<SystemFactions> Exceptions Type Condition APIException Errors from the API called. GetMarket(Int64, CancellationTokenSource, Int32, Boolean) Gets information about a market in a station. Declaration public Task<Market> GetMarket(long marketId, CancellationTokenSource cancelToken, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.Int64 marketId The in-game marketId of the market. CancellationTokenSource cancelToken A cancellation token. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < Market > Task<Market> Exceptions Type Condition APIException Errors from the API called. GetMarket(Int64, Int32, Boolean) Gets information about a market in a station. Declaration public Task<Market> GetMarket(long marketId, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.Int64 marketId The in-game marketId of the market. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < Market > Task<Market> Exceptions Type Condition APIException Errors from the API called. GetMarket(String, String, CancellationTokenSource, Int32, Boolean) Gets information about a market in a station. Declaration public Task<Market> GetMarket(string systemName, string stationName, CancellationTokenSource cancelToken, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.String systemName The name of the system where the market is located. System.String stationName The name of the station where the market is located. CancellationTokenSource cancelToken A cancellation token. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < Market > Task<Market> Exceptions Type Condition APIException Errors from the API called. GetMarket(String, String, Int32, Boolean) Gets information about a market in a station. Declaration public Task<Market> GetMarket(string systemName, string stationName, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.String systemName The name of the system where the market is located. System.String stationName The name of the station where the market is located. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < Market > Task<Market> Exceptions Type Condition APIException Errors from the API called. GetOutfitting(Int64, CancellationTokenSource, Int32, Boolean) Gets information about a outfitting in a station. Declaration public Task<StationOutfitting> GetOutfitting(long marketId, CancellationTokenSource cancelToken, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.Int64 marketId The in-game marketId of the station where the outfitting is located. CancellationTokenSource cancelToken A cancellation token. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < StationOutfitting > Task<StationOutfitting> Exceptions Type Condition APIException Errors from the API called. GetOutfitting(Int64, Int32, Boolean) Gets information about a outfitting in a station. Declaration public Task<StationOutfitting> GetOutfitting(long marketId, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.Int64 marketId The in-game marketId of the station where the outfitting is located. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < StationOutfitting > Task<StationOutfitting> Exceptions Type Condition APIException Errors from the API called. GetOutfitting(String, String, CancellationTokenSource, Int32, Boolean) Gets information about a outfitting in a station. Declaration public Task<StationOutfitting> GetOutfitting(string systemName, string stationName, CancellationTokenSource cancelToken, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.String systemName The name of the system where the outfitting is located. System.String stationName The name of the station where the outfitting is located. CancellationTokenSource cancelToken A cancellation token. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < StationOutfitting > Task<StationOutfitting> Exceptions Type Condition APIException Errors from the API called. GetOutfitting(String, String, Int32, Boolean) Gets information about a outfitting in a station. Declaration public Task<StationOutfitting> GetOutfitting(string systemName, string stationName, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.String systemName The name of the system where the outfitting is located. System.String stationName The name of the station where the outfitting is located. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < StationOutfitting > Task<StationOutfitting> Exceptions Type Condition APIException Errors from the API called. GetShipyard(Int64, CancellationTokenSource, Int32, Boolean) Gets information about a shipyard in a station. Declaration public Task<Shipyard> GetShipyard(long marketId, CancellationTokenSource cancelToken, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.Int64 marketId The in-game marketId of the station where the shipyard is located. CancellationTokenSource cancelToken A cancellation token. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < Shipyard > Task<Shipyard> Exceptions Type Condition APIException Errors from the API called. GetShipyard(Int64, Int32, Boolean) Gets information about a shipyard in a station. Declaration public Task<Shipyard> GetShipyard(long marketId, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.Int64 marketId The in-game marketId of the station where the shipyard is located. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < Shipyard > Task<Shipyard> Exceptions Type Condition APIException Errors from the API called. GetShipyard(String, String, CancellationTokenSource, Int32, Boolean) Gets information about a shipyard in a station. Declaration public Task<Shipyard> GetShipyard(string systemName, string stationName, CancellationTokenSource cancelToken, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.String systemName The name of the system where the shipyard is located. System.String stationName The name of the station where the shipyard is located. CancellationTokenSource cancelToken A cancellation token. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < Shipyard > Task<Shipyard> Exceptions Type Condition APIException Errors from the API called. GetShipyard(String, String, Int32, Boolean) Gets information about a shipyard in a station. Declaration public Task<Shipyard> GetShipyard(string systemName, string stationName, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.String systemName The name of the system where the shipyard is located. System.String stationName The name of the station where the shipyard is located. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < Shipyard > Task<Shipyard> Exceptions Type Condition APIException Errors from the API called. GetStations(String, CancellationTokenSource, Int32, Boolean) Gets information about stations in a system. Declaration public Task<SystemStations> GetStations(string systemName, CancellationTokenSource cancelToken, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.String systemName The system name. CancellationTokenSource cancelToken A cancellation token. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < SystemStations > Task<SystemStations> Exceptions Type Condition APIException Errors from the API called. GetStations(String, Int32, Boolean) Gets information about stations in a system. Declaration public Task<SystemStations> GetStations(string systemName, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.String systemName The system name. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < SystemStations > Task<SystemStations> Exceptions Type Condition APIException Errors from the API called. Instance(IDownloadService) Instantiates the SystemService class. Declaration public static SystemService Instance(IDownloadService downloadService) Parameters Type Name Description IDownloadService downloadService IDownloadService instance used to download data. Returns Type Description SystemService SystemService"
  },
  "api/EDlib.EDSM.SystemsOptions.html": {
    "href": "api/EDlib.EDSM.SystemsOptions.html",
    "title": "Class SystemsOptions | EDlib",
    "keywords": "Class SystemsOptions Request options for EDSM Systems API methods. See EDSM API documentation for Systems v1 . Inheritance System.Object SystemsOptions Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public class SystemsOptions : IEquatable<SystemsOptions> Properties ShowCoordinates Include the stellar coordinates of the system in the results. Declaration public bool ShowCoordinates { get; set; } Property Value Type Description System.Boolean ShowId Include the EDSM system ID in the results. Declaration public bool ShowId { get; set; } Property Value Type Description System.Boolean ShowInformation Include a summary of system information in the results. Declaration public bool ShowInformation { get; set; } Property Value Type Description System.Boolean ShowPermit Include system permit details in the results. Declaration public bool ShowPermit { get; set; } Property Value Type Description System.Boolean ShowPrimaryStar Include primary star details in the results. Declaration public bool ShowPrimaryStar { get; set; } Property Value Type Description System.Boolean Methods Equals(SystemsOptions) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(SystemsOptions other) Parameters Type Name Description SystemsOptions other An object to compare with this object. Returns Type Description System.Boolean true if the current object is equal to the other parameter; otherwise, false. Equals(Object) Determines whether the specified , is equal to this instance. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The to compare with this instance. Returns Type Description System.Boolean true if the specified is equal to this instance; otherwise, false . GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table."
  },
  "api/EDlib.EDSM.SystemsService.html": {
    "href": "api/EDlib.EDSM.SystemsService.html",
    "title": "Class SystemsService | EDlib",
    "keywords": "Class SystemsService Gets data from the EDSM Systems API including allegiance, government, controlling faction, population, security and economic information. See EDSM API documentation for Systems v1 . Inheritance System.Object SystemsService Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public sealed class SystemsService : object Methods GetSystem(String, SystemsOptions, CancellationTokenSource, Int32, Boolean) Gets information about a solar system. Declaration public Task<SolarSystem> GetSystem(string systemName, SystemsOptions options, CancellationTokenSource cancelToken, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.String systemName The system name. SystemsOptions options The Systems API request options. CancellationTokenSource cancelToken A cancellation token. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < SolarSystem > Task<SolarSystem> Exceptions Type Condition APIException Errors from the API called. GetSystem(String, SystemsOptions, Int32, Boolean) Gets information about a solar system. Declaration public Task<SolarSystem> GetSystem(string systemName, SystemsOptions options, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.String systemName The system name. SystemsOptions options The Systems API request options. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < SolarSystem > Task<SolarSystem> Exceptions Type Condition APIException Errors from the API called. GetSystems(String[], SystemsOptions, CancellationTokenSource, Int32, Boolean) Gets information about an array of solar systems. Declaration public Task<(List<SolarSystem> systems, DateTime updated)> GetSystems(string[] systemNames, SystemsOptions options, CancellationTokenSource cancelToken, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.String [] systemNames An array of system names. SystemsOptions options The Systems API request options. CancellationTokenSource cancelToken A cancellation token. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < System.ValueTuple < List < SolarSystem >, DateTime >> Task<(List<SolarSystem>, DateTime)> Exceptions Type Condition APIException Errors from the API called. GetSystems(String[], SystemsOptions, Int32, Boolean) Gets information about an array of solar systems. Declaration public Task<(List<SolarSystem> systems, DateTime updated)> GetSystems(string[] systemNames, SystemsOptions options, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.String [] systemNames An array of system names. SystemsOptions options The Systems API request options. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < System.ValueTuple < List < SolarSystem >, DateTime >> Task<(List<SolarSystem>, DateTime)> Exceptions Type Condition APIException Errors from the API called. GetSystemsInCube(String, Int32, SystemsOptions, CancellationTokenSource, Int32, Boolean) Gets information about systems within a cube. Declaration public Task<(List<SolarSystem> systems, DateTime updated)> GetSystemsInCube(string systemName, int size, SystemsOptions options, CancellationTokenSource cancelToken, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.String systemName The name of the system at the centre of the cube. System.Int32 size The size of the cube in light years; max 200 ly. SystemsOptions options The Systems API request options. CancellationTokenSource cancelToken A cancellation token. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < System.ValueTuple < List < SolarSystem >, DateTime >> Task<(List<SolarSystem>, DateTime)> Exceptions Type Condition APIException Errors from the API called. GetSystemsInCube(String, Int32, SystemsOptions, Int32, Boolean) Gets information about systems within a cube. Declaration public Task<(List<SolarSystem> systems, DateTime updated)> GetSystemsInCube(string systemName, int size, SystemsOptions options, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.String systemName The name of the system at the centre of the cube. System.Int32 size The size of the cube in light years; max 200 ly. SystemsOptions options The Systems API request options. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < System.ValueTuple < List < SolarSystem >, DateTime >> Task<(List<SolarSystem>, DateTime)> Exceptions Type Condition APIException Errors from the API called. GetSystemsInSphere(String, Int32, Int32, SystemsOptions, CancellationTokenSource, Int32, Boolean) Gets information about systems within a sphere. Declaration public Task<(List<SolarSystem> systems, DateTime updated)> GetSystemsInSphere(string systemName, int radius, int minRadius, SystemsOptions options, CancellationTokenSource cancelToken, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.String systemName The name of the system at the centre of the sphere. System.Int32 radius The radius of the sphere in light years; max 100 ly. System.Int32 minRadius Set to a value between 0 and radius to reduce the returned results, in light years. SystemsOptions options The Systems API request options. CancellationTokenSource cancelToken A cancellation token. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < System.ValueTuple < List < SolarSystem >, DateTime >> Task<(List<SolarSystem>, DateTime)> Exceptions Type Condition APIException Errors from the API called. GetSystemsInSphere(String, Int32, Int32, SystemsOptions, Int32, Boolean) Gets information about systems within a sphere. Declaration public Task<(List<SolarSystem> systems, DateTime updated)> GetSystemsInSphere(string systemName, int radius, int minRadius, SystemsOptions options, int cacheMinutes = 5, bool ignoreCache = false) Parameters Type Name Description System.String systemName The name of the system at the centre of the sphere. System.Int32 radius The radius of the sphere in light years; max 100 ly. System.Int32 minRadius Set to a value between 0 and radius to reduce the returned results, in light years. SystemsOptions options The Systems API request options. System.Int32 cacheMinutes The number of minutes to cache the data, minimum 5 minutes. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < System.ValueTuple < List < SolarSystem >, DateTime >> Task<(List<SolarSystem>, DateTime)> Exceptions Type Condition APIException Errors from the API called. Instance(IDownloadService) Instantiates the SystemsService class. Declaration public static SystemsService Instance(IDownloadService downloadService) Parameters Type Name Description IDownloadService downloadService IDownloadService instance used to download data. Returns Type Description SystemsService SystemsService"
  },
  "api/EDlib.EDSM.SystemStations.html": {
    "href": "api/EDlib.EDSM.SystemStations.html",
    "title": "Class SystemStations | EDlib",
    "keywords": "Class SystemStations Lists the stations in a system returned by EDSM System API methods. See EDSM API documentation for System v1 . Inheritance System.Object SystemStations Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public class SystemStations : object Constructors SystemStations(Int64, Int64, String, String, List<Station>) Initializes a new instance of the SystemStations class. Declaration public SystemStations(long id, long id64, string name, string url, List<Station> stations) Parameters Type Name Description System.Int64 id The EDSM system ID. System.Int64 id64 The EDSM 64 bit system ID. System.String name The system name. System.String url The EDSM URL for the system. List < Station > stations Array of Station in the system. Properties Id The EDSM internal ID of the system. Declaration public long Id { get; set; } Property Value Type Description System.Int64 Id64 The EDSM internal ID of the system. (64 bit) Declaration public long Id64 { get; set; } Property Value Type Description System.Int64 LastUpdated The date and time when the information was requested. Declaration public DateTime LastUpdated { get; } Property Value Type Description DateTime Name The name of the system. Declaration public string Name { get; set; } Property Value Type Description System.String Stations List of Station in the system. Declaration public List<Station> Stations { get; set; } Property Value Type Description List < Station > Url The EDSM URL for the system. Declaration public string Url { get; set; } Property Value Type Description System.String"
  },
  "api/EDlib.EDSM.UpdateTime.html": {
    "href": "api/EDlib.EDSM.UpdateTime.html",
    "title": "Class UpdateTime | EDlib",
    "keywords": "Class UpdateTime Represents when the station details were last updated on ESDM. See EDSM API documentation for System v1 . Inheritance System.Object UpdateTime Namespace : EDlib.EDSM Assembly : Taranis.EDlib.dll Syntax public class UpdateTime : object Properties Information The date and time when the station data was last updated on EDSM. Declaration public DateTime Information { get; set; } Property Value Type Description DateTime Market The date and time when the market data was last updated on EDSM. Declaration public DateTime? Market { get; set; } Property Value Type Description System.Nullable < DateTime > Outfitting The date and time when the outfitting data was last updated on EDSM. Declaration public DateTime? Outfitting { get; set; } Property Value Type Description System.Nullable < DateTime > Shipyard The date and time when the shipyard data was last updated on EDSM. Declaration public DateTime? Shipyard { get; set; } Property Value Type Description System.Nullable < DateTime >"
  },
  "api/EDlib.GalNet.GalNetService.html": {
    "href": "api/EDlib.GalNet.GalNetService.html",
    "title": "Class GalNetService | EDlib",
    "keywords": "Class GalNetService Gets the latest GalNet News from an API provided by Taranis Software. Uses a Bag of Words technique to determine a Topic and content Tags for each article. Please cache for a minimum of 1 hour. Inheritance System.Object GalNetService Namespace : EDlib.GalNet Assembly : Taranis.EDlib.dll Syntax public sealed class GalNetService : object Methods GetData(Int32, CancellationTokenSource, String, String, Boolean) Gets the 20 most recent GalNet News articles. Declaration public Task<(List<NewsArticle> news, DateTime updated)> GetData(int expiryHours, CancellationTokenSource cancelToken, string BoW = null, string ignoreBoW = null, bool ignoreCache = false) Parameters Type Name Description System.Int32 expiryHours The number of hours to cache the data, minimum 1 hour. CancellationTokenSource cancelToken A cancellation token. System.String BoW An optional alternative Bag of Words to use when classifying articles as a json string. System.String ignoreBoW An optional alternative Bag of Words to ignore when classifying articles as a json string. System.Boolean ignoreCache Ignore any cached data if set to true . Returns Type Description Task < System.ValueTuple < List < NewsArticle >, DateTime >> Task<(List<NewsArticle>, DateTime)> GetData(Int32, Int32, CancellationTokenSource, String, String, Boolean) Gets the most recent GalNet News articles. Declaration public Task<(List<NewsArticle> news, DateTime updated)> GetData(int articleCount, int expiryHours, CancellationTokenSource cancelToken, string BoW = null, string ignoreBoW = null, bool ignoreCache = false) Parameters Type Name Description System.Int32 articleCount The number of articles to return. System.Int32 expiryHours The number of hours to cache the data, minimum 1 hour. CancellationTokenSource cancelToken A cancellation token. System.String BoW An optional alternative Bag of Words to use when classifying articles as a json string. System.String ignoreBoW An optional alternative Bag of Words to ignore when classifying articles as a json string. System.Boolean ignoreCache Ignore any cached data if set to true . Returns Type Description Task < System.ValueTuple < List < NewsArticle >, DateTime >> Task<(List<NewsArticle>, DateTime)> Instance(IDownloadService) Instantiates the GalNetService class. Declaration public static GalNetService Instance(IDownloadService downloadService) Parameters Type Name Description IDownloadService downloadService IDownloadService instance used to download data. Returns Type Description GalNetService GalNetService"
  },
  "api/EDlib.GalNet.html": {
    "href": "api/EDlib.GalNet.html",
    "title": "Namespace EDlib.GalNet | EDlib",
    "keywords": "Namespace EDlib.GalNet The EDlib.GalNet namespace contains classes and resources that encapsulate the GalNet news. EliteStatusService Gets the GalNet News and uses a Bag of Words technique to determine a Topic and content Tags for each article. Classes GalNetService Gets the latest GalNet News from an API provided by Taranis Software. Uses a Bag of Words technique to determine a Topic and content Tags for each article. Please cache for a minimum of 1 hour. NewsArticle Represents a GalNet News article."
  },
  "api/EDlib.GalNet.NewsArticle.html": {
    "href": "api/EDlib.GalNet.NewsArticle.html",
    "title": "Class NewsArticle | EDlib",
    "keywords": "Class NewsArticle Represents a GalNet News article. Inheritance System.Object NewsArticle Namespace : EDlib.GalNet Assembly : Taranis.EDlib.dll Syntax public class NewsArticle : object Properties Body The content of the News article. Declaration public string Body { get; set; } Property Value Type Description System.String Hid A unique identifier generated from a hash of the PublishDate and Title properties, useful when comparing datasets from different sources. Declaration public string Hid { get; } Property Value Type Description System.String Id Frontier Developments Id for the News article. Declaration public string Id { get; set; } Property Value Type Description System.String Link Link to the Galnet article on community.elitedangerous.com. Does not include the server part of the URL. Declaration public string Link { get; set; } Property Value Type Description System.String PublishDate The date when the article was published as a string. Declaration public string PublishDate { get; } Property Value Type Description System.String PublishDateTime The date when the article was published. Declaration public DateTime PublishDateTime { get; set; } Property Value Type Description DateTime Tags Content tags for the News article, generated using a Bag of Words technique. Declaration public List<string> Tags { get; } Property Value Type Description List < System.String > Title The title of the News article. Declaration public string Title { get; set; } Property Value Type Description System.String Topic The topic of the News article, generated using a Bag of Words technique. Declaration public string Topic { get; } Property Value Type Description System.String Methods ClassifyArticle(List<Topic>, List<Topic>) Determines the Topic and content Tags for an article by analysing it using a Bag of Words technique. Declaration protected void ClassifyArticle(List<Topic> topics, List<Topic> ignoreTopics) Parameters Type Name Description List < Topic > topics List of Topic to use when classifying article. List < Topic > ignoreTopics List of Topic to ignore when classifying article. ToString() Returns the Title and Body of an article as a string. Declaration public override string ToString() Returns Type Description System.String"
  },
  "api/EDlib.html": {
    "href": "api/EDlib.html",
    "title": "Namespace EDlib | EDlib",
    "keywords": "Namespace EDlib The EDlib namespace contains custom exceptions that can be thrown by the library. APIException Represents errors returned by an API, often including an HTTP status code. NoNetworkNoCacheException Represents errors that occur because no network is available and no data is cached. Classes APIException Represents errors from an API. LinkerSafeAttribute This attribute allows you to mark your assemblies as safe to link. When present the linker will process the assembly even if you’re using the \"SDK Assemblies Only\" option. NoNetworkNoCacheException Represents errors that occur because no network is available and no data is cached."
  },
  "api/EDlib.INARA.CommanderProfile.html": {
    "href": "api/EDlib.INARA.CommanderProfile.html",
    "title": "Class CommanderProfile | EDlib",
    "keywords": "Class CommanderProfile Represents basic information about a Commander from the INARA API. See INARA documentation for getCommanderProfile . Inheritance System.Object CommanderProfile Namespace : EDlib.INARA Assembly : Taranis.EDlib.dll Syntax public class CommanderProfile : object Constructors CommanderProfile() Initializes a new instance of the CommanderProfile class. Declaration public CommanderProfile() Properties AvatarImageUrl URL for the Commander's avatar image on INARA. (jpeg) Declaration public string AvatarImageUrl { get; set; } Property Value Type Description System.String InaraUrl URL for the Commander's profile on INARA. Declaration public string InaraUrl { get; set; } Property Value Type Description System.String LastUpdated The date and time when the information was requested. Declaration public DateTime LastUpdated { get; } Property Value Type Description DateTime MainShip The Commander's main ship as set on INARA. Declaration public CommanderShip MainShip { get; set; } Property Value Type Description CommanderShip OtherNamesFound List of possible Commander names returned when a partial match is found. Declaration public List<string> OtherNamesFound { get; set; } Property Value Type Description List < System.String > PreferredAllegiance The Commander's superpower allegiance. Declaration public string PreferredAllegiance { get; set; } Property Value Type Description System.String PreferredGameRole The Commander's preferred role in game. Declaration public string PreferredGameRole { get; set; } Property Value Type Description System.String PreferredPower The Galactic Power supported by the Commander. Declaration public string PreferredPower { get; set; } Property Value Type Description System.String Ranks The Commander's ranks in combat, trade, exploration, etc. Declaration public List<CommanderRank> Ranks { get; set; } Property Value Type Description List < CommanderRank > Squadron The Commander's Squadron. Declaration public CommanderSquadron Squadron { get; set; } Property Value Type Description CommanderSquadron UserId The Commander's user ID on INARA. Declaration public long UserId { get; set; } Property Value Type Description System.Int64 UserName The Commander's user name on INARA. Declaration public string UserName { get; set; } Property Value Type Description System.String Wing The Commander's Wing. Declaration public CommanderWing Wing { get; set; } Property Value Type Description CommanderWing"
  },
  "api/EDlib.INARA.CommanderProfileService.html": {
    "href": "api/EDlib.INARA.CommanderProfileService.html",
    "title": "Class CommanderProfileService | EDlib",
    "keywords": "Class CommanderProfileService Gets basic information about a Commander from the INARA API like ranks, squadron and allegiance. See INARA documentation for getCommanderProfile . Note: The information returned will be determined by the Commander's privacy settings on INARA. Inheritance System.Object CommanderProfileService Namespace : EDlib.INARA Assembly : Taranis.EDlib.dll Syntax public sealed class CommanderProfileService : object Methods GetData(String, Int32, InaraIdentity, CancellationTokenSource, Boolean) Gets basic information about a Commander from the INARA API. Declaration public Task<CommanderProfile> GetData(string searchName, int cacheMinutes, InaraIdentity identity, CancellationTokenSource cancelToken, bool ignoreCache = false) Parameters Type Name Description System.String searchName The Commander's name to search for. If an exact match is not found a number of partial matches may be returned. System.Int32 cacheMinutes How long to cache the data in minutes, minimum 5 minutes. InaraIdentity identity The InaraIdentity credentials required to access the INARA API. CancellationTokenSource cancelToken A cancellation token. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < CommanderProfile > Task<CommanderProfile> Instance(IDownloadService) Instantiates the CommanderProfileService class. Declaration public static CommanderProfileService Instance(IDownloadService downloadService) Parameters Type Name Description IDownloadService downloadService IDownloadService instance used to download data. Returns Type Description CommanderProfileService CommanderProfileService"
  },
  "api/EDlib.INARA.CommanderRank.html": {
    "href": "api/EDlib.INARA.CommanderRank.html",
    "title": "Class CommanderRank | EDlib",
    "keywords": "Class CommanderRank Information about a Commander's rank returned by the INARA API. Inheritance System.Object CommanderRank Namespace : EDlib.INARA Assembly : Taranis.EDlib.dll Syntax public class CommanderRank : object Properties Name The name of the rank. Declaration public string Name { get; set; } Property Value Type Description System.String Progress The Commander's progress in their current rank. Declaration public double Progress { get; set; } Property Value Type Description System.Double Value The rank reached by the Commander. Declaration public int Value { get; set; } Property Value Type Description System.Int32"
  },
  "api/EDlib.INARA.CommanderShip.html": {
    "href": "api/EDlib.INARA.CommanderShip.html",
    "title": "Class CommanderShip | EDlib",
    "keywords": "Class CommanderShip Basic information about a Commander's ship returned by the INARA API. Inheritance System.Object CommanderShip Namespace : EDlib.INARA Assembly : Taranis.EDlib.dll Syntax public class CommanderShip : object Properties Ident The ship's ID tag. Declaration public string Ident { get; set; } Property Value Type Description System.String Name The ship's name. Declaration public string Name { get; set; } Property Value Type Description System.String Role The ship's role. Declaration public string Role { get; set; } Property Value Type Description System.String Type The ship type. Declaration public string Type { get; set; } Property Value Type Description System.String"
  },
  "api/EDlib.INARA.CommanderSquadron.html": {
    "href": "api/EDlib.INARA.CommanderSquadron.html",
    "title": "Class CommanderSquadron | EDlib",
    "keywords": "Class CommanderSquadron Information about a Commander's squadron returned by the INARA API. Inheritance System.Object CommanderSquadron Namespace : EDlib.INARA Assembly : Taranis.EDlib.dll Syntax public class CommanderSquadron : object Properties Id The squadron's ID on INARA. Declaration public long Id { get; set; } Property Value Type Description System.Int64 InaraUrl URL for the squadron's profile on INARA. Declaration public string InaraUrl { get; set; } Property Value Type Description System.String MembersCount The number of Commanders in the squadron. Declaration public long MembersCount { get; set; } Property Value Type Description System.Int64 Name The squadron's name. Declaration public string Name { get; set; } Property Value Type Description System.String Rank The Commander's rank in the squadron. Declaration public string Rank { get; set; } Property Value Type Description System.String"
  },
  "api/EDlib.INARA.CommanderWing.html": {
    "href": "api/EDlib.INARA.CommanderWing.html",
    "title": "Class CommanderWing | EDlib",
    "keywords": "Class CommanderWing Information about a Commander's wing returned by the INARA API. Inheritance System.Object CommanderWing Namespace : EDlib.INARA Assembly : Taranis.EDlib.dll Syntax public class CommanderWing : object Properties Id The wing's ID on INARA. Declaration public long Id { get; set; } Property Value Type Description System.Int64 InaraUrl URL for the wing's profile on INARA. Declaration public string InaraUrl { get; set; } Property Value Type Description System.String MembersCount The number of Commanders in the wing. Declaration public long MembersCount { get; set; } Property Value Type Description System.Int64 Name The wing's name. Declaration public string Name { get; set; } Property Value Type Description System.String Rank The Commander's rank in the wing. Declaration public string Rank { get; set; } Property Value Type Description System.String"
  },
  "api/EDlib.INARA.CommunityGoal.html": {
    "href": "api/EDlib.INARA.CommunityGoal.html",
    "title": "Class CommunityGoal | EDlib",
    "keywords": "Class CommunityGoal Represents a Community Goal returned by the INARA API. See INARA documentation for getCommunityGoalsRecent . Inheritance System.Object CommunityGoal Namespace : EDlib.INARA Assembly : Taranis.EDlib.dll Syntax public class CommunityGoal : INotifyPropertyChanged Constructors CommunityGoal() Initializes a new empty instance of the CommunityGoal class. Declaration public CommunityGoal() Properties CommunityGoalGameID The ID of the community goal. Declaration public int CommunityGoalGameID { get; set; } Property Value Type Description System.Int32 CommunityGoalName The name of the Community goal. Declaration public string CommunityGoalName { get; set; } Property Value Type Description System.String ContributionsTotal The total contributions to the Community Goal. Declaration public long ContributionsTotal { get; set; } Property Value Type Description System.Int64 ContributorsNum The number of contributors to the Community Goal. Declaration public int ContributorsNum { get; set; } Property Value Type Description System.Int32 GoalDescriptionText The full description of the Community Goal. Declaration public string GoalDescriptionText { get; set; } Property Value Type Description System.String GoalExpiry The date and time when the Community Goal ends. Declaration public DateTime GoalExpiry { get; set; } Property Value Type Description DateTime GoalObjectiveText The objective for the Community Goal. Declaration public string GoalObjectiveText { get; set; } Property Value Type Description System.String GoalRewardText The reward for the Community Goal. Declaration public string GoalRewardText { get; set; } Property Value Type Description System.String InaraURL The INARA URL for this Community Goal. Declaration public string InaraURL { get; set; } Property Value Type Description System.String IsCompleted Whether the Community Goal has ended. Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean LastUpdate The date and time when INARA last updated this information. Declaration public DateTime LastUpdate { get; set; } Property Value Type Description DateTime Progress The date and time when the Community Goal ends. Declaration public double Progress { get; } Property Value Type Description System.Double ProgressText The progress of the Community Goal. (Progress x/y Tiers) Declaration public string ProgressText { get; } Property Value Type Description System.String StarsystemName The name of the system where the Community Goal taking place. Declaration public string StarsystemName { get; set; } Property Value Type Description System.String StationName The name of the station where the Community Goal taking place. Declaration public string StationName { get; set; } Property Value Type Description System.String TierMax The maximum number of tiers. If reached, the Community Goal ends. Declaration public int TierMax { get; set; } Property Value Type Description System.Int32 TierReached The current tier reached. Declaration public int TierReached { get; set; } Property Value Type Description System.Int32 TimeRemaining The time remaining until this Community Goal expires. Declaration public TimeSpan TimeRemaining { get; set; } Property Value Type Description TimeSpan Topic The topic for this Community Goal, generated using a Bag of Words technique. Declaration public string Topic { get; } Property Value Type Description System.String Methods OnPropertyChanged(String) Raised when TimeRemaining or IsCompleted properties change to handle System.ComponentModel.INotifyPropertyChanged.PropertyChanged. Note: TimeRemaining is a public property, use a timer to update TimeRemaining and IsCompleted will update automatically. Declaration protected virtual void OnPropertyChanged(string propertyName) Parameters Type Name Description System.String propertyName Name of the property that changed. ToString() Returns the Name, System and Objective for a Community Goal as a string. Declaration public override string ToString() Returns Type Description System.String Events PropertyChanged Raised when some properties change. Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler"
  },
  "api/EDlib.INARA.CommunityGoalsService.html": {
    "href": "api/EDlib.INARA.CommunityGoalsService.html",
    "title": "Class CommunityGoalsService | EDlib",
    "keywords": "Class CommunityGoalsService Gets details of ongoing and recently completed Community Goals from the INARA API. See INARA documentation for getCommunityGoalsRecent . Inheritance System.Object CommunityGoalsService Namespace : EDlib.INARA Assembly : Taranis.EDlib.dll Syntax public sealed class CommunityGoalsService : object Methods GetData(Int32, InaraIdentity, CancellationTokenSource, String, Boolean) Gets all the recent Community Goals from INARA; usually 15. Declaration public Task<(List<CommunityGoal> goals, DateTime updated)> GetData(int cacheMinutes, InaraIdentity identity, CancellationTokenSource cancelToken, string BoW = null, bool ignoreCache = false) Parameters Type Name Description System.Int32 cacheMinutes How long to cache the data in minutes, minimum 60 minutes. InaraIdentity identity The InaraIdentity credentials required to access the INARA API. CancellationTokenSource cancelToken A cancellation token. System.String BoW An optional alternative Bag of Words to use when classifying Community Goals, passed as a json string. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < System.ValueTuple < List < CommunityGoal >, DateTime >> Task<(List<CommunityGoal>, DateTime)> GetData(Int32, Int32, InaraIdentity, CancellationTokenSource, String, Boolean) Gets a number of recent Community Goals from INARA. Declaration public Task<(List<CommunityGoal> goals, DateTime updated)> GetData(int goalCount, int cacheMinutes, InaraIdentity identity, CancellationTokenSource cancelToken, string BoW = null, bool ignoreCache = false) Parameters Type Name Description System.Int32 goalCount The number of Community Goals to return. System.Int32 cacheMinutes How long to cache the data in minutes, minimum 60 minutes. InaraIdentity identity The InaraIdentity credentials required to access the INARA API. CancellationTokenSource cancelToken A cancellation token. System.String BoW An optional alternative Bag of Words to use when classifying Community Goals, passed as a json string. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < System.ValueTuple < List < CommunityGoal >, DateTime >> Task<(List<CommunityGoal>, DateTime)> GetDataByTime(Int32, Int32, InaraIdentity, CancellationTokenSource, String, Boolean) Gets recent Community Goals from INARA over a specified number of days. Declaration public Task<(List<CommunityGoal> goals, DateTime updated)> GetDataByTime(int requestDays, int cacheMinutes, InaraIdentity identity, CancellationTokenSource cancelToken, string BoW = null, bool ignoreCache = false) Parameters Type Name Description System.Int32 requestDays How many days back to look for Community Goals, minimum 7 days. System.Int32 cacheMinutes How long to cache the data in minutes, minimum 60 minutes. InaraIdentity identity The InaraIdentity credentials required to access the INARA API. CancellationTokenSource cancelToken A cancellation token. System.String BoW An optional alternative Bag of Words to use when classifying Community Goals, passed as a json string. System.Boolean ignoreCache Ignores any cached data if set to true . Returns Type Description Task < System.ValueTuple < List < CommunityGoal >, DateTime >> Task<(List<CommunityGoal>, DateTime)> Instance(IDownloadService) Instantiates the CommunityGoalsService class. Declaration public static CommunityGoalsService Instance(IDownloadService downloadService) Parameters Type Name Description IDownloadService downloadService IDownloadService instance used to download data. Returns Type Description CommunityGoalsService CommunityGoalsService"
  },
  "api/EDlib.INARA.html": {
    "href": "api/EDlib.INARA.html",
    "title": "Namespace EDlib.INARA | EDlib",
    "keywords": "Namespace EDlib.INARA The EDlib.INARA namespace contains classes and resources for interacting with the INARA API . NOTE: Before using the INARA API you must contact Artie , owner of INARA to have your app whitelisted. All requests to the INARA API require an InaraIdentity object which encapsulates authentication data for the INARA API with the properties: AppName - The name of the application, must match the name whitelisted by INARA. AppVersion - The version of the application. ApiKey - A user's personal API key or a generic application API key (for read-only events). IsDeveloped - A flag indicating this version is in development. CommanderProfileService Gets basic information about a Commander from the INARA API like ranks, squadron and allegiance. See INARA documentation for getCommanderProfile . Note: The information returned will be determined by the Commander's privacy settings on INARA. CommunityGoalsService Gets details of ongoing and recently completed Community Goals from the INARA API. See INARA documentation for getCommunityGoalsRecent ). Classes CommanderProfile Represents basic information about a Commander from the INARA API. See INARA documentation for getCommanderProfile . CommanderProfileService Gets basic information about a Commander from the INARA API like ranks, squadron and allegiance. See INARA documentation for getCommanderProfile . Note: The information returned will be determined by the Commander's privacy settings on INARA. CommanderRank Information about a Commander's rank returned by the INARA API. CommanderShip Basic information about a Commander's ship returned by the INARA API. CommanderSquadron Information about a Commander's squadron returned by the INARA API. CommanderWing Information about a Commander's wing returned by the INARA API. CommunityGoal Represents a Community Goal returned by the INARA API. See INARA documentation for getCommunityGoalsRecent . CommunityGoalsService Gets details of ongoing and recently completed Community Goals from the INARA API. See INARA documentation for getCommunityGoalsRecent . InaraEvent Represents the data block in an INARA API request and response. See INARA documentation for Events properties . InaraHeader Represents the header block in an INARA API request and response. See INARA documentation for Header properties . InaraIdentity Represents the credentials required to access the INARA API. See INARA documentation for Header properties . InaraService Utility service used by other services to get data from INARA APIs. See INARA API documentation. . Structs InaraRequest Represents an INARA API request and response. See INARA API documentation. ."
  },
  "api/EDlib.INARA.InaraEvent.html": {
    "href": "api/EDlib.INARA.InaraEvent.html",
    "title": "Class InaraEvent | EDlib",
    "keywords": "Class InaraEvent Represents the data block in an INARA API request and response. See INARA documentation for Events properties . Inheritance System.Object InaraEvent Namespace : EDlib.INARA Assembly : Taranis.EDlib.dll Syntax public class InaraEvent : object Constructors InaraEvent(String, Object) Initializes a new instance of the InaraEvent class. Declaration public InaraEvent(string name, object data) Parameters Type Name Description System.String name The name of the event / method. System.Object data The event data. Properties EventData Required properties for a request / data returned by the API. Individual event properties are detailed in the event's documentation. Declaration public dynamic EventData { get; } Property Value Type Description System.Object EventName The name of the event / method. Declaration public string EventName { get; } Property Value Type Description System.String EventStatus Event status code, see INARA eventStatus codes . Declaration public int? EventStatus { get; } Property Value Type Description System.Nullable < System.Int32 > EventStatusText Explanation of the status code, only returned on errors and warnings. Declaration public string EventStatusText { get; } Property Value Type Description System.String EventTimestamp Date and time in ISO 8601 format (like: 2017-05-02T17:30:49Z) Declaration public DateTime EventTimestamp { get; } Property Value Type Description DateTime"
  },
  "api/EDlib.INARA.InaraHeader.html": {
    "href": "api/EDlib.INARA.InaraHeader.html",
    "title": "Class InaraHeader | EDlib",
    "keywords": "Class InaraHeader Represents the header block in an INARA API request and response. See INARA documentation for Header properties . Inheritance System.Object InaraHeader Namespace : EDlib.INARA Assembly : Taranis.EDlib.dll Syntax public class InaraHeader : object Constructors InaraHeader() Initializes a new empty instance of the InaraHeader class. Declaration public InaraHeader() InaraHeader(InaraIdentity) Initializes a new instance of the InaraHeader class with the provided credentials. Declaration public InaraHeader(InaraIdentity identity) Parameters Type Name Description InaraIdentity identity The InaraIdentity credentials required to access the INARA API. Properties ApiKey A user's personal API key or a generic application API key (for read-only events). Declaration public string ApiKey { get; } Property Value Type Description System.String AppName The name of the application. Declaration public string AppName { get; } Property Value Type Description System.String AppVersion The version of the application. Declaration public string AppVersion { get; } Property Value Type Description System.String EventStatus Event status code, see INARA eventStatus codes . Declaration public int? EventStatus { get; } Property Value Type Description System.Nullable < System.Int32 > EventStatusText Explanation of the status code, only returned on errors and warnings. Declaration public string EventStatusText { get; } Property Value Type Description System.String IsDeveloped Set to true to indicate this version is in development. Declaration public bool IsDeveloped { get; } Property Value Type Description System.Boolean"
  },
  "api/EDlib.INARA.InaraIdentity.html": {
    "href": "api/EDlib.INARA.InaraIdentity.html",
    "title": "Class InaraIdentity | EDlib",
    "keywords": "Class InaraIdentity Represents the credentials required to access the INARA API. See INARA documentation for Header properties . Inheritance System.Object InaraIdentity Namespace : EDlib.INARA Assembly : Taranis.EDlib.dll Syntax public class InaraIdentity : object Constructors InaraIdentity(String, String, String, Boolean) Initializes a new instance of the InaraIdentity class with the provided credentials. Declaration public InaraIdentity(string appName, string appVersion, string apiKey, bool isDeveloped) Parameters Type Name Description System.String appName The name of the application. System.String appVersion The version of the application. System.String apiKey A user's personal API key or a generic application API key. System.Boolean isDeveloped Set true if in development. Properties ApiKey A user's personal API key or a generic application API key (for read-only events). Declaration public string ApiKey { get; } Property Value Type Description System.String AppName The name of the application. Declaration public string AppName { get; } Property Value Type Description System.String AppVersion The version of the application. Declaration public string AppVersion { get; } Property Value Type Description System.String IsDeveloped Set to true to indicate this version is in development. Declaration public bool IsDeveloped { get; } Property Value Type Description System.Boolean"
  },
  "api/EDlib.INARA.InaraRequest.html": {
    "href": "api/EDlib.INARA.InaraRequest.html",
    "title": "Struct InaraRequest | EDlib",
    "keywords": "Struct InaraRequest Represents an INARA API request and response. See INARA API documentation. . Namespace : EDlib.INARA Assembly : Taranis.EDlib.dll Syntax public struct InaraRequest Fields Events The data block in an INARA API request and response. Declaration public IList<InaraEvent> Events Field Value Type Description IList < InaraEvent > Header The header block in an INARA API request and response. Declaration public InaraHeader Header Field Value Type Description InaraHeader"
  },
  "api/EDlib.INARA.InaraService.html": {
    "href": "api/EDlib.INARA.InaraService.html",
    "title": "Class InaraService | EDlib",
    "keywords": "Class InaraService Utility service used by other services to get data from INARA APIs. See INARA API documentation. . Inheritance System.Object InaraService Namespace : EDlib.INARA Assembly : Taranis.EDlib.dll Syntax public sealed class InaraService : object Methods GetData(InaraHeader, IList<InaraEvent>, DownloadOptions) Gets data from an INARA API. Declaration public Task<(string data, DateTime updated)> GetData(InaraHeader header, IList<InaraEvent> input, DownloadOptions options) Parameters Type Name Description InaraHeader header The header for an INARA API request. IList < InaraEvent > input The data for an INARA API request. DownloadOptions options Options for download. Returns Type Description Task < System.ValueTuple < System.String , DateTime >> Task<(string, DateTime)> Exceptions Type Condition APIException Errors from the API called. Instance(IDownloadService) Instantiates the InaraService class. Declaration public static InaraService Instance(IDownloadService downloadService) Parameters Type Name Description IDownloadService downloadService IDownloadService instance used to download data. Returns Type Description InaraService InaraService"
  },
  "api/EDlib.LinkerSafeAttribute.html": {
    "href": "api/EDlib.LinkerSafeAttribute.html",
    "title": "Class LinkerSafeAttribute | EDlib",
    "keywords": "Class LinkerSafeAttribute This attribute allows you to mark your assemblies as safe to link. When present the linker will process the assembly even if you’re using the \"SDK Assemblies Only\" option. Inheritance System.Object LinkerSafeAttribute Namespace : EDlib Assembly : Taranis.EDlib.dll Syntax public class LinkerSafeAttribute : Attribute"
  },
  "api/EDlib.Network.CachedDownloadService.html": {
    "href": "api/EDlib.Network.CachedDownloadService.html",
    "title": "Class CachedDownloadService | EDlib",
    "keywords": "Class CachedDownloadService Service used to download and cache data. Inheritance System.Object CachedDownloadService Implements IDownloadService Namespace : EDlib.Network Assembly : Taranis.EDlib.dll Syntax public sealed class CachedDownloadService : object, IDownloadService Methods GetData(String, DownloadOptions) Gets data from an API, caches the data and when it was last updated with the option to cancel the request. If a copy of the data exists in the cache and has not expired it will be returned, otherwise the data will be downloaded. Declaration public Task<(string data, DateTime updated)> GetData(string url, DownloadOptions options) Parameters Type Name Description System.String url The URL for downloading the data. DownloadOptions options Options structure for download. Returns Type Description Task < System.ValueTuple < System.String , DateTime >> Task<(string data, DateTime updated)> Exceptions Type Condition NoNetworkNoCacheException No Internet available and no data cached. APIException Http errors from the API called. Instance(String, ICacheService, IConnectivityService) Instantiates the CachedDownloadService class. Declaration public static CachedDownloadService Instance(string userAgent, ICacheService cacheService, IConnectivityService connectivityService) Parameters Type Name Description System.String userAgent The user agent used for downloads. ICacheService cacheService The platform specific cache for downloaded data. IConnectivityService connectivityService The platform specific connectivity service. Returns Type Description CachedDownloadService DownloadService PostData(String, String, DownloadOptions) Posts a request to an API, caches the response and when it was last updated with the option to cancel the request. If a copy of the response exists in the cache and has not expired it will be returned, otherwise the API will be queried. Declaration public Task<(string data, DateTime updated)> PostData(string url, string content, DownloadOptions options) Parameters Type Name Description System.String url The URL of the API. System.String content The content of the API request. DownloadOptions options Options structure for download. Returns Type Description Task < System.ValueTuple < System.String , DateTime >> Task<(string data, DateTime updated)> Exceptions Type Condition NoNetworkNoCacheException No Internet available and no data cached. APIException Http errors from the API called. Implements IDownloadService"
  },
  "api/EDlib.Network.DownloadOptions.html": {
    "href": "api/EDlib.Network.DownloadOptions.html",
    "title": "Struct DownloadOptions | EDlib",
    "keywords": "Struct DownloadOptions Options structure for download services. Namespace : EDlib.Network Assembly : Taranis.EDlib.dll Syntax public struct DownloadOptions Constructors DownloadOptions(CancellationTokenSource) DownloadOptions constructor. Declaration public DownloadOptions(CancellationTokenSource cancelToken = null) Parameters Type Name Description CancellationTokenSource cancelToken A cancellation token for the download method. (optional) DownloadOptions(CancellationTokenSource, TimeSpan) DownloadOptions constructor. Declaration public DownloadOptions(CancellationTokenSource cancelToken, TimeSpan expiry) Parameters Type Name Description CancellationTokenSource cancelToken A cancellation token. TimeSpan expiry How long to cache the data. DownloadOptions(CancellationTokenSource, TimeSpan, Boolean) DownloadOptions constructor. Declaration public DownloadOptions(CancellationTokenSource cancelToken, TimeSpan expiry, bool ignoreCache) Parameters Type Name Description CancellationTokenSource cancelToken A cancellation token. TimeSpan expiry How long to cache the data. System.Boolean ignoreCache Ignore any cached data if set to true . DownloadOptions(TimeSpan) DownloadOptions constructor. Declaration public DownloadOptions(TimeSpan expiry) Parameters Type Name Description TimeSpan expiry How long to cache the data. DownloadOptions(TimeSpan, Boolean) DownloadOptions constructor. Declaration public DownloadOptions(TimeSpan expiry, bool ignoreCache) Parameters Type Name Description TimeSpan expiry How long to cache the data. System.Boolean ignoreCache Ignore any cached data if set to true . Properties CancelToken A cancellation token for the download method. Declaration public CancellationTokenSource CancelToken { get; } Property Value Type Description CancellationTokenSource Expiry How long to cache the data. Declaration public TimeSpan Expiry { get; } Property Value Type Description TimeSpan IgnoreCache Download method will ignore any cached data if set to true . Declaration public bool IgnoreCache { get; } Property Value Type Description System.Boolean"
  },
  "api/EDlib.Network.DownloadService.html": {
    "href": "api/EDlib.Network.DownloadService.html",
    "title": "Class DownloadService | EDlib",
    "keywords": "Class DownloadService Service used to download data with no cache. Inheritance System.Object DownloadService Implements IDownloadService Namespace : EDlib.Network Assembly : Taranis.EDlib.dll Syntax public sealed class DownloadService : object, IDownloadService Methods GetData(String, DownloadOptions) Gets data from an API and returns the response with the option to cancel the request. Declaration public Task<(string data, DateTime updated)> GetData(string url, DownloadOptions options) Parameters Type Name Description System.String url The URL of the API. DownloadOptions options Options structure for download. Returns Type Description Task < System.ValueTuple < System.String , DateTime >> Task<(string data, DateTime updated)> Exceptions Type Condition NoNetworkNoCacheException No Internet available and no data cached. APIException Http errors from the API called. Instance(String, IConnectivityService) Instantiates the DownloadService class. Declaration public static DownloadService Instance(string userAgent, IConnectivityService connectivityService) Parameters Type Name Description System.String userAgent The user agent used for downloads. IConnectivityService connectivityService The platform specific connectivity service. Returns Type Description DownloadService DownloadService PostData(String, String, DownloadOptions) Posts a request to an API and returns the response with the option to cancel the request. Declaration public Task<(string data, DateTime updated)> PostData(string url, string content, DownloadOptions options) Parameters Type Name Description System.String url The URL of the API. System.String content The content of the API request. DownloadOptions options Options structure for download. Returns Type Description Task < System.ValueTuple < System.String , DateTime >> Task<(string data, DateTime updated)> Exceptions Type Condition NoNetworkNoCacheException No Internet available and no data cached. APIException Http errors from the API called. Implements IDownloadService"
  },
  "api/EDlib.Network.html": {
    "href": "api/EDlib.Network.html",
    "title": "Namespace EDlib.Network | EDlib",
    "keywords": "Namespace EDlib.Network The EDlib.Network namespace contains classes and interfaces used to get data from the Internet. DownloadOptions Options structure for download services. IDownloadService Interface for the services used to download data. DownloadService Service used to download data with no cache. CachedDownloadService Service used to download and cache data. Classes CachedDownloadService Service used to download and cache data. DownloadService Service used to download data with no cache. HttpHelper A helper class for reading an http response that can decompress data in gzip or deflate streams. Sha256Helper A helper class for generating an SHA256 hash. Structs DownloadOptions Options structure for download services. Interfaces IDownloadService Interface for the services used to download data."
  },
  "api/EDlib.Network.HttpHelper.html": {
    "href": "api/EDlib.Network.HttpHelper.html",
    "title": "Class HttpHelper | EDlib",
    "keywords": "Class HttpHelper A helper class for reading an http response that can decompress data in gzip or deflate streams. Inheritance System.Object HttpHelper Namespace : EDlib.Network Assembly : Taranis.EDlib.dll Syntax public static class HttpHelper : object Methods ReadContentAsync(HttpResponseMessage) Gets the content of an http response which may be compressed. Declaration public static Task<string> ReadContentAsync(HttpResponseMessage response) Parameters Type Name Description HttpResponseMessage response The http response. Returns Type Description Task < System.String > Task<string>"
  },
  "api/EDlib.Network.IDownloadService.html": {
    "href": "api/EDlib.Network.IDownloadService.html",
    "title": "Interface IDownloadService | EDlib",
    "keywords": "Interface IDownloadService Interface for the services used to download data. Namespace : EDlib.Network Assembly : Taranis.EDlib.dll Syntax public interface IDownloadService Methods GetData(String, DownloadOptions) Gets data from an API and returns the response with the option to cancel the request. Declaration Task<(string data, DateTime updated)> GetData(string url, DownloadOptions options) Parameters Type Name Description System.String url The URL of the API. DownloadOptions options Options structure for download. Returns Type Description Task < System.ValueTuple < System.String , DateTime >> Task<(string data, DateTime updated)> PostData(String, String, DownloadOptions) Posts a request to an API and returns the response with the option to cancel the request. Declaration Task<(string data, DateTime updated)> PostData(string url, string content, DownloadOptions options) Parameters Type Name Description System.String url The URL of the API. System.String content The content of the API request. DownloadOptions options Options structure for download. Returns Type Description Task < System.ValueTuple < System.String , DateTime >> Task<(string data, DateTime updated)>"
  },
  "api/EDlib.Network.Sha256Helper.html": {
    "href": "api/EDlib.Network.Sha256Helper.html",
    "title": "Class Sha256Helper | EDlib",
    "keywords": "Class Sha256Helper A helper class for generating an SHA256 hash. Inheritance System.Object Sha256Helper Namespace : EDlib.Network Assembly : Taranis.EDlib.dll Syntax public static class Sha256Helper : object Methods GenerateHash(String) Generates the SHA256 hash of a string. Declaration public static string GenerateHash(string input) Parameters Type Name Description System.String input The string to be hashed. Returns Type Description System.String string"
  },
  "api/EDlib.NoNetworkNoCacheException.html": {
    "href": "api/EDlib.NoNetworkNoCacheException.html",
    "title": "Class NoNetworkNoCacheException | EDlib",
    "keywords": "Class NoNetworkNoCacheException Represents errors that occur because no network is available and no data is cached. Inheritance System.Object NoNetworkNoCacheException Namespace : EDlib Assembly : Taranis.EDlib.dll Syntax public class NoNetworkNoCacheException : Exception Constructors NoNetworkNoCacheException() Initializes a new instance of the NoNetworkNoCacheException class. Declaration public NoNetworkNoCacheException() NoNetworkNoCacheException(SerializationInfo, StreamingContext) Initializes a new instance of the NoNetworkNoCacheException class with serialised data. Declaration protected NoNetworkNoCacheException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. NoNetworkNoCacheException(String) Initializes a new instance of the NoNetworkNoCacheException class with a specified error message. Declaration public NoNetworkNoCacheException(string message) Parameters Type Name Description System.String message The message that describes the error. NoNetworkNoCacheException(String, Exception) Initializes a new instance of the NoNetworkNoCacheException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public NoNetworkNoCacheException(string message, Exception innerException) Parameters Type Name Description System.String message The error message that explains the reason for the exception. Exception innerException The exception that is the cause of the current exception, or a null reference if no inner exception is specified."
  },
  "api/EDlib.Platform.CacheState.html": {
    "href": "api/EDlib.Platform.CacheState.html",
    "title": "Enum CacheState | EDlib",
    "keywords": "Enum CacheState Represents the current state of an item in the cache. Namespace : EDlib.Platform Assembly : Taranis.EDlib.dll Syntax public enum CacheState : int Fields Name Description Active Active non-expired cache item. Expired Expired cache item. None An unknown state for the cache item."
  },
  "api/EDlib.Platform.html": {
    "href": "api/EDlib.Platform.html",
    "title": "Namespace EDlib.Platform | EDlib",
    "keywords": "Namespace EDlib.Platform The EDlib.Platform namespace contains interfaces for platform specific services and the linker Preserve attribute. ICacheService Interface for a platform specific data caching service. IConnectivityService Interface for a platform specific data connectivity service. PreserveAttribute Linker control attribute. See Linking Xamarin.iOS Apps for more details (the attribute is not Xamarin.iOS specific but this is the best documentation). Classes PreserveAttribute Linker control attribute. To preserve the whole type, use the syntax [Preserve (AllMembers = true)] on the type. To preserve a member if the containing type was preserved, use [Preserve (Conditional=true)] on the member. See: https://docs.microsoft.com/en-gb/xamarin/ios/deploy-test/linker Interfaces ICacheService Interface for a platform specific data caching service. IConnectivityService Interface for a platform specific data connectivity service. Enums CacheState Represents the current state of an item in the cache."
  },
  "api/EDlib.Platform.ICacheService.html": {
    "href": "api/EDlib.Platform.ICacheService.html",
    "title": "Interface ICacheService | EDlib",
    "keywords": "Interface ICacheService Interface for a platform specific data caching service. Namespace : EDlib.Platform Assembly : Taranis.EDlib.dll Syntax public interface ICacheService Methods Add(String, String, TimeSpan) Add an item to the cache. Declaration void Add(string key, string data, TimeSpan expireIn) Parameters Type Name Description System.String key Key to identify the cached item. System.String data String data to store in the cache. TimeSpan expireIn How long in the future the item should expire. Delete(String[]) Delete the specified items from the cache. Declaration void Delete(params string[] key) Parameters Type Name Description System.String [] key A params list of keys identifying the items to delete. EmptyAll() Empty all items from the cache. Declaration void EmptyAll() EmptyExpired() Empty expired items from the cache. Declaration void EmptyExpired() Exists(String) Checks to see if an item exists in the cache. Declaration bool Exists(string key) Parameters Type Name Description System.String key Key to identify the cached item. Returns Type Description System.Boolean true if the item exists, else false . Get(String) Gets a cached item. Declaration string Get(string key) Parameters Type Name Description System.String key Key to identify the cached item. Returns Type Description System.String The cached data string if it exists, else null . GetExpiration(String) Gets the expiration date and time for a cached item. Declaration DateTime? GetExpiration(string key) Parameters Type Name Description System.String key Key to identify the cached item. Returns Type Description System.Nullable < DateTime > The date if the cached item exists, else null . GetKeys(CacheState) Gets keys for any cached items with the specified state. Declaration IEnumerable<string> GetKeys(CacheState state = default(CacheState)) Parameters Type Name Description CacheState state State to get: Multiple with flags: CacheState.Active | CacheState.Expired Returns Type Description IEnumerable < System.String > The relevant keys. IsExpired(String) Checks if a cached item is expired. Declaration bool IsExpired(string key) Parameters Type Name Description System.String key Key to identify the cached item. Returns Type Description System.Boolean true if expired, else false ."
  },
  "api/EDlib.Platform.IConnectivityService.html": {
    "href": "api/EDlib.Platform.IConnectivityService.html",
    "title": "Interface IConnectivityService | EDlib",
    "keywords": "Interface IConnectivityService Interface for a platform specific data connectivity service. Namespace : EDlib.Platform Assembly : Taranis.EDlib.dll Syntax public interface IConnectivityService Methods IsConnected() Determines whether a network is available. Declaration bool IsConnected() Returns Type Description System.Boolean true if a network connection is detected, else false . IsMetered() Determines whether the network connection is metered. Declaration bool IsMetered() Returns Type Description System.Boolean true if the connection is metered, else false ."
  },
  "api/EDlib.Platform.PreserveAttribute.html": {
    "href": "api/EDlib.Platform.PreserveAttribute.html",
    "title": "Class PreserveAttribute | EDlib",
    "keywords": "Class PreserveAttribute Linker control attribute. To preserve the whole type, use the syntax [Preserve (AllMembers = true)] on the type. To preserve a member if the containing type was preserved, use [Preserve (Conditional=true)] on the member. See: https://docs.microsoft.com/en-gb/xamarin/ios/deploy-test/linker Inheritance System.Object PreserveAttribute Namespace : EDlib.Platform Assembly : Taranis.EDlib.dll Syntax public sealed class PreserveAttribute : Attribute Constructors PreserveAttribute() Preserve attribute default constructor. Declaration public PreserveAttribute() PreserveAttribute(Boolean, Boolean) Preserve attribute constructor. Declaration public PreserveAttribute(bool allMembers, bool conditional) Parameters Type Name Description System.Boolean allMembers Set true to preserve the whole type. System.Boolean conditional Set true to preserve an individual type member. Fields AllMembers Set true to preserve the whole type. Declaration public bool AllMembers Field Value Type Description System.Boolean Conditional Set true to preserve an individual type member. Declaration public bool Conditional Field Value Type Description System.Boolean"
  },
  "api/EDlib.Powerplay.CycleService.html": {
    "href": "api/EDlib.Powerplay.CycleService.html",
    "title": "Class CycleService | EDlib",
    "keywords": "Class CycleService A static class that represents the Powerplay cycle and when it changes (ticks). Inheritance System.Object CycleService Namespace : EDlib.Powerplay Assembly : Taranis.EDlib.dll Syntax public static class CycleService : object Methods CurrentCycle() The current Powerplay cycle number. Declaration public static int CurrentCycle() Returns Type Description System.Int32 CycleImminent(Int32) Returns true if the end of the current Powerplay cycle is imminent - less than imminentHours hours remaining. Declaration public static bool CycleImminent(int imminentHours = 12) Parameters Type Name Description System.Int32 imminentHours The number of hours during which the end of the cycle is imminent (1 - 24). Returns Type Description System.Boolean FinalDay() Returns true if the current Powerplay cycle ends within 24 hours. Declaration public static bool FinalDay() Returns Type Description System.Boolean TimeRemaining() The time remaining till the end of the current Powerplay cycle. Days, hours and minutes. Declaration public static string TimeRemaining() Returns Type Description System.String TimeTillTick() The time remaining till the end of the current Powerplay cycle. Declaration public static TimeSpan TimeTillTick() Returns Type Description TimeSpan"
  },
  "api/EDlib.Powerplay.GalacticStandings.html": {
    "href": "api/EDlib.Powerplay.GalacticStandings.html",
    "title": "Class GalacticStandings | EDlib",
    "keywords": "Class GalacticStandings Represents the Powerplay Galactic Standings. Inheritance System.Object GalacticStandings Namespace : EDlib.Powerplay Assembly : Taranis.EDlib.dll Syntax public class GalacticStandings : object Constructors GalacticStandings(Int32, DateTime) Initializes a new instance of the GalacticStandings class. Declaration public GalacticStandings(int cycle, DateTime lastUpdated) Parameters Type Name Description System.Int32 cycle The Powerplay cycle. DateTime lastUpdated When the Standings were last updated. Properties Cycle Gets the Powerplay cycle number. Declaration public int Cycle { get; } Property Value Type Description System.Int32 LastUpdated Gets the date and time the Galactic Standings were last updated. Declaration public DateTime LastUpdated { get; } Property Value Type Description DateTime Standings The Galactic Standings - a list of PowerStanding objects. Declaration public List<PowerStanding> Standings { get; } Property Value Type Description List < PowerStanding > Methods ToCSV() Returns the Powerplay Galactic Standings as a comma separated string including the cycle and when the Standings were last updated. Declaration public string ToCSV() Returns Type Description System.String A in CSV format that represents the Galactic Standings. ToJson() Returns the Powerplay Galactic Standings as a JSON string including the cycle and when the Standings were last updated. Declaration public string ToJson() Returns Type Description System.String A in JSON format that represents the Galactic Standings. ToString() Returns the Powerplay Galactic Standings as a multi-line string including the cycle and when the Standings were last updated. Declaration public override string ToString() Returns Type Description System.String A that represents the Galactic Standings."
  },
  "api/EDlib.Powerplay.html": {
    "href": "api/EDlib.Powerplay.html",
    "title": "Namespace EDlib.Powerplay | EDlib",
    "keywords": "Namespace EDlib.Powerplay The EDlib.Powerplay namespace contains classes and resources that get Powerplay data from an API provided by Taranis Software. CycleService A static class that represents the Powerplay cycle and when it changes (ticks). This service does not request data from an online API. PowerDetailsService Provides data about every Power including statistics, ethos and benefits. Also gets every Powerplay group's communications data (Reddit and Discord / Slack) from an API provided by Taranis Software. This data changes rarely so please cache for 1 week minimum. StandingsService Gets the current Powerplay Galactic Standings from an API provided by Taranis Software. The standings update weekly on a Thursday between 08:00 - 10:00 UTC. Please cache the data until 08:00 UTC Thursday and then check every 15 minutes until an update is posted. Classes CycleService A static class that represents the Powerplay cycle and when it changes (ticks). GalacticStandings Represents the Powerplay Galactic Standings. PowerComms Contains the comms data for a Power - Reddit Sub and Discord / Slack server. PowerDetails Represents a Power's statistics, ethos and benefits data. PowerDetailsService Provides data about every Power including statistics, ethos and benefits. Also gets every Powerplay player group's communications data from an API provided by Taranis Software. This data changes rarely so please cache for 1 week minimum. PowerStanding Represents the Galactic Standings data for a Power. StandingsService Gets the current Powerplay Galactic Standings from an API provided by Taranis Software. The standings update weekly on a Thursday between 08:00 - 10:00 UTC, the data is cached till 08:00 UTC Thursday. Enums StandingChange The Power's change in standings since the previous cycle."
  },
  "api/EDlib.Powerplay.PowerComms.html": {
    "href": "api/EDlib.Powerplay.PowerComms.html",
    "title": "Class PowerComms | EDlib",
    "keywords": "Class PowerComms Contains the comms data for a Power - Reddit Sub and Discord / Slack server. Inheritance System.Object PowerComms Namespace : EDlib.Powerplay Assembly : Taranis.EDlib.dll Syntax public class PowerComms : object Constructors PowerComms(Int32, String, String, String) Initializes a new instance of the PowerComms class. Declaration public PowerComms(int id, string shortName, string reddit, string comms) Parameters Type Name Description System.Int32 id The unique identifier for the Power. System.String shortName The Power's short name. System.String reddit The Power's subreddit. System.String comms The Power's Discord or Slack server. Properties Comms The join link for the Power's Discord or Slack server. Declaration public string Comms { get; set; } Property Value Type Description System.String Id The unique identifier for the Power. Declaration public int Id { get; set; } Property Value Type Description System.Int32 Reddit The URL for the Power's subreddit. Declaration public string Reddit { get; set; } Property Value Type Description System.String ShortName The short name for the Power. Declaration public string ShortName { get; set; } Property Value Type Description System.String Methods ToString() Returns the Power's comms details as a string. Declaration public override string ToString() Returns Type Description System.String A that represents the Power's comms details."
  },
  "api/EDlib.Powerplay.PowerDetails.html": {
    "href": "api/EDlib.Powerplay.PowerDetails.html",
    "title": "Class PowerDetails | EDlib",
    "keywords": "Class PowerDetails Represents a Power's statistics, ethos and benefits data. Inheritance System.Object PowerDetails Namespace : EDlib.Powerplay Assembly : Taranis.EDlib.dll Syntax public class PowerDetails : object Constructors PowerDetails(Int32, String, String, Int32, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String) Initializes a new instance of the PowerDetails class. Declaration public PowerDetails(int id, string shortName, string hq, int yearOfBirth, string allegiance, string preparationEthos, string preparationText, string expansionEthos, string expansionText, string expansionStrongGovernment, string expansionWeakGovernment, string controlEthos, string controlText, string controlStrongGovernment, string controlWeakGovernment, string hqSystemEffect, string controlSystemEffect, string allianceExploitedEffect, string empireExploitedEffect, string federationExploitedEffect, string independentExploitedEffect, string rating1, string rating2, string rating3, string rating4, string rating5) Parameters Type Name Description System.Int32 id The unique identifier for the Power. System.String shortName The Power's short name. System.String hq The Power's headquarters. System.Int32 yearOfBirth The Power's year of birth. System.String allegiance The Power's allegiance. System.String preparationEthos The Power's preparation ethos. System.String preparationText The description of the preparation ethos. System.String expansionEthos The Power's expansion ethos. System.String expansionText The description of the expansion ethos. System.String expansionStrongGovernment The government types that help expansion. System.String expansionWeakGovernment The government types that hinder expansion. System.String controlEthos The Power's control ethos. System.String controlText The description of the control ethos. System.String controlStrongGovernment The government types that help with control. System.String controlWeakGovernment The government types that hinder with control. System.String hqSystemEffect Any effects in the Power's headquarters. System.String controlSystemEffect The effects on systems the Power controls. System.String allianceExploitedEffect The effects on Alliance systems the Power exploits. System.String empireExploitedEffect The effects on Empire systems the Power exploits. System.String federationExploitedEffect The effects on Federation systems the Power exploits. System.String independentExploitedEffect The effects on Independent systems the Power exploits. System.String rating1 Commander benefits at rank 1. System.String rating2 Commander benefits at rank 2. System.String rating3 Commander benefits at rank 3. System.String rating4 Commander benefits at rank 4. System.String rating5 Commander benefits at rank 5. Properties Allegiance The Power's allegiance. Declaration public string Allegiance { get; } Property Value Type Description System.String AllianceExploitedEffect The effects a Power has on Alliance systems they exploit. Declaration public string AllianceExploitedEffect { get; } Property Value Type Description System.String ControlEthos The Power's control ethos. Declaration public string ControlEthos { get; } Property Value Type Description System.String ControlStrongGovernment The government types that help the Power control their domain. Declaration public string ControlStrongGovernment { get; } Property Value Type Description System.String ControlSystemEffect The effects a Power has on systems they control. Declaration public string ControlSystemEffect { get; } Property Value Type Description System.String ControlText Description of the Power's control ethos. Declaration public string ControlText { get; } Property Value Type Description System.String ControlWeakGovernment The government types that hinder the Power controlling their domain. Declaration public string ControlWeakGovernment { get; } Property Value Type Description System.String EmpireExploitedEffect The effects a Power has on Empire systems they exploit. Declaration public string EmpireExploitedEffect { get; } Property Value Type Description System.String ExpansionEthos The Power's expansion ethos. Declaration public string ExpansionEthos { get; } Property Value Type Description System.String ExpansionStrongGovernment The government types that help the Power's expansion. Declaration public string ExpansionStrongGovernment { get; } Property Value Type Description System.String ExpansionText Description of the Power's expansion ethos. Declaration public string ExpansionText { get; } Property Value Type Description System.String ExpansionWeakGovernment The government types that hinder the Power's expansion. Declaration public string ExpansionWeakGovernment { get; } Property Value Type Description System.String FederationExploitedEffect The effects a Power has on Federation systems they exploit. Declaration public string FederationExploitedEffect { get; } Property Value Type Description System.String HQ The name of the Power's headquarters system. Declaration public string HQ { get; } Property Value Type Description System.String HQSystemEffect Any effects the Power has on their headquarters system. Declaration public string HQSystemEffect { get; } Property Value Type Description System.String Id The unique identifier for the Power. Declaration public int Id { get; } Property Value Type Description System.Int32 IndependentExploitedEffect The effects a Power has on Independent systems they exploit. Declaration public string IndependentExploitedEffect { get; } Property Value Type Description System.String PreparationEthos The Power's preparation ethos. Declaration public string PreparationEthos { get; } Property Value Type Description System.String PreparationText Description of the Power's preparation ethos. Declaration public string PreparationText { get; } Property Value Type Description System.String Rating1 The benefits of pledging for a Commander at rank 1. Declaration public string Rating1 { get; } Property Value Type Description System.String Rating2 The benefits of pledging for a Commander at rank 2. Declaration public string Rating2 { get; } Property Value Type Description System.String Rating3 The benefits of pledging for a Commander at rank 3. Declaration public string Rating3 { get; } Property Value Type Description System.String Rating4 The benefits of pledging for a Commander at rank 4. Declaration public string Rating4 { get; } Property Value Type Description System.String Rating5 The benefits of pledging for a Commander at rank 5. Declaration public string Rating5 { get; } Property Value Type Description System.String ShortName The short name for the Power. Declaration public string ShortName { get; } Property Value Type Description System.String YearOfBirth The year the Power was born. Declaration public int YearOfBirth { get; } Property Value Type Description System.Int32 Methods ToString() Returns a string containing some Power details: short name (allegiance) - headquarters Declaration public override string ToString() Returns Type Description System.String A that represents the Power details."
  },
  "api/EDlib.Powerplay.PowerDetailsService.html": {
    "href": "api/EDlib.Powerplay.PowerDetailsService.html",
    "title": "Class PowerDetailsService | EDlib",
    "keywords": "Class PowerDetailsService Provides data about every Power including statistics, ethos and benefits. Also gets every Powerplay player group's communications data from an API provided by Taranis Software. This data changes rarely so please cache for 1 week minimum. Inheritance System.Object PowerDetailsService Namespace : EDlib.Powerplay Assembly : Taranis.EDlib.dll Syntax public sealed class PowerDetailsService : object Methods GetPowerCommsAsync(String, Int32) Gets the comms data for a Power from an online resource - Subreddit and Discord / Slack servers. Declaration public Task<PowerComms> GetPowerCommsAsync(string shortName, int cacheDays) Parameters Type Name Description System.String shortName The required Power's short name. System.Int32 cacheDays The number of days to cache the Power comms data. Returns Type Description Task < PowerComms > Task<PowerComms> GetPowerDetails(String) Gets a Power's statistics, ethos and benefits data from an embedded json resource. Declaration public PowerDetails GetPowerDetails(string shortName) Parameters Type Name Description System.String shortName The required Power's short name. Returns Type Description PowerDetails PowerDetals Instance(IDownloadService) Instantiates the PowerDetailsService class. Declaration public static PowerDetailsService Instance(IDownloadService downloadService) Parameters Type Name Description IDownloadService downloadService IDownloadService instance used to download data. Returns Type Description PowerDetailsService PowerDetailsService"
  },
  "api/EDlib.Powerplay.PowerStanding.html": {
    "href": "api/EDlib.Powerplay.PowerStanding.html",
    "title": "Class PowerStanding | EDlib",
    "keywords": "Class PowerStanding Represents the Galactic Standings data for a Power. Inheritance System.Object PowerStanding Namespace : EDlib.Powerplay Assembly : Taranis.EDlib.dll Syntax public class PowerStanding : object Constructors PowerStanding() Initializes a new instance of the PowerStanding class with no data. Declaration public PowerStanding() PowerStanding(Int32, String, Int32, DateTime) Initializes a new instance of the PowerStanding class with the given data. Used by the Galactic Standings API back-end. Declaration public PowerStanding(int position, string standing, int cycle, DateTime updated) Parameters Type Name Description System.Int32 position The Power's position in the Galactic Standings. System.String standing The Power's name, standings change and turmoil status. System.Int32 cycle The Powerplay cycle. DateTime updated When the Power's standing was last updated. PowerStanding(Int32, String, Int32, StandingChange, Boolean, String, String, DateTime) Initializes a new instance of the PowerStanding class with the given data. Declaration public PowerStanding(int id, string name, int position, StandingChange change, bool turmoil, string allegiance, string shortname, DateTime updated) Parameters Type Name Description System.Int32 id The Power's unique identifier. System.String name The Power's name. System.Int32 position The Power's position in the Galactic Standings. StandingChange change The Power's change in the Galactic Standings. System.Boolean turmoil Whether the Power is in Turmoil. System.String allegiance The Power's allegiance. System.String shortname The Power's short name. DateTime updated When the Power's standing was last updated. PowerStanding(Int32, String, Int32, StandingChange, Boolean, String, String, DateTime, Int32) Initializes a new instance of the PowerStanding class with the given data. Declaration public PowerStanding(int id, string name, int position, StandingChange change, bool turmoil, string allegiance, string shortname, DateTime updated, int cyclesSinceTurmoil) Parameters Type Name Description System.Int32 id The Power's unique identifier. System.String name The Power's name. System.Int32 position The Power's position in the Galactic Standings. StandingChange change The Power's change in the Galactic Standings. System.Boolean turmoil Whether the Power is in Turmoil. System.String allegiance The Power's allegiance. System.String shortname The Power's short name. DateTime updated When the Power's standing was last updated. System.Int32 cyclesSinceTurmoil The number of cycles since the Power was last in Turmoil. Properties Allegiance The Power's allegiance - Alliance, Empire, Federation or Independent. Declaration public string Allegiance { get; set; } Property Value Type Description System.String Change The Power's change in the Galactic Standings since the previous cycle. Declaration public StandingChange Change { get; set; } Property Value Type Description StandingChange ChangeString The Power's change in the Galactic Standings since the previous cycle as a string. Declaration public string ChangeString { get; } Property Value Type Description System.String Cycle The Powerplay cycle. Declaration public string Cycle { get; set; } Property Value Type Description System.String CyclesSinceTurmoil The number of cycles since the Power was last in Turmoil. A value of -1 indicates the number of cycles since Turmoil is unknown. Declaration public int CyclesSinceTurmoil { get; set; } Property Value Type Description System.Int32 Id The unique identifier for the Power. Declaration public int Id { get; set; } Property Value Type Description System.Int32 LastUpdated The date and time the Power's standing was last updated. Declaration public DateTime LastUpdated { get; set; } Property Value Type Description DateTime Name The Power's name. Declaration public string Name { get; set; } Property Value Type Description System.String Position The Power's position in the Galactic Standings. Declaration public int Position { get; set; } Property Value Type Description System.Int32 ShortName The short name for the Power. Declaration public string ShortName { get; set; } Property Value Type Description System.String Turmoil Indicates whether this Power is turmoil. Declaration public bool Turmoil { get; set; } Property Value Type Description System.Boolean Methods ToString() Returns the Power's standing as a string: position + change - Power name (Power allegiance) Declaration public override string ToString() Returns Type Description System.String A that represents the Power's standing."
  },
  "api/EDlib.Powerplay.StandingChange.html": {
    "href": "api/EDlib.Powerplay.StandingChange.html",
    "title": "Enum StandingChange | EDlib",
    "keywords": "Enum StandingChange The Power's change in standings since the previous cycle. Namespace : EDlib.Powerplay Assembly : Taranis.EDlib.dll Syntax public enum StandingChange : int Fields Name Description down The Power's standing has decayed. none The Power's standing has not changed. up The Power's standing has improved."
  },
  "api/EDlib.Powerplay.StandingsService.html": {
    "href": "api/EDlib.Powerplay.StandingsService.html",
    "title": "Class StandingsService | EDlib",
    "keywords": "Class StandingsService Gets the current Powerplay Galactic Standings from an API provided by Taranis Software. The standings update weekly on a Thursday between 08:00 - 10:00 UTC, the data is cached till 08:00 UTC Thursday. Inheritance System.Object StandingsService Namespace : EDlib.Powerplay Assembly : Taranis.EDlib.dll Syntax public sealed class StandingsService : object Methods GetData(CancellationTokenSource, Boolean) Gets the current Powerplay Galactic Standings. Declaration public Task<GalacticStandings> GetData(CancellationTokenSource cancelToken, bool ignoreCache = false) Parameters Type Name Description CancellationTokenSource cancelToken A cancellation token. System.Boolean ignoreCache Ignore any cached data if set to true . Returns Type Description Task < GalacticStandings > Task<GalacticStandings> Instance(IDownloadService, ICacheService) Instantiates the StandingsService class. Declaration public static StandingsService Instance(IDownloadService downloadService, ICacheService cacheService) Parameters Type Name Description IDownloadService downloadService IDownloadService instance used to download data. ICacheService cacheService The platform specific cache for downloaded data. Returns Type Description StandingsService StandingsService"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Api Documentation | EDlib",
    "keywords": "Api Documentation EDlib: A .Net Standard library for creating companion tools for the game Elite Dangerous by Frontier Developments. Introduction EDlib provides classes that enable your .Net apps to easily consume information about the Elite Dangerous universe from several APIs. Information available includes: The time that the Background Simulation (BGS) updates, known as the BGS tick. News articles from GalNet, classified by topic and content tags. The Powerplay cycle and Galactic Standings. Detailed information about each Power and communications links for their player groups. Data from EDSM including game server status and information on systems, markets, shipyards and more. Data from INARA including Community Goals and Commander profiles. EDlib conforms to .Net Standard 2.0 making it compatible with .Net Framework, .Net Core and .Net 5 and has been used for CLI, desktop, Xamarin Forms and Azure Functions projects. Installation EDlib is currently available as a Nuget package from GitHub, in future it will also be available on Nuget.org. Installation from GitHub To install EDlib from GitHub you will need to set up a local Nuget package feed in a folder on your computer or network. This folder can be used as a package source for all Nuget operations by adding it to the list of sources using the Package Manager UI or the Nuget CLI . Setup a local Nuget feed using your preferred tools. Download the latest Taranis.Software.EDlib.*.nupkg package from GitHub Releases . Copy the package to your local Nuget feed. Install Taranis.Software.EDlib from your local Nuget feed using your preferred tools. Source Link EDlib is built with Source Link enabled. Source Link enables source code debugging of .NET assemblies from NuGet by embedding source control metadata inside assemblies and the package. If you have Source Link enabled in Visual Studio you can step into the EDlib source code for a great debugging experience. To enable Source Link in Visual Studio please see this excellent guide by Aaron Stannard . Please Contribute! This is an open source project that welcomes contributions, suggestions and bug reports from those who use it. If you have any ideas on how to improve the library, please read the How to Contribute article and create an issue on GitHub. EDlib icon made by Freepik from www.flaticon.com ."
  },
  "articles/how-to-contribute.html": {
    "href": "articles/how-to-contribute.html",
    "title": "How to Contribute | EDlib",
    "keywords": "How to Contribute We want contributions. We need contributions. You should contribute! If you find a bug please follow these easy steps: Create an Issue for the bug tagged \"Bug\". Write a regression test in the UnitTests project under the appropriate test class. Fix it! Commit & push your changes. Submit a Pull Request telling me how awesome your fix is. Make sure to include \"Fix #XXX\" in the PR details to link the issue. If you want a new feature then follow these steps: Implement it! Test it a bunch. If it's a change to an existing feature add some tests to the appropriate test class, if it's a completely new feature create a new test class. Commit & push your changes. Submit a Pull Request telling me how awesome and valuable this new feature is. Submitting Pull Requests Fork the repository. Check out the repository onto your machine. Hack on the EDlib code. Commit & push your changes. Open a Pull Request on irongut/EDlib . See the GitHub docs on how to fork a repo for more details. Code Formatting Use spaces aligned to 4 characters. Private fields are camelCase and have a leading _ if they are a backing field for another member. All other members are PascalCase."
  },
  "index.html": {
    "href": "index.html",
    "title": "EDlib | EDlib",
    "keywords": "EDlib A .Net Standard library for creating companion tools for the game Elite Dangerous by Frontier Developments. Introduction EDlib provides classes that enable your .Net apps to easily consume information about the Elite Dangerous universe from several APIs. Information available includes: The time that the Background Simulation (BGS) updates, known as the BGS tick. News articles from GalNet, classified by topic and content tags. The Powerplay cycle and Galactic Standings. Detailed information about each Power and communications links for their player groups. Data from EDSM including game server status and information on systems, markets, shipyards and more. Data from INARA including Community Goals and Commander profiles. EDlib conforms to .Net Standard 2.0 making it compatible with .Net Framework, .Net Core and .Net 5 and has been used for CLI, desktop, Xamarin Forms and Azure Functions projects. Installation EDlib is currently available as a Nuget package from GitHub. Installation from GitHub To install EDlib from GitHub you will need to add either a local Nuget package feed or GitHub Packages as a package feed using the Package Manager UI or the Nuget CLI . Source Link EDlib is built with Source Link enabled. Source Link enables source code debugging of .NET assemblies from NuGet by embedding source control metadata inside assemblies and the package. If you have Source Link enabled in Visual Studio you can step into the EDlib source code for a better debugging experience. To enable Source Link in Visual Studio please see this excellent guide by Aaron Stannard . Please Contribute! This is an open source project that welcomes contributions, suggestions and bug reports from those who use it. If you have any ideas on how to improve the library, please read the How to Contribute article and create an issue on GitHub. EDlib icon made by Freepik from www.flaticon.com ."
  }
}