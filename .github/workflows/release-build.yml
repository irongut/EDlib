name: Build + Deploy

on:
  release:
    types: [published]
    branches: [master]

env:
  DOTNET_NOLOGO: true                     # Disable the .NET logo
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience to speed up the build
  DOTNET_CLI_TELEMETRY_OPTOUT: true       # Disable sending .NET CLI telemetry
  GITHUB_PACKAGE_URL: 'https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json'

jobs:
  build:
    runs-on: ubuntu-latest
    name: Release Build
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Restore Dependencies
      run: dotnet restore src/EDlib.sln

    - name: Add User Secrets
      uses: microsoft/variable-substitution@v1
      with:
        files: 'src/UnitTests/appsettings.json, src/EDlibDemo/appsettings.json'
      env:
        Inara-AppName:  ${{ secrets.INARA_APPNAME }}
        Inara-AppVersion: ${{ secrets.INARA_APPVERSION }}
        Inara-ApiKey:  ${{ secrets.INARA_APIKEY }}
        Inara-UserApiKey: ${{ secrets.INARA_USERAPIKEY }}
        Inara-IsDeveloped: ${{ secrets.INARA_ISDEVELOPED }}

    - name: Build EDlib
      run: dotnet build src/EDlib.sln --configuration Release --no-restore

    - name: Test EDlib
      run: dotnet test src/EDlib.sln --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage

    - name: Copy Test Coverage
      run: cp coverage/**/coverage.cobertura.xml coverage/coverage.cobertura.xml

    - name: Generate Test Report
      uses: irongut/CodeCoverageSummary@v1.2.0
      with:
        filename: coverage/coverage.cobertura.xml
        badge: true
        format: 'md'
        output: 'both'

    - name: Upload EDlib Artifact
      uses: actions/upload-artifact@v2.3.1
      with:
        name: release-nugets
        path: src/EDlib/bin/Release/Taranis.Software.EDlib*.nupkg

    - name: Upload EDlib.Mock Artifact
      uses: actions/upload-artifact@v2.3.1
      with:
        name: release-nugets
        path: src/EDlib.Mock/bin/Release/Taranis.Software.EDlib*.nupkg

    - name: Upload Test Report Artifact
      uses: actions/upload-artifact@v2.3.1
      with:
        name: release-nugets
        path: code-coverage-results.md

  deploy-gh:
    name: Deploy to GitHub Packages
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: release-nugets

    - name: Setup Nuget
      uses: NuGet/setup-nuget@v1.0.5
      with:
        nuget-version: latest

    - name: Add GitHub package source
      run: nuget sources Add -Name GitHub -Source ${{env.GITHUB_PACKAGE_URL}} -UserName ${{ github.repository_owner }} -Password ${{ secrets.GITHUB_TOKEN }}

    - name: Push to GitHub Packages
      run: nuget push **/*.nupkg -source GitHub -SkipDuplicate

    - name: Add Test Report to Release
      uses: irongut/EditRelease@v1.0.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        id: ${{ github.event.release.id }}
        body: 'Released to GitHub Packages.'
        files: code-coverage-results.md

  deploy-docs:
    name: Deploy Docs
    needs: [build, deploy-gh]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Build Documentation
      uses: nikeee/docfx-action@v1.0.0
      with:
        args: docfx_project/docfx.json

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
        commit_message: ${{ github.event.head_commit.message }}
