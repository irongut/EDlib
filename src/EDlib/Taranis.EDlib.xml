<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Taranis.EDlib</name>
    </assembly>
    <members>
        <member name="T:EDlib.LinkerSafeAttribute">
            <summary>
            This attribute allows you to mark your assemblies as safe to link.<br />When present the linker will process the assembly even if youâ€™re using the "SDK Assemblies Only" option.
            </summary>
        </member>
        <member name="T:EDlib.BGS.BgsTick">
            <summary>Represents the BGS Tick.</summary>
        </member>
        <member name="P:EDlib.BGS.BgsTick.Time">
            <summary>Returns the date and time of the BGS tick.</summary>
        </member>
        <member name="P:EDlib.BGS.BgsTick.TimeString">
            <summary>Returns the date and time of the BGS tick as a string.</summary>
        </member>
        <member name="M:EDlib.BGS.BgsTick.#ctor">
            <summary>Initializes a new instance of the <see cref="T:EDlib.BGS.BgsTick" /> class, with the value Unknown for the time string.</summary>
        </member>
        <member name="M:EDlib.BGS.BgsTick.#ctor(System.DateTime)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.BGS.BgsTick" /> class with the specified date and time.</summary>
            <param name="time">Date and time of the BGS Tick.</param>
        </member>
        <member name="T:EDlib.BGS.BgsTickService">
            <summary>Gets the date and time that the Background Simulation (BGS) updates, known as the BGS tick.</summary>
        </member>
        <member name="M:EDlib.BGS.BgsTickService.Instance(EDlib.Network.IDownloadService)">
            <summary>Instantiates the BgsTickService class.</summary>
            <param name="downloadService">IDownloadService instance used to download data.</param>
            <returns>BgsTickService</returns>
        </member>
        <member name="M:EDlib.BGS.BgsTickService.GetData(System.Boolean)">
            <summary>Gets the latest BGS tick.</summary>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>BgsTick</returns>
        </member>
        <member name="M:EDlib.BGS.BgsTickService.GetData(System.Int32,System.Boolean)">
            <summary>Gets multiple recent BGS ticks.</summary>
            <param name="days">The required number of days worth of ticks.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;BgsTick&gt;, DateTime)&gt;</returns>
        </member>
        <member name="T:EDlib.Common.Topic">
            <summary>Topic for GalNet News articles and Community Goals.</summary>
        </member>
        <member name="P:EDlib.Common.Topic.Name">
            <summary>The topic name.</summary>
        </member>
        <member name="P:EDlib.Common.Topic.Terms">
            <summary>The words used to determine if the topic is relevant to the content.</summary>
        </member>
        <member name="P:EDlib.Common.Topic.Count">
            <summary>The number of times the terms were found in the content.</summary>
        </member>
        <member name="M:EDlib.Common.Topic.#ctor(System.String,System.Collections.Generic.List{System.String})">
            <summary>Initializes a new instance of the <see cref="T:EDlib.Common.Topic" /> class.</summary>
            <param name="name">The topic name.</param>
            <param name="terms">The words used to determine if the topic is relevant to the content.</param>
        </member>
        <member name="T:EDlib.EDSM.ControllingFaction">
            <summary>
              <para>Represents the BGS faction that controls a system or station returned by EDSM System API methods.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-system-v1">System v1</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.ControllingFaction.Id">
            <summary>
              <para>The ID of the faction.</para>
              <para>Engineer factions do not have an Id so this property is nullable.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.ControllingFaction.Name">
            <summary>The name of the faction.</summary>
        </member>
        <member name="P:EDlib.EDSM.ControllingFaction.Allegiance">
            <summary>The superpower allegiance of the faction when returned by the EDSM method.</summary>
        </member>
        <member name="P:EDlib.EDSM.ControllingFaction.Government">
            <summary>The government type of the faction when returned by the EDSM method.</summary>
        </member>
        <member name="T:EDlib.EDSM.EliteStatus">
            <summary>
              <para>Represents the Elite: Dangerous server status.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-status-v1">Status v1</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.EliteStatus.Status">
            <summary>The status code returned by the Elite: Dangerous server.</summary>
        </member>
        <member name="P:EDlib.EDSM.EliteStatus.Type">
            <summary>A Bootstrap style status string - success / warning / danger.</summary>
        </member>
        <member name="P:EDlib.EDSM.EliteStatus.Message">
            <summary>The message returned by the Elite: Dangerous server.</summary>
        </member>
        <member name="P:EDlib.EDSM.EliteStatus.LastUpdated">
            <summary>When EDSM last checked the status from the Elite: Dangerous server.</summary>
        </member>
        <member name="M:EDlib.EDSM.EliteStatus.#ctor">
            <summary>Initializes a new instance of the <see cref="T:EDlib.EDSM.EliteStatus" /> class with unknown status.</summary>
        </member>
        <member name="M:EDlib.EDSM.EliteStatus.#ctor(System.Int32,System.String,System.String,System.DateTime)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.EDSM.EliteStatus" /> class.</summary>
            <param name="status">The server status code.</param>
            <param name="type">The status string.</param>
            <param name="message">The server status message.</param>
            <param name="lastupdate">When the server status was last checked.</param>
        </member>
        <member name="M:EDlib.EDSM.EliteStatus.ToString">
            <summary>Returns the server status message and last updated as a string.</summary>
            <returns>A <see cref="T:System.String" /> that represents the server status.</returns>
        </member>
        <member name="T:EDlib.EDSM.Faction">
            <summary>
              <para>Represents a BGS faction returned by EDSM System API methods.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-system-v1">System v1</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.Id">
            <summary>The ID of the faction.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.Name">
            <summary>The name of the faction.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.Allegiance">
            <summary>The superpower allegiance of the faction.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.Government">
            <summary>The government type of the faction.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.Influence">
            <summary>The faction's influence level.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.State">
            <summary>The faction's current state.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.ActiveStates">
            <summary>The faction's active states.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.RecoveringStates">
            <summary>The faction's recovering states.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.PendingStates">
            <summary>The faction's pending states.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.Happiness">
            <summary>The faction's current happiness.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.IsPlayer">
            <summary><c>true</c> if the faction is a player faction.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.LastUpdate">
            <summary>The date and time when the information was requested.</summary>
        </member>
        <member name="T:EDlib.EDSM.FactionState">
            <summary>
              <para>Represents a faction's BGS state returned by EDSM System API methods.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-system-v1">System v1</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.FactionState.State">
            <summary>The BGS state.</summary>
        </member>
        <member name="P:EDlib.EDSM.FactionState.Trend">
            <summary>The BGS state trend.</summary>
        </member>
        <member name="T:EDlib.EDSM.Market">
            <summary>
              <para>Represents a station market returned by EDSM System API methods.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-system-v1">System v1</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.Market.Id">
            <summary>The EDSM internal ID of the market.</summary>
        </member>
        <member name="P:EDlib.EDSM.Market.Id64">
            <summary>The EDSM internal ID of the market (64 bit).</summary>
        </member>
        <member name="P:EDlib.EDSM.Market.Name">
            <summary>The name of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.Market.MarketId">
            <summary>The market ID (use this ID for EDSM queries).</summary>
        </member>
        <member name="P:EDlib.EDSM.Market.SId">
            <summary>The EDSM internal ID of the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Market.SName">
            <summary>The name of the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Market.Url">
            <summary>The EDSM URL for the market.</summary>
        </member>
        <member name="P:EDlib.EDSM.Market.Commodities">
            <summary>List of <see cref="T:EDlib.EDSM.Commodity" /> available from this market.</summary>
        </member>
        <member name="P:EDlib.EDSM.Market.LastUpdated">
            <summary>The date and time when the information was requested.</summary>
        </member>
        <member name="M:EDlib.EDSM.Market.#ctor(System.Int64,System.Int64,System.String,System.Int64,System.Int64,System.String,System.String,System.Collections.Generic.List{EDlib.EDSM.Commodity})">
            <summary>Initializes a new instance of the <see cref="T:EDlib.EDSM.Market" /> class.</summary>
            <param name="id">The EDSM market ID.</param>
            <param name="id64">The EDSM 64 bit market ID.</param>
            <param name="name">The system name.</param>
            <param name="marketId">The market ID.</param>
            <param name="sId">The station ID.</param>
            <param name="sName">The station name.</param>
            <param name="url">The EDSM URL for the market.</param>
            <param name="commodities">List of <see cref="T:EDlib.EDSM.Commodity" /> available from this market.</param>
        </member>
        <member name="T:EDlib.EDSM.Commodity">
            <summary>
              <para>Represents a market commodity returned by EDSM System API methods.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-system-v1">System v1</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.Commodity.Id">
            <summary>The ID of the commodity.</summary>
        </member>
        <member name="P:EDlib.EDSM.Commodity.Name">
            <summary>The name of the commodity.</summary>
        </member>
        <member name="P:EDlib.EDSM.Commodity.BuyPrice">
            <summary>The price when buying the commodity.</summary>
        </member>
        <member name="P:EDlib.EDSM.Commodity.Stock">
            <summary>The quantity of the commodity available to buy.</summary>
        </member>
        <member name="P:EDlib.EDSM.Commodity.SellPrice">
            <summary>The price when selling the commodity.</summary>
        </member>
        <member name="P:EDlib.EDSM.Commodity.Demand">
            <summary>Demand for the commodity when selling.</summary>
        </member>
        <member name="P:EDlib.EDSM.Commodity.StockBracket">
            <summary>Stock bracket for the commodity.</summary>
        </member>
        <member name="T:EDlib.EDSM.Shipyard">
            <summary>
              <para>Represents a station shipyard returned by EDSM System API methods.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-system-v1">System v1</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.Shipyard.Id">
            <summary>The EDSM internal ID of the shipyard.</summary>
        </member>
        <member name="P:EDlib.EDSM.Shipyard.Id64">
            <summary>The EDSM internal ID of the shipyard (64 bit).</summary>
        </member>
        <member name="P:EDlib.EDSM.Shipyard.Name">
            <summary>The name of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.Shipyard.MarketId">
            <summary>The shipyard ID (use this ID for EDSM queries).</summary>
        </member>
        <member name="P:EDlib.EDSM.Shipyard.SId">
            <summary>The EDSM internal ID of the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Shipyard.SName">
            <summary>The name of the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Shipyard.Url">
            <summary>The EDSM URL for the shipyard.</summary>
        </member>
        <member name="P:EDlib.EDSM.Shipyard.Ships">
            <summary>List of <see cref="T:EDlib.EDSM.Ship" /> available from this shipyard.</summary>
        </member>
        <member name="P:EDlib.EDSM.Shipyard.LastUpdated">
            <summary>The date and time when the information was requested.</summary>
        </member>
        <member name="M:EDlib.EDSM.Shipyard.#ctor(System.Int64,System.Int64,System.String,System.Int64,System.Int64,System.String,System.String,System.Collections.Generic.List{EDlib.EDSM.Ship})">
            <summary>Initializes a new instance of the <see cref="T:EDlib.EDSM.Market" /> class.</summary>
            <param name="id">The EDSM shipyard ID.</param>
            <param name="id64">The EDSM 64 bit shipyard ID.</param>
            <param name="name">The system name.</param>
            <param name="marketId">The shipyard ID.</param>
            <param name="sId">The station ID.</param>
            <param name="sName">The station name.</param>
            <param name="url">The EDSM URL for the shipyard.</param>
            <param name="ships">List of <see cref="T:EDlib.EDSM.Ship" /> available from this shipyard.</param>
        </member>
        <member name="T:EDlib.EDSM.Ship">
            <summary>
              <para>Represents a ship returned by EDSM System API methods.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-system-v1">System v1</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.Ship.Id">
            <summary>The ship ID.</summary>
        </member>
        <member name="P:EDlib.EDSM.Ship.Name">
            <summary>The name of the ship.</summary>
        </member>
        <member name="T:EDlib.EDSM.SolarSystem">
            <summary>
              <para>Represents a solar system returned by EDSM Systems API methods.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-v1">Systems v1</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.Name">
            <summary>The name of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.Distance">
            <summary>Distance in light years from another system specified in the API request.</summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.Id">
            <summary>The EDSM internal ID of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.Id64">
            <summary>The EDSM internal ID of the system (64 bit).</summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.Coords">
            <summary>Coordinates of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.CoordsLocked">
            <summary>Whether EDSM has locked the coordinates of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.RequiresPermit">
            <summary>Whether the system requires a permit.</summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.PermitName">
            <summary>The name of the system permit if required.</summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.Information">
            <summary>
              <para>A summary of information about the system.</para>
              <para>Includes Allegiance, Government, Faction, Population, Security and Economic information.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.PrimaryStar">
            <summary>
              <para>Information concerning the primary star of the system.</para>
              <para>Includes Type, Name and if the star can be scooped for fuel.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.LastUpdated">
            <summary>The date and time when the information was requested.</summary>
        </member>
        <member name="M:EDlib.EDSM.SolarSystem.#ctor(System.String,System.Double,System.Int64,System.Int64,EDlib.EDSM.Coords,System.Boolean,System.Boolean,System.String,EDlib.EDSM.SystemInfo,EDlib.EDSM.PrimaryStar)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.EDSM.SolarSystem" /> class.</summary>
            <param name="name">The system name.</param>
            <param name="distance">Distance from a specified system.</param>
            <param name="id">The EDSM system ID.</param>
            <param name="id64">The EDSM 64 bit system ID.</param>
            <param name="coords">The system coords.</param>
            <param name="coordsLocked">if set to <c>true</c> [coords locked].</param>
            <param name="requirePermit">If the system requires a permit.</param>
            <param name="permitName">Name of the system permit.</param>
            <param name="information">The system information.</param>
            <param name="primaryStar">The primary star information.</param>
        </member>
        <member name="T:EDlib.EDSM.Coords">
            <summary>
              <para>Represents galactic coordinates for a solar system returned by EDSM Systems API methods.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-v1">Systems v1</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.Coords.X">
            <summary>X coordinate.</summary>
        </member>
        <member name="P:EDlib.EDSM.Coords.Y">
            <summary>Y coordinate.</summary>
        </member>
        <member name="P:EDlib.EDSM.Coords.Z">
            <summary>Z coordinate.</summary>
        </member>
        <member name="T:EDlib.EDSM.SystemInfo">
            <summary>
              <para>A summary of information about a solar system returned by EDSM Systems API methods.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-v1">Systems v1</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.SystemInfo.Allegiance">
            <summary>The current superpower allegiance of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemInfo.Government">
            <summary>The current government type of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemInfo.Faction">
            <summary>The current faction who controls the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemInfo.FactionState">
            <summary>The current active state of the controlling faction.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemInfo.Population">
            <summary>The population of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemInfo.Security">
            <summary>The current security level of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemInfo.Economy">
            <summary>The primary economy type of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemInfo.SecondEconomy">
            <summary>The secondary economy type of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemInfo.Reserve">
            <summary>The mining reserves present in system.</summary>
        </member>
        <member name="T:EDlib.EDSM.PrimaryStar">
            <summary>
              <para>Represents the primary star in a solar system returned by EDSM Systems API methods.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-v1">Systems v1</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.PrimaryStar.Type">
            <summary>The type of the primary star. See the EDSM Celestial Bodies FAQ for more info.</summary>
        </member>
        <member name="P:EDlib.EDSM.PrimaryStar.Name">
            <summary>The name of the primary star.</summary>
        </member>
        <member name="P:EDlib.EDSM.PrimaryStar.IsScoopable">
            <summary>Whether the primary star can be scooped for fuel.</summary>
        </member>
        <member name="T:EDlib.EDSM.Station">
            <summary>
              <para>Represents a station returned by EDSM System API methods.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-system-v1">System v1</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.Station.Id">
            <summary>The EDSM internal ID of the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.MarketId">
            <summary>The market ID of the station (use this ID for EDSM queries).</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.Type">
            <summary>The type of station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.Name">
            <summary>The name of station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.DistanceToArrival">
            <summary>Distance from the primary star to the station in light seconds.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.Allegiance">
            <summary>The superpower allegiance of the faction.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.Government">
            <summary>The government type of the faction.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.Economy">
            <summary>The primary economy type of the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.SecondEconomy">
            <summary>The secondary economy type of the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.HaveMarket">
            <summary><c>true</c> if the station has a market.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.HaveShipyard">
            <summary><c>true</c> if the station has a shipyard.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.HaveOutfitting">
            <summary><c>true</c> if the station has an outfitting service.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.OtherServices">
            <summary>Array of other services available in the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.ControllingFaction">
            <summary>The current faction that controls the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.UpdateTime">
            <summary>When the station details were last updated on ESDM.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.Body">
            <summary>Location of a planetary outpost.</summary>
        </member>
        <member name="T:EDlib.EDSM.UpdateTime">
            <summary>
              <para>Represents when the station details were last updated on ESDM.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-system-v1">System v1</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.UpdateTime.Information">
            <summary>The date and time when the station data was last updated on EDSM.</summary>
        </member>
        <member name="P:EDlib.EDSM.UpdateTime.Market">
            <summary>The date and time when the market data was last updated on EDSM.</summary>
        </member>
        <member name="P:EDlib.EDSM.UpdateTime.Shipyard">
            <summary>The date and time when the shipyard data was last updated on EDSM.</summary>
        </member>
        <member name="P:EDlib.EDSM.UpdateTime.Outfitting">
            <summary>The date and time when the outfitting data was last updated on EDSM.</summary>
        </member>
        <member name="T:EDlib.EDSM.Body">
            <summary>
              <para>Represents the location of a planetary outpost returned by EDSM System API methods.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-system-v1">System v1</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.Body.Id">
            <summary>The ID of the body.</summary>
        </member>
        <member name="P:EDlib.EDSM.Body.Name">
            <summary>The name of the body.</summary>
        </member>
        <member name="P:EDlib.EDSM.Body.Latitude">
            <summary>The latitude of the planetary outpost if known.</summary>
        </member>
        <member name="P:EDlib.EDSM.Body.Longitude">
            <summary>The longitude of the planetary outpost if known.</summary>
        </member>
        <member name="T:EDlib.EDSM.StationOutfitting">
            <summary>
              <para>Represents an outfitting service returned by EDSM System API methods.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-system-v1">System v1</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.StationOutfitting.Id">
            <summary>The EDSM internal ID of the outfitting service.</summary>
        </member>
        <member name="P:EDlib.EDSM.StationOutfitting.Id64">
            <summary>The EDSM internal ID of the outfitting service (64 bit).</summary>
        </member>
        <member name="P:EDlib.EDSM.StationOutfitting.Name">
            <summary>The name of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.StationOutfitting.MarketId">
            <summary>The outfitting service ID (use this ID for EDSM queries).</summary>
        </member>
        <member name="P:EDlib.EDSM.StationOutfitting.SId">
            <summary>The EDSM internal ID of the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.StationOutfitting.SName">
            <summary>The name of the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.StationOutfitting.Url">
            <summary>The EDSM URL for the outfitting service.</summary>
        </member>
        <member name="P:EDlib.EDSM.StationOutfitting.Outfitting">
            <summary>List of <see cref="T:EDlib.EDSM.ShipModule" /> available from this outfitting service.</summary>
        </member>
        <member name="P:EDlib.EDSM.StationOutfitting.LastUpdated">
            <summary>The date and time when the information was requested.</summary>
        </member>
        <member name="M:EDlib.EDSM.StationOutfitting.#ctor(System.Int64,System.Int64,System.String,System.Int64,System.Int64,System.String,System.String,System.Collections.Generic.List{EDlib.EDSM.ShipModule})">
            <summary>Initializes a new instance of the <see cref="T:EDlib.EDSM.StationOutfitting" /> class.</summary>
            <param name="id">The EDSM outfitting service ID.</param>
            <param name="id64">The EDSM 64 bit outfitting service ID.</param>
            <param name="name">The system name.</param>
            <param name="marketId">The outfitting service ID.</param>
            <param name="sId">The station ID.</param>
            <param name="sName">The station name.</param>
            <param name="url">The EDSM URL for the outfitting service.</param>
            <param name="outfitting">List of <see cref="P:EDlib.EDSM.StationOutfitting.Outfitting" /> available from this outfitting service.</param>
        </member>
        <member name="T:EDlib.EDSM.ShipModule">
            <summary>
              <para>Represents a ship module returned by EDSM System API methods.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-system-v1">System v1</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.ShipModule.Id">
            <summary>The module ID.</summary>
        </member>
        <member name="P:EDlib.EDSM.ShipModule.Name">
            <summary>The name of the module.</summary>
        </member>
        <member name="T:EDlib.EDSM.SystemFactions">
            <summary>
              <para>Lists the factions in a system returned by EDSM System API methods.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-system-v1">System v1</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.SystemFactions.Id">
            <summary>The EDSM internal ID of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemFactions.Id64">
            <summary>The EDSM internal ID of the system (64 bit).</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemFactions.Name">
            <summary>The name of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemFactions.Url">
            <summary>The EDSM URL for the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemFactions.ControllingFaction">
            <summary>The BGS faction that controls the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemFactions.Factions">
            <summary>Array of <see cref="T:EDlib.EDSM.Faction" /> in the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemFactions.LastUpdated">
            <summary>The date and time when the information was requested.</summary>
        </member>
        <member name="M:EDlib.EDSM.SystemFactions.#ctor(System.Int64,System.Int64,System.String,System.String,EDlib.EDSM.ControllingFaction,System.Collections.Generic.List{EDlib.EDSM.Faction})">
            <summary>Initializes a new instance of the <see cref="T:EDlib.EDSM.SystemFactions" /> class.</summary>
            <param name="id">The EDSM system ID.</param>
            <param name="id64">The EDSM 64 bit system ID.</param>
            <param name="name">The system name.</param>
            <param name="url">The EDSM URL for the system.</param>
            /// <param name="controlFaction">The faction that controls the system.</param>
            <param name="factions">Array of <see cref="T:EDlib.EDSM.Faction" /> in the system.</param>
        </member>
        <member name="T:EDlib.EDSM.SystemsOptions">
            <summary>
              <para>Request options for EDSM Systems API methods.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-v1">Systems v1</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.SystemsOptions.ShowId">
            <summary>Include the EDSM system ID in the results.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemsOptions.ShowCoordinates">
            <summary>Include the stellar coordinates of the system in the results.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemsOptions.ShowPermit">
            <summary>Include system permit details in the results.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemsOptions.ShowInformation">
            <summary>Include a summary of system information in the results.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemsOptions.ShowPrimaryStar">
            <summary>Include primary star details in the results.</summary>
        </member>
        <member name="M:EDlib.EDSM.SystemsOptions.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.</summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemsOptions.Equals(EDlib.EDSM.SystemsOptions)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemsOptions.GetHashCode">
            <summary>Returns a hash code for this instance.</summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:EDlib.EDSM.SystemStations">
            <summary>
              <para>Lists the stations in a system returned by EDSM System API methods.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-system-v1">System v1</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.SystemStations.Id">
            <summary>The EDSM internal ID of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemStations.Id64">
            <summary>The EDSM internal ID of the system. (64 bit)</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemStations.Name">
            <summary>The name of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemStations.Url">
            <summary>The EDSM URL for the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemStations.Stations">
            <summary>List of <see cref="T:EDlib.EDSM.Station" /> in the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemStations.LastUpdated">
            <summary>The date and time when the information was requested.</summary>
        </member>
        <member name="M:EDlib.EDSM.SystemStations.#ctor(System.Int64,System.Int64,System.String,System.String,System.Collections.Generic.List{EDlib.EDSM.Station})">
            <summary>Initializes a new instance of the <see cref="T:EDlib.EDSM.SystemStations" /> class.</summary>
            <param name="id">The EDSM system ID.</param>
            <param name="id64">The EDSM 64 bit system ID.</param>
            <param name="name">The system name.</param>
            <param name="url">The EDSM URL for the system.</param>
            <param name="stations">Array of <see cref="T:EDlib.EDSM.Station" /> in the system.</param>
        </member>
        <member name="T:EDlib.EDSM.EdsmService">
            <summary>
              <para>Utility service used by other services to get data from EDSM APIs.</para>
              <para>See EDSM <a href="https://www.edsm.net/">API documentation.</a>.</para>
            </summary>
        </member>
        <member name="M:EDlib.EDSM.EdsmService.Instance(EDlib.Network.IDownloadService)">
            <summary>Instantiates the EdsmService class.</summary>
            <param name="downloadService">IDownloadService instance used to download data.</param>
            <returns>EdsmService</returns>
        </member>
        <member name="M:EDlib.EDSM.EdsmService.GetData(System.String,System.Collections.Generic.Dictionary{System.String,System.String},EDlib.Network.DownloadOptions)">
            <summary>Gets data from an EDSM API.</summary>
            <param name="method">The EDSM API method.</param>
            <param name="parameters">The parameters for the API method.</param>
            <param name="options">Options for download.</param>
            <returns>Task&lt;(string, DateTime)&gt;<br /></returns>
        </member>
        <member name="T:EDlib.EDSM.EliteStatusService">
            <summary>
              <para>Gets the status of the Elite: Dangerous game servers.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-status-v1">Status v1</a>.</para>
            </summary>
        </member>
        <member name="M:EDlib.EDSM.EliteStatusService.Instance(EDlib.Network.IDownloadService)">
            <summary>Instantiates the EliteStatusService class.</summary>
            <param name="downloadService">IDownloadService instance used to download data.</param>
            <returns>EliteStatusService</returns>
        </member>
        <member name="M:EDlib.EDSM.EliteStatusService.GetData(System.Int32,System.Boolean)">
            <summary>Gets the status of the Elite: Dangerous server.</summary>
            <param name="cacheMinutes">The number of minutes to cache the data.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;NewsArticle&gt;, DateTime)&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
        </member>
        <member name="M:EDlib.EDSM.EliteStatusService.GetData(System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets the status of the Elite: Dangerous server.</summary>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;NewsArticle&gt;, DateTime)&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
        </member>
        <member name="T:EDlib.EDSM.SystemService">
            <summary>
              <para>Gets data from the EDSM System API including stations, markets, shipyards, outfitting and factions.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-system-v1">System v1</a>.</para>
            </summary>
        </member>
        <member name="M:EDlib.EDSM.SystemService.Instance(EDlib.Network.IDownloadService)">
            <summary>Instantiates the SystemService class.</summary>
            <param name="downloadService">IDownloadService instance used to download data.</param>
            <returns>SystemService</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetStations(System.String,System.Int32,System.Boolean)">
            <summary>Gets information about stations in a system.</summary>
            <param name="systemName">The system name.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;SystemStations&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetStations(System.String,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about stations in a system.</summary>
            <param name="systemName">The system name.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;SystemStations&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetMarket(System.Int64,System.Int32,System.Boolean)">
            <summary>Gets information about a market in a station.</summary>
            <param name="marketId">The in-game marketId of the market.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;Market&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetMarket(System.Int64,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about a market in a station.</summary>
            <param name="marketId">The in-game marketId of the market.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;Market&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetMarket(System.String,System.String,System.Int32,System.Boolean)">
            <summary>Gets information about a market in a station.</summary>
            <param name="systemName">The name of the system where the market is located.</param>
            <param name="stationName">The name of the station where the market is located.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;Market&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetMarket(System.String,System.String,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about a market in a station.</summary>
            <param name="systemName">The name of the system where the market is located.</param>
            <param name="stationName">The name of the station where the market is located.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;Market&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetShipyard(System.Int64,System.Int32,System.Boolean)">
            <summary>Gets information about a shipyard in a station.</summary>
            <param name="marketId">The in-game marketId of the station where the shipyard is located.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;Shipyard&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetShipyard(System.Int64,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about a shipyard in a station.</summary>
            <param name="marketId">The in-game marketId of the station where the shipyard is located.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;Shipyard&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetShipyard(System.String,System.String,System.Int32,System.Boolean)">
            <summary>Gets information about a shipyard in a station.</summary>
            <param name="systemName">The name of the system where the shipyard is located.</param>
            <param name="stationName">The name of the station where the shipyard is located.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;Shipyard&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetShipyard(System.String,System.String,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about a shipyard in a station.</summary>
            <param name="systemName">The name of the system where the shipyard is located.</param>
            <param name="stationName">The name of the station where the shipyard is located.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;Shipyard&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetOutfitting(System.Int64,System.Int32,System.Boolean)">
            <summary>Gets information about a outfitting in a station.</summary>
            <param name="marketId">The in-game marketId of the station where the outfitting is located.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;StationOutfitting&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetOutfitting(System.Int64,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about a outfitting in a station.</summary>
            <param name="marketId">The in-game marketId of the station where the outfitting is located.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;StationOutfitting&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetOutfitting(System.String,System.String,System.Int32,System.Boolean)">
            <summary>Gets information about a outfitting in a station.</summary>
            <param name="systemName">The name of the system where the outfitting is located.</param>
            <param name="stationName">The name of the station where the outfitting is located.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;StationOutfitting&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetOutfitting(System.String,System.String,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about a outfitting in a station.</summary>
            <param name="systemName">The name of the system where the outfitting is located.</param>
            <param name="stationName">The name of the station where the outfitting is located.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;StationOutfitting&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetFactions(System.String,System.Int32,System.Boolean)">
            <summary>Gets information about factions in a system.</summary>
            <param name="systemName">The system name.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;SystemFactions&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetFactions(System.String,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about factions in a system.</summary>
            <param name="systemName">The system name.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;SystemFactions&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="T:EDlib.EDSM.SystemsService">
            <summary>
              <para>Gets data from the EDSM Systems API including allegiance, government, controlling faction, population, security and economic information.</para>
              <para>See EDSM API documentation for <a href="https://www.edsm.net/en/api-v1">Systems v1</a>.</para>
            </summary>
        </member>
        <member name="M:EDlib.EDSM.SystemsService.Instance(EDlib.Network.IDownloadService)">
            <summary>Instantiates the SystemsService class.</summary>
            <param name="downloadService">IDownloadService instance used to download data.</param>
            <returns>SystemsService</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemsService.GetSystem(System.String,EDlib.EDSM.SystemsOptions,System.Int32,System.Boolean)">
            <summary>Gets information about a solar system.</summary>
            <param name="systemName">The system name.</param>
            <param name="options">The Systems API request options.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;SolarSystem&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemsService.GetSystem(System.String,EDlib.EDSM.SystemsOptions,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about a solar system.</summary>
            <param name="systemName">The system name.</param>
            <param name="options">The Systems API request options.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;SolarSystem&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemsService.GetSystems(System.String[],EDlib.EDSM.SystemsOptions,System.Int32,System.Boolean)">
            <summary>Gets information about an array of solar systems.</summary>
            <param name="systemNames">An array of system names.</param>
            <param name="options">The Systems API request options.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;SolarSystem&gt;, DateTime)&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemsService.GetSystems(System.String[],EDlib.EDSM.SystemsOptions,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about an array of solar systems.</summary>
            <param name="systemNames">An array of system names.</param>
            <param name="options">The Systems API request options.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;SolarSystem&gt;, DateTime)&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemsService.GetSystemsInCube(System.String,System.Int32,EDlib.EDSM.SystemsOptions,System.Int32,System.Boolean)">
            <summary>Gets information about systems within a cube.</summary>
            <param name="systemName">The name of the system at the centre of the cube.</param>
            <param name="size">The size of the cube in light years; max 200 ly.</param>
            <param name="options">The Systems API request options.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;SolarSystem&gt;, DateTime)&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemsService.GetSystemsInCube(System.String,System.Int32,EDlib.EDSM.SystemsOptions,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about systems within a cube.</summary>
            <param name="systemName">The name of the system at the centre of the cube.</param>
            <param name="size">The size of the cube in light years; max 200 ly.</param>
            <param name="options">The Systems API request options.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;SolarSystem&gt;, DateTime)&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemsService.GetSystemsInSphere(System.String,System.Int32,System.Int32,EDlib.EDSM.SystemsOptions,System.Int32,System.Boolean)">
            <summary>Gets information about systems within a sphere.</summary>
            <param name="systemName">The name of the system at the centre of the sphere.</param>
            <param name="radius">The radius of the sphere in light years; max 100 ly.</param>
            <param name="minRadius">Set to a value between 0 and <c>radius</c> to reduce the returned results, in light years.</param>
            <param name="options">The Systems API request options.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;SolarSystem&gt;, DateTime)&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="M:EDlib.EDSM.SystemsService.GetSystemsInSphere(System.String,System.Int32,System.Int32,EDlib.EDSM.SystemsOptions,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about systems within a sphere.</summary>
            <param name="systemName">The name of the system at the centre of the sphere.</param>
            <param name="radius">The radius of the sphere in light years; max 100 ly.</param>
            <param name="minRadius">Set to a value between 0 and <c>radius</c> to reduce the returned results, in light years.</param>
            <param name="options">The Systems API request options.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;SolarSystem&gt;, DateTime)&gt;</returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
            <exception cref="T:System.ArgumentNullException">Required argument is missing.</exception>
        </member>
        <member name="T:EDlib.APIException">
            <summary>Represents errors from an API.</summary>
        </member>
        <member name="P:EDlib.APIException.StatusCode">
            <summary>The error code from the API if available.</summary>
        </member>
        <member name="M:EDlib.APIException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:EDlib.APIException" /> class.</summary>
        </member>
        <member name="M:EDlib.APIException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.APIException" /> class with a specified error message.</summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:EDlib.APIException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.APIException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:EDlib.APIException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.APIException" /> class with serialised data.</summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo">SerializationInfo</see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext">StreamingContext</see> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:EDlib.APIException.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>Initializes a new instance of the <see cref="T:EDlib.APIException" /> class with a specified error message and error code.</summary>
            <param name="message">The message that describes the error.</param>
            <param name="code">The error code from the API.</param>
        </member>
        <member name="M:EDlib.APIException.#ctor(System.String,System.Exception,System.Nullable{System.Int32})">
            <summary>Initializes a new instance of the <see cref="T:EDlib.APIException" /> class with a specified error message, error code and a reference to the inner exception that is the cause of this exception.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
            <param name="code">The error code from the API.</param>
        </member>
        <member name="T:EDlib.NoNetworkNoCacheException">
            <summary>Represents errors that occur because no network is available and no data is cached.</summary>
        </member>
        <member name="M:EDlib.NoNetworkNoCacheException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:EDlib.NoNetworkNoCacheException" /> class.</summary>
        </member>
        <member name="M:EDlib.NoNetworkNoCacheException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.NoNetworkNoCacheException" /> class with a specified error message.</summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:EDlib.NoNetworkNoCacheException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.NoNetworkNoCacheException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:EDlib.NoNetworkNoCacheException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.NoNetworkNoCacheException" /> class with serialised data.</summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo">SerializationInfo</see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext">StreamingContext</see> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:EDlib.GalNet.NewsArticle">
            <summary>Represents a GalNet News article.</summary>
        </member>
        <member name="P:EDlib.GalNet.NewsArticle.Id">
            <summary>Frontier Developments Id for the News article.</summary>
        </member>
        <member name="P:EDlib.GalNet.NewsArticle.Title">
            <summary>The title of the News article.</summary>
        </member>
        <member name="P:EDlib.GalNet.NewsArticle.Body">
            <summary>The content of the News article.</summary>
        </member>
        <member name="P:EDlib.GalNet.NewsArticle.PublishDateTime">
            <summary>The date when the article was published.</summary>
        </member>
        <member name="P:EDlib.GalNet.NewsArticle.Link">
            <summary>
              Link to the Galnet article on community.elitedangerous.com.<br/>
              Does not include the server part of the URL.
            </summary>
        </member>
        <member name="P:EDlib.GalNet.NewsArticle.Topic">
            <summary>The topic of the News article, generated using a Bag of Words technique.</summary>
        </member>
        <member name="P:EDlib.GalNet.NewsArticle.Tags">
            <summary>Content tags for the News article, generated using a Bag of Words technique.</summary>
        </member>
        <member name="P:EDlib.GalNet.NewsArticle.PublishDate">
            <summary>The date when the article was published as a string.</summary>
        </member>
        <member name="M:EDlib.GalNet.NewsArticle.ClassifyArticle(System.Collections.Generic.List{EDlib.Common.Topic},System.Collections.Generic.List{EDlib.Common.Topic})">
            <summary>Determines the Topic and content Tags for an article by analysing it using a Bag of Words technique.</summary>
            <param name="topics">List of <see cref="P:EDlib.GalNet.NewsArticle.Topic" /> to use when classifying article.</param>
            <param name="ignoreTopics">List of <see cref="P:EDlib.GalNet.NewsArticle.Topic" /> to ignore when classifying article.</param>
        </member>
        <member name="M:EDlib.GalNet.NewsArticle.ToString">
            <summary>Returns the Title and Body of an article as a string.</summary>
        </member>
        <member name="T:EDlib.GalNet.NewsArticleConverter">
            <summary>For internal use only. JsonConverter for GalNet News articles.</summary>
        </member>
        <member name="T:EDlib.GalNet.GalNetService">
            <summary>
              <para>
                Gets the latest GalNet News from an API provided by Taranis Software.<br/>
                Uses a Bag of Words technique to determine a Topic and content Tags for each article.
              </para>
              <para>Please cache for a minimum of 3 hours.</para>
            </summary>
        </member>
        <member name="M:EDlib.GalNet.GalNetService.Instance(EDlib.Network.IDownloadService)">
            <summary>Instantiates the GalNetService class.</summary>
            <param name="downloadService">IDownloadService instance used to download data.</param>
            <returns>GalNetService</returns>
        </member>
        <member name="M:EDlib.GalNet.GalNetService.GetData(System.Int32,System.Threading.CancellationTokenSource,System.String,System.String,System.Boolean)">
            <summary>Gets the 20 most recent GalNet News articles.</summary>
            <param name="expiryHours">The number of hours to cache the data, minimum 3 hours.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="BoW">An optional alternative Bag of Words to use when classifying articles as a json string.</param>
            <param name="ignoreBoW">An optional alternative Bag of Words to ignore when classifying articles as a json string.</param>
            <param name="ignoreCache">Ignore any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;NewsArticle&gt;, DateTime)&gt;</returns>
        </member>
        <member name="M:EDlib.GalNet.GalNetService.GetData(System.Int32,System.Int32,System.Threading.CancellationTokenSource,System.String,System.String,System.Boolean)">
            <summary>Gets the most recent GalNet News articles.</summary>
            <param name="articleCount">The number of articles to return.</param>
            <param name="expiryHours">The number of hours to cache the data, minimum 3 hours.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="BoW">An optional alternative Bag of Words to use when classifying articles as a json string.</param>
            <param name="ignoreBoW">An optional alternative Bag of Words to ignore when classifying articles as a json string.</param>
            <param name="ignoreCache">Ignore any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;NewsArticle&gt;, DateTime)&gt;</returns>
        </member>
        <member name="T:EDlib.INARA.CommanderProfile">
            <summary>
              <para>Represents basic information about a Commander from the INARA API.</para>
              <para>See INARA documentation for <a href="https://inara.cz/inara-api-docs/#event-2">getCommanderProfile</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.INARA.CommanderProfile.UserId">
            <summary>The Commander's user ID on INARA.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderProfile.UserName">
            <summary>The Commander's user name on INARA.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderProfile.Ranks">
            <summary>The Commander's ranks in combat, trade, exploration, etc.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderProfile.PreferredAllegiance">
            <summary>The Commander's superpower allegiance.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderProfile.PreferredPower">
            <summary>The Galactic Power supported by the Commander.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderProfile.MainShip">
            <summary>The Commander's main ship as set on INARA.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderProfile.Squadron">
            <summary>The Commander's Squadron.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderProfile.Wing">
            <summary>The Commander's Wing.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderProfile.PreferredGameRole">
            <summary>The Commander's preferred role in game.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderProfile.AvatarImageUrl">
            <summary>URL for the Commander's avatar image on INARA. (jpeg)</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderProfile.InaraUrl">
            <summary>URL for the Commander's profile on INARA.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderProfile.OtherNamesFound">
            <summary>List of possible Commander names returned when a partial match is found.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderProfile.LastUpdated">
            <summary>The date and time when the information was requested.</summary>
        </member>
        <member name="M:EDlib.INARA.CommanderProfile.#ctor">
            <summary>Initializes a new instance of the <see cref="T:EDlib.INARA.CommanderProfile" /> class.</summary>
        </member>
        <member name="T:EDlib.INARA.CommanderShip">
            <summary>Basic information about a Commander's ship returned by the INARA API.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderShip.Type">
            <summary>The ship type.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderShip.Name">
            <summary>The ship's name.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderShip.Ident">
            <summary>The ship's ID tag.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderShip.Role">
            <summary>The ship's role.</summary>
        </member>
        <member name="T:EDlib.INARA.CommanderRank">
            <summary>Information about a Commander's rank returned by the INARA API.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderRank.Name">
            <summary>The name of the rank.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderRank.Value">
            <summary>The rank reached by the Commander.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderRank.Progress">
            <summary>The Commander's progress in their current rank.</summary>
        </member>
        <member name="T:EDlib.INARA.CommanderSquadron">
            <summary>Information about a Commander's squadron returned by the INARA API.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderSquadron.Id">
            <summary>The squadron's ID on INARA.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderSquadron.Name">
            <summary>The squadron's name.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderSquadron.MembersCount">
            <summary>The number of Commanders in the squadron.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderSquadron.Rank">
            <summary>The Commander's rank in the squadron.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderSquadron.InaraUrl">
            <summary>URL for the squadron's profile on INARA.</summary>
        </member>
        <member name="T:EDlib.INARA.CommanderWing">
            <summary>Information about a Commander's wing returned by the INARA API.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderWing.Id">
            <summary>The wing's ID on INARA.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderWing.Name">
            <summary>The wing's name.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderWing.MembersCount">
            <summary>The number of Commanders in the wing.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderWing.Rank">
            <summary>The Commander's rank in the wing.</summary>
        </member>
        <member name="P:EDlib.INARA.CommanderWing.InaraUrl">
            <summary>URL for the wing's profile on INARA.</summary>
        </member>
        <member name="T:EDlib.INARA.CommunityGoal">
            <summary>
              <para>Represents a Community Goal returned by the INARA API.</para>
              <para>See INARA documentation for <a href="https://inara.cz/inara-api-docs/#event-37">getCommunityGoalsRecent</a>.</para>
            </summary>
        </member>
        <member name="E:EDlib.INARA.CommunityGoal.PropertyChanged">
            <summary>Raised when some properties change.</summary>
        </member>
        <member name="P:EDlib.INARA.CommunityGoal.CommunityGoalName">
            <summary>The name of the Community goal.</summary>
        </member>
        <member name="P:EDlib.INARA.CommunityGoal.CommunityGoalGameID">
            <summary>The ID of the community goal.</summary>
        </member>
        <member name="P:EDlib.INARA.CommunityGoal.StarsystemName">
            <summary>The name of the system where the Community Goal taking place.</summary>
        </member>
        <member name="P:EDlib.INARA.CommunityGoal.StationName">
            <summary>The name of the station where the Community Goal taking place.</summary>
        </member>
        <member name="P:EDlib.INARA.CommunityGoal.GoalExpiry">
            <summary>The date and time when the Community Goal ends.</summary>
        </member>
        <member name="P:EDlib.INARA.CommunityGoal.TierReached">
            <summary>The current tier reached.</summary>
        </member>
        <member name="P:EDlib.INARA.CommunityGoal.TierMax">
            <summary>The maximum number of tiers. If reached, the Community Goal ends.</summary>
        </member>
        <member name="P:EDlib.INARA.CommunityGoal.ContributorsNum">
            <summary>The number of contributors to the Community Goal.</summary>
        </member>
        <member name="P:EDlib.INARA.CommunityGoal.ContributionsTotal">
            <summary>The total contributions to the Community Goal.</summary>
        </member>
        <member name="P:EDlib.INARA.CommunityGoal.IsCompleted">
            <summary>Whether the Community Goal has ended.</summary>
        </member>
        <member name="P:EDlib.INARA.CommunityGoal.LastUpdate">
            <summary>The date and time when INARA last updated this information.</summary>
        </member>
        <member name="P:EDlib.INARA.CommunityGoal.GoalObjectiveText">
            <summary>The objective for the Community Goal.</summary>
        </member>
        <member name="P:EDlib.INARA.CommunityGoal.GoalRewardText">
            <summary>The reward for the Community Goal.</summary>
        </member>
        <member name="P:EDlib.INARA.CommunityGoal.GoalDescriptionText">
            <summary>The full description of the Community Goal.</summary>
        </member>
        <member name="P:EDlib.INARA.CommunityGoal.InaraURL">
            <summary>The INARA URL for this Community Goal.</summary>
        </member>
        <member name="P:EDlib.INARA.CommunityGoal.TimeRemaining">
            <summary>The time remaining until this Community Goal expires.</summary>
        </member>
        <member name="P:EDlib.INARA.CommunityGoal.Progress">
            <summary>The date and time when the Community Goal ends.</summary>
        </member>
        <member name="P:EDlib.INARA.CommunityGoal.ProgressText">
            <summary>The progress of the Community Goal. (Progress x/y Tiers)</summary>
        </member>
        <member name="P:EDlib.INARA.CommunityGoal.Topic">
            <summary>The topic for this Community Goal, generated using a Bag of Words technique.</summary>
        </member>
        <member name="M:EDlib.INARA.CommunityGoal.#ctor">
            <summary>Initializes a new empty instance of the <see cref="T:EDlib.INARA.CommunityGoal" /> class.</summary>
        </member>
        <member name="M:EDlib.INARA.CommunityGoal.ClassifyCG(System.Collections.Generic.List{EDlib.Common.Topic})">
            <summary>Determines the Topic for a Community Goal by analysing it using a Bag of Words technique.</summary>
            <param name="topics">List of <see cref="P:EDlib.INARA.CommunityGoal.Topic" /> to use when classifying article.</param>
        </member>
        <member name="M:EDlib.INARA.CommunityGoal.OnPropertyChanged(System.String)">
            <summary>
              <para>Raised when TimeRemaining or IsCompleted properties change to handle System.ComponentModel.INotifyPropertyChanged.PropertyChanged.</para>
              <para>Note: TimeRemaining is a public property, use a timer to update TimeRemaining and IsCompleted will update automatically.</para>
            </summary>
            <param name="propertyName">Name of the property that changed.</param>
        </member>
        <member name="M:EDlib.INARA.CommunityGoal.ToString">
            <summary>Returns the Name, System and Objective for a Community Goal as a string.</summary>
        </member>
        <member name="T:EDlib.INARA.InaraEvent">
            <summary>
              <para>Represents the data block in an INARA API request and response.</para>
              <para>See INARA documentation for <a href="https://inara.cz/inara-api-docs/#eventdataeventsprops">Events properties</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.INARA.InaraEvent.EventName">
            <summary>The name of the event / method.</summary>
        </member>
        <member name="P:EDlib.INARA.InaraEvent.EventTimestamp">
            <summary>Date and time in ISO 8601 format (like: 2017-05-02T17:30:49Z)</summary>
        </member>
        <member name="P:EDlib.INARA.InaraEvent.EventData">
            <summary>Required properties for a request / data returned by the API. Individual event properties are detailed in the event's documentation.</summary>
        </member>
        <member name="P:EDlib.INARA.InaraEvent.EventStatus">
            <summary>Event status code, see <a href="https://inara.cz/inara-api-docs/#eventdatacodes">INARA eventStatus codes</a>.</summary>
        </member>
        <member name="P:EDlib.INARA.InaraEvent.EventStatusText">
            <summary>Explanation of the status code, only returned on errors and warnings.</summary>
        </member>
        <member name="M:EDlib.INARA.InaraEvent.#ctor(System.String,System.Object)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.INARA.InaraEvent" /> class.</summary>
            <param name="name">The name of the event / method.</param>
            <param name="data">The event data.</param>
        </member>
        <member name="T:EDlib.INARA.InaraHeader">
            <summary>
              <para>Represents the header block in an INARA API request and response.</para>
              <para>See INARA documentation for <a href="https://inara.cz/inara-api-docs/#eventdataheaderprops">Header properties</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.INARA.InaraHeader.AppName">
            <summary>The name of the application.</summary>
        </member>
        <member name="P:EDlib.INARA.InaraHeader.AppVersion">
            <summary>The version of the application.</summary>
        </member>
        <member name="P:EDlib.INARA.InaraHeader.ApiKey">
            <summary>A user's personal API key or a generic application API key (for read-only events).</summary>
        </member>
        <member name="P:EDlib.INARA.InaraHeader.IsDeveloped">
            <summary>Set to <c>true</c> to indicate this version is in development.</summary>
        </member>
        <member name="P:EDlib.INARA.InaraHeader.EventStatus">
            <summary>Event status code, see <a href="https://inara.cz/inara-api-docs/#eventdatacodes">INARA eventStatus codes</a>.</summary>
        </member>
        <member name="P:EDlib.INARA.InaraHeader.EventStatusText">
            <summary>Explanation of the status code, only returned on errors and warnings.</summary>
        </member>
        <member name="M:EDlib.INARA.InaraHeader.#ctor">
            <summary>Initializes a new empty instance of the <see cref="T:EDlib.INARA.InaraHeader" /> class.</summary>
        </member>
        <member name="M:EDlib.INARA.InaraHeader.#ctor(EDlib.INARA.InaraIdentity)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.INARA.InaraHeader" /> class with the provided credentials.</summary>
            <param name="identity">The <see cref="T:EDlib.INARA.InaraIdentity" /> credentials required to access the INARA API.</param>
        </member>
        <member name="T:EDlib.INARA.InaraIdentity">
            <summary>
              <para>Represents the credentials required to access the INARA API.</para>
              <para>See INARA documentation for <a href="https://inara.cz/inara-api-docs/#eventdataheaderprops">Header properties</a>.</para>
            </summary>
        </member>
        <member name="P:EDlib.INARA.InaraIdentity.AppName">
            <summary>The name of the application.</summary>
        </member>
        <member name="P:EDlib.INARA.InaraIdentity.AppVersion">
            <summary>The version of the application.</summary>
        </member>
        <member name="P:EDlib.INARA.InaraIdentity.ApiKey">
            <summary>A user's personal API key or a generic application API key (for read-only events).</summary>
        </member>
        <member name="P:EDlib.INARA.InaraIdentity.IsDeveloped">
            <summary>Set to <c>true</c> to indicate this version is in development.</summary>
        </member>
        <member name="M:EDlib.INARA.InaraIdentity.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.INARA.InaraIdentity" /> class with the provided credentials.</summary>
            <param name="appName">The name of the application.</param>
            <param name="appVersion">The version of the application.</param>
            <param name="apiKey">A user's personal API key or a generic application API key.</param>
            <param name="isDeveloped">Set <c>true</c> if in development.</param>
        </member>
        <member name="T:EDlib.INARA.InaraRequest">
            <summary>
              <para>Represents an INARA API request and response.</para>
              <para>See INARA <a href="https://inara.cz/inara-api-docs/">API documentation.</a>.</para>
            </summary>
        </member>
        <member name="F:EDlib.INARA.InaraRequest.Header">
            <summary>The header block in an INARA API request and response.</summary>
        </member>
        <member name="F:EDlib.INARA.InaraRequest.Events">
            <summary>The data block in an INARA API request and response.</summary>
        </member>
        <member name="T:EDlib.INARA.CommanderProfileService">
            <summary>
              <para>Gets basic information about a Commander from the INARA API like ranks, squadron and allegiance.</para>
              <para>See INARA documentation for <a href="https://inara.cz/inara-api-docs/#event-2">getCommanderProfile</a>.</para>
              <para>Note: The information returned will be determined by the Commander's privacy settings on INARA.</para>
            </summary>
        </member>
        <member name="M:EDlib.INARA.CommanderProfileService.Instance(EDlib.Network.IDownloadService)">
            <summary>Instantiates the CommanderProfileService class.</summary>
            <param name="downloadService">IDownloadService instance used to download data.</param>
            <returns>CommanderProfileService</returns>
        </member>
        <member name="M:EDlib.INARA.CommanderProfileService.GetData(System.String,System.Int32,EDlib.INARA.InaraIdentity,System.Threading.CancellationTokenSource,System.Boolean)">
            <summary>Gets basic information about a Commander from the INARA API.</summary>
            <param name="searchName">The Commander's name to search for. If an exact match is not found a number of partial matches may be returned.</param>
            <param name="cacheMinutes">How long to cache the data in minutes, minimum 5 minutes.</param>
            <param name="identity">The <see cref="T:EDlib.INARA.InaraIdentity" /> credentials required to access the INARA API.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;CommanderProfile&gt;</returns>
        </member>
        <member name="T:EDlib.INARA.CommunityGoalsService">
            <summary>
              <para>Gets details of ongoing and recently completed Community Goals from the INARA API.</para>
              <para>See INARA documentation for <a href="https://inara.cz/inara-api-docs/#event-37">getCommunityGoalsRecent</a>.</para>
            </summary>
        </member>
        <member name="M:EDlib.INARA.CommunityGoalsService.Instance(EDlib.Network.IDownloadService)">
            <summary>Instantiates the CommunityGoalsService class.</summary>
            <param name="downloadService">IDownloadService instance used to download data.</param>
            <returns>CommunityGoalsService</returns>
        </member>
        <member name="M:EDlib.INARA.CommunityGoalsService.GetData(System.Int32,System.Int32,EDlib.INARA.InaraIdentity,System.Threading.CancellationTokenSource,System.String,System.Boolean)">
            <summary>Gets a number of recent Community Goals from INARA.</summary>
            <param name="goalCount">The number of Community Goals to return.</param>
            <param name="cacheMinutes">How long to cache the data in minutes, minimum 60 minutes.</param>
            <param name="identity">The <see cref="T:EDlib.INARA.InaraIdentity" /> credentials required to access the INARA API.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="BoW">An optional alternative Bag of Words to use when classifying Community Goals, passed as a json string.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;CommunityGoal&gt;, DateTime)&gt;</returns>
        </member>
        <member name="M:EDlib.INARA.CommunityGoalsService.GetData(System.Int32,EDlib.INARA.InaraIdentity,System.Threading.CancellationTokenSource,System.String,System.Boolean)">
            <summary>Gets all the recent Community Goals from INARA; usually 15.</summary>
            <param name="cacheMinutes">How long to cache the data in minutes, minimum 60 minutes.</param>
            <param name="identity">The <see cref="T:EDlib.INARA.InaraIdentity" /> credentials required to access the INARA API.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="BoW">An optional alternative Bag of Words to use when classifying Community Goals, passed as a json string.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;CommunityGoal&gt;, DateTime)&gt;</returns>
        </member>
        <member name="M:EDlib.INARA.CommunityGoalsService.GetDataByTime(System.Int32,System.Int32,EDlib.INARA.InaraIdentity,System.Threading.CancellationTokenSource,System.String,System.Boolean)">
            <summary>Gets recent Community Goals from INARA over a specified number of days.</summary>
            <param name="requestDays">How many days back to look for Community Goals, minimum 7 days.</param>
            <param name="cacheMinutes">How long to cache the data in minutes, minimum 60 minutes.</param>
            <param name="identity">The <see cref="T:EDlib.INARA.InaraIdentity" /> credentials required to access the INARA API.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="BoW">An optional alternative Bag of Words to use when classifying Community Goals, passed as a json string.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;CommunityGoal&gt;, DateTime)&gt;</returns>
        </member>
        <member name="T:EDlib.INARA.InaraService">
            <summary>
              <para>Utility service used by other services to get data from INARA APIs.</para>
              <para>See INARA <a href="https://inara.cz/inara-api-docs/">API documentation.</a>.</para>
            </summary>
        </member>
        <member name="M:EDlib.INARA.InaraService.Instance(EDlib.Network.IDownloadService)">
            <summary>Instantiates the InaraService class.</summary>
            <param name="downloadService">IDownloadService instance used to download data.</param>
            <returns>InaraService</returns>
        </member>
        <member name="M:EDlib.INARA.InaraService.GetData(EDlib.INARA.InaraHeader,System.Collections.Generic.IList{EDlib.INARA.InaraEvent},EDlib.Network.DownloadOptions)">
            <summary>Gets data from an INARA API.</summary>
            <param name="header">The header for an INARA API request.</param>
            <param name="input">The data for an INARA API request.</param>
            <param name="options">Options for download.</param>
            <returns>Task&lt;(string, DateTime)&gt;<br /></returns>
            <exception cref="T:EDlib.APIException">Errors from the API called.</exception>
        </member>
        <member name="T:EDlib.Network.HttpHelper">
            <summary>A helper class for reading an http response that can decompress data in gzip or deflate streams.</summary>
        </member>
        <member name="M:EDlib.Network.HttpHelper.ReadContentAsync(System.Net.Http.HttpResponseMessage)">
            <summary>Gets the content of an http response which may be compressed.</summary>
            <param name="response">The http response.</param>
            <returns>Task&lt;string&gt;</returns>
        </member>
        <member name="T:EDlib.Network.Sha256Helper">
            <summary>A helper class for generating an SHA256 hash.</summary>
        </member>
        <member name="M:EDlib.Network.Sha256Helper.GenerateHash(System.String)">
            <summary>Generates the SHA256 hash of a string.</summary>
            <param name="input">The string to be hashed.</param>
            <returns>string</returns>
        </member>
        <member name="T:EDlib.Network.CachedDownloadService">
            <summary>Service used to download and cache data.</summary>
        </member>
        <member name="M:EDlib.Network.CachedDownloadService.Instance(System.String,EDlib.Platform.ICacheService,EDlib.Platform.IConnectivityService)">
            <summary>Instantiates the CachedDownloadService class.</summary>
            <param name="userAgent">The user agent used for downloads.</param>
            <param name="cacheService">The platform specific cache for downloaded data.</param>
            <param name="connectivityService">The platform specific connectivity service.</param>
            <returns>DownloadService</returns>
        </member>
        <member name="M:EDlib.Network.CachedDownloadService.GetData(System.String,EDlib.Network.DownloadOptions)">
            <summary>
            Gets data from an API, caches the data and when it was last updated with the option to cancel the request.<br/>
            If a copy of the data exists in the cache and has not expired it will be returned, otherwise the data will be downloaded.
            </summary>
            <param name="url">The URL for downloading the data.</param>
            <param name="options">Options structure for download.</param>
            <returns>Task&lt;(string data, DateTime updated)&gt;</returns>
            <exception cref="T:EDlib.NoNetworkNoCacheException">No Internet available and no data cached.</exception>
            <exception cref="T:EDlib.APIException">Http errors from the API called.</exception>
        </member>
        <member name="M:EDlib.Network.CachedDownloadService.PostData(System.String,System.String,EDlib.Network.DownloadOptions)">
            <summary>
            Posts a request to an API, caches the response and when it was last updated with the option to cancel the request.<br/>
            If a copy of the response exists in the cache and has not expired it will be returned, otherwise the API will be queried.
            </summary>
            <param name="url">The URL of the API.</param>
            <param name="content">The content of the API request.</param>
            <param name="options">Options structure for download.</param>
            <returns>Task&lt;(string data, DateTime updated)&gt;</returns>
            <exception cref="T:EDlib.NoNetworkNoCacheException">No Internet available and no data cached.</exception>
            <exception cref="T:EDlib.APIException">Http errors from the API called.</exception>
        </member>
        <member name="T:EDlib.Network.DownloadOptions">
            <summary>Options structure for download services.</summary>
        </member>
        <member name="P:EDlib.Network.DownloadOptions.CancelToken">
            <summary>A cancellation token for the download method.</summary>
        </member>
        <member name="P:EDlib.Network.DownloadOptions.Expiry">
            <summary>How long to cache the data.</summary>
        </member>
        <member name="P:EDlib.Network.DownloadOptions.IgnoreCache">
            <summary>Download method will ignore any cached data if set to <c>true</c>.</summary>
        </member>
        <member name="M:EDlib.Network.DownloadOptions.#ctor(System.Threading.CancellationTokenSource)">
            <summary>DownloadOptions constructor.</summary>
            <param name="cancelToken">A cancellation token for the download method. (optional)</param>
        </member>
        <member name="M:EDlib.Network.DownloadOptions.#ctor(System.TimeSpan)">
            <summary>DownloadOptions constructor.</summary>
            <param name="expiry">How long to cache the data.</param>
        </member>
        <member name="M:EDlib.Network.DownloadOptions.#ctor(System.Threading.CancellationTokenSource,System.TimeSpan)">
            <summary>DownloadOptions constructor.</summary>
            <param name="cancelToken">A cancellation token.</param>
            <param name="expiry">How long to cache the data.</param>
        </member>
        <member name="M:EDlib.Network.DownloadOptions.#ctor(System.TimeSpan,System.Boolean)">
            <summary>DownloadOptions constructor.</summary>
            <param name="expiry">How long to cache the data.</param>
            <param name="ignoreCache">Ignore any cached data if set to <c>true</c>.</param>
        </member>
        <member name="M:EDlib.Network.DownloadOptions.#ctor(System.Threading.CancellationTokenSource,System.TimeSpan,System.Boolean)">
            <summary>DownloadOptions constructor.</summary>
            <param name="cancelToken">A cancellation token.</param>
            <param name="expiry">How long to cache the data.</param>
            <param name="ignoreCache">Ignore any cached data if set to <c>true</c>.</param>
        </member>
        <member name="T:EDlib.Network.DownloadService">
            <summary>Service used to download data with no cache.</summary>
        </member>
        <member name="M:EDlib.Network.DownloadService.Instance(System.String,EDlib.Platform.IConnectivityService)">
            <summary>Instantiates the DownloadService class.</summary>
            <param name="userAgent">The user agent used for downloads.</param>
            <param name="connectivityService">The platform specific connectivity service.</param>
            <returns>DownloadService</returns>
        </member>
        <member name="M:EDlib.Network.DownloadService.GetData(System.String,EDlib.Network.DownloadOptions)">
            <summary>Gets data from an API and returns the response with the option to cancel the request.</summary>
            <param name="url">The URL of the API.</param>
            <param name="options">Options structure for download.</param>
            <returns>Task&lt;(string data, DateTime updated)&gt;</returns>
            <exception cref="T:EDlib.NoNetworkNoCacheException">No Internet available and no data cached.</exception>
            <exception cref="T:EDlib.APIException">Http errors from the API called.</exception>
        </member>
        <member name="M:EDlib.Network.DownloadService.PostData(System.String,System.String,EDlib.Network.DownloadOptions)">
            <summary>Posts a request to an API and returns the response with the option to cancel the request.</summary>
            <param name="url">The URL of the API.</param>
            <param name="content">The content of the API request.</param>
            <param name="options">Options structure for download.</param>
            <returns>Task&lt;(string data, DateTime updated)&gt;</returns>
            <exception cref="T:EDlib.NoNetworkNoCacheException">No Internet available and no data cached.</exception>
            <exception cref="T:EDlib.APIException">Http errors from the API called.</exception>
        </member>
        <member name="T:EDlib.Network.IDownloadService">
            <summary>Interface for the services used to download data.</summary>
        </member>
        <member name="M:EDlib.Network.IDownloadService.GetData(System.String,EDlib.Network.DownloadOptions)">
            <summary>Gets data from an API and returns the response with the option to cancel the request.</summary>
            <param name="url">The URL of the API.</param>
            <param name="options">Options structure for download.</param>
            <returns>Task&lt;(string data, DateTime updated)&gt;</returns>
        </member>
        <member name="M:EDlib.Network.IDownloadService.PostData(System.String,System.String,EDlib.Network.DownloadOptions)">
            <summary>Posts a request to an API and returns the response with the option to cancel the request.</summary>
            <param name="url">The URL of the API.</param>
            <param name="content">The content of the API request.</param>
            <param name="options">Options structure for download.</param>
            <returns>Task&lt;(string data, DateTime updated)&gt;</returns>
        </member>
        <member name="T:EDlib.Platform.CacheState">
            <summary>Represents the current state of an item in the cache.</summary>
        </member>
        <member name="F:EDlib.Platform.CacheState.None">
            <summary>An unknown state for the cache item.</summary>
        </member>
        <member name="F:EDlib.Platform.CacheState.Expired">
            <summary>Expired cache item.</summary>
        </member>
        <member name="F:EDlib.Platform.CacheState.Active">
            <summary>Active non-expired cache item.</summary>
        </member>
        <member name="T:EDlib.Platform.ICacheService">
            <summary>Interface for a platform specific data caching service.</summary>
        </member>
        <member name="M:EDlib.Platform.ICacheService.Add(System.String,System.String,System.TimeSpan)">
            <summary>Add an item to the cache.</summary>
            <param name="key">Key to identify the cached item.</param>
            <param name="data">String data to store in the cache.</param>
            <param name="expireIn">How long in the future the item should expire.</param>
        </member>
        <member name="M:EDlib.Platform.ICacheService.Delete(System.String[])">
            <summary>Delete the specified items from the cache.</summary>
            <param name="key">A <c>params</c> list of keys identifying the items to delete.</param>
        </member>
        <member name="M:EDlib.Platform.ICacheService.EmptyAll">
            <summary>Empty all items from the cache.</summary>
        </member>
        <member name="M:EDlib.Platform.ICacheService.EmptyExpired">
            <summary>Empty expired items from the cache.</summary>
        </member>
        <member name="M:EDlib.Platform.ICacheService.Exists(System.String)">
            <summary>Checks to see if an item exists in the cache.</summary>
            <param name="key">Key to identify the cached item.</param>
            <returns><c>true</c> if the item exists, else <c>false</c>.</returns>
        </member>
        <member name="M:EDlib.Platform.ICacheService.Get(System.String)">
            <summary>Gets a cached item.</summary>
            <param name="key">Key to identify the cached item.</param>
            <returns>The cached data string if it exists, else <c>null</c>.</returns>
        </member>
        <member name="M:EDlib.Platform.ICacheService.GetExpiration(System.String)">
            <summary>Gets the expiration date and time for a cached item.</summary>
            <param name="key">Key to identify the cached item.</param>
            <returns>The date if the cached item exists, else <c>null</c>.</returns>
        </member>
        <member name="M:EDlib.Platform.ICacheService.GetKeys(EDlib.Platform.CacheState)">
            <summary>Gets keys for any cached items with the specified state.</summary>
            <param name="state">State to get: Multiple with flags: CacheState.Active | CacheState.Expired</param>
            <returns>The relevant keys.</returns>
        </member>
        <member name="M:EDlib.Platform.ICacheService.IsExpired(System.String)">
            <summary>Checks if a cached item is expired.</summary>
            <param name="key">Key to identify the cached item.</param>
            <returns><c>true</c> if expired, else <c>false</c>.</returns>
        </member>
        <member name="T:EDlib.Platform.IConnectivityService">
            <summary>Interface for a platform specific data connectivity service.</summary>
        </member>
        <member name="M:EDlib.Platform.IConnectivityService.IsConnected">
            <summary>Determines whether a network is available.</summary>
            <returns><c>true</c> if a network connection is detected, else <c>false</c>.</returns>
        </member>
        <member name="M:EDlib.Platform.IConnectivityService.IsMetered">
            <summary>Determines whether the network connection is metered.</summary>
            <returns><c>true</c> if the connection is metered, else <c>false</c>.</returns>
        </member>
        <member name="T:EDlib.Platform.PreserveAttribute">
            <summary>
              <para>Linker control attribute.</para>
              <para>To preserve the whole type, use the syntax <c>[Preserve (AllMembers = true)]</c> on the type.<br/>
            		To preserve a member if the containing type was preserved, use <c>[Preserve (Conditional=true)]</c> on the member.</para>
              <para>See: https://docs.microsoft.com/en-gb/xamarin/ios/deploy-test/linker </para>
            </summary>
        </member>
        <member name="F:EDlib.Platform.PreserveAttribute.AllMembers">
            <summary>Set <c>true</c> to preserve the whole type.</summary>
        </member>
        <member name="F:EDlib.Platform.PreserveAttribute.Conditional">
            <summary>Set <c>true</c> to preserve an individual type member.</summary>
        </member>
        <member name="M:EDlib.Platform.PreserveAttribute.#ctor(System.Boolean,System.Boolean)">
            <summary>Preserve attribute constructor.</summary>
            <param name="allMembers">Set <c>true</c> to preserve the whole type.</param>
            <param name="conditional">Set <c>true</c> to preserve an individual type member.</param>
        </member>
        <member name="M:EDlib.Platform.PreserveAttribute.#ctor">
            <summary>Preserve attribute default constructor.</summary>
        </member>
        <member name="T:EDlib.Powerplay.GalacticStandings">
            <summary>Represents the Powerplay Galactic Standings.</summary>
        </member>
        <member name="P:EDlib.Powerplay.GalacticStandings.Cycle">
            <summary>Gets the Powerplay cycle number.</summary>
        </member>
        <member name="P:EDlib.Powerplay.GalacticStandings.LastUpdated">
            <summary>Gets the date and time the Galactic Standings were last updated.</summary>
        </member>
        <member name="P:EDlib.Powerplay.GalacticStandings.Standings">
            <summary>The Galactic Standings - a list of PowerStanding objects.</summary>
        </member>
        <member name="M:EDlib.Powerplay.GalacticStandings.#ctor(System.Int32,System.DateTime)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.Powerplay.GalacticStandings" /> class.</summary>
            <param name="cycle">The Powerplay cycle.</param>
            <param name="lastUpdated">When the Standings were last updated.</param>
        </member>
        <member name="M:EDlib.Powerplay.GalacticStandings.ToString">
            <summary>Returns the Powerplay Galactic Standings as a multi-line string including the cycle and when the Standings were last updated.</summary>
            <returns>A <see cref="T:System.String" /> that represents the Galactic Standings.</returns>
        </member>
        <member name="M:EDlib.Powerplay.GalacticStandings.ToCSV">
            <summary>Returns the Powerplay Galactic Standings as a comma separated string including the cycle and when the Standings were last updated.</summary>
            <returns>A <see cref="T:System.String" /> in CSV format that represents the Galactic Standings.</returns>
        </member>
        <member name="M:EDlib.Powerplay.GalacticStandings.ToJson">
            <summary>Returns the Powerplay Galactic Standings as a JSON string including the cycle and when the Standings were last updated.</summary>
            <returns>A <see cref="T:System.String" /> in JSON format that represents the Galactic Standings.</returns>
        </member>
        <member name="T:EDlib.Powerplay.PowerComms">
            <summary>Contains the comms data for a Power - Reddit Sub and Discord / Slack server.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerComms.Id">
            <summary>The unique identifier for the Power.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerComms.ShortName">
            <summary>The short name for the Power.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerComms.Reddit">
            <summary>The URL for the Power's subreddit.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerComms.Comms">
            <summary>The join link for the Power's Discord or Slack server.</summary>
        </member>
        <member name="M:EDlib.Powerplay.PowerComms.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.Powerplay.PowerComms" /> class.</summary>
            <param name="id">The unique identifier for the Power.</param>
            <param name="shortName">The Power's short name.</param>
            <param name="reddit">The Power's subreddit.</param>
            <param name="comms">The Power's Discord or Slack server.</param>
        </member>
        <member name="M:EDlib.Powerplay.PowerComms.ToString">
            <summary>Returns the Power's comms details as a string.</summary>
            <returns>A <see cref="T:System.String" /> that represents the Power's comms details.</returns>
        </member>
        <member name="T:EDlib.Powerplay.PowerDetails">
            <summary>Represents a Power's statistics, ethos and benefits data.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.Id">
            <summary>The unique identifier for the Power.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.ShortName">
            <summary>The short name for the Power.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.HQ">
            <summary>The name of the Power's headquarters system.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.YearOfBirth">
            <summary>The year the Power was born.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.Allegiance">
            <summary>The Power's allegiance.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.PreparationEthos">
            <summary>The Power's preparation ethos.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.PreparationText">
            <summary>Description of the Power's preparation ethos.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.ExpansionEthos">
            <summary>The Power's expansion ethos.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.ExpansionText">
            <summary>Description of the Power's expansion ethos.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.ExpansionStrongGovernment">
            <summary>The government types that help the Power's expansion.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.ExpansionWeakGovernment">
            <summary>The government types that hinder the Power's expansion.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.ControlEthos">
            <summary>The Power's control ethos.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.ControlText">
            <summary>Description of the Power's control ethos.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.ControlStrongGovernment">
            <summary>The government types that help the Power control their domain.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.ControlWeakGovernment">
            <summary>The government types that hinder the Power controlling their domain.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.HQSystemEffect">
            <summary>Any effects the Power has on their headquarters system.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.ControlSystemEffect">
            <summary>The effects a Power has on systems they control.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.AllianceExploitedEffect">
            <summary>The effects a Power has on Alliance systems they exploit.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.EmpireExploitedEffect">
            <summary>The effects a Power has on Empire systems they exploit.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.FederationExploitedEffect">
            <summary>The effects a Power has on Federation systems they exploit.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.IndependentExploitedEffect">
            <summary>The effects a Power has on Independent systems they exploit.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.Rating1">
            <summary>The benefits of pledging for a Commander at rank 1.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.Rating2">
            <summary>The benefits of pledging for a Commander at rank 2.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.Rating3">
            <summary>The benefits of pledging for a Commander at rank 3.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.Rating4">
            <summary>The benefits of pledging for a Commander at rank 4.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.Rating5">
            <summary>The benefits of pledging for a Commander at rank 5.</summary>
        </member>
        <member name="M:EDlib.Powerplay.PowerDetails.#ctor(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.Powerplay.PowerDetails" /> class.</summary>
            <param name="id">The unique identifier for the Power.</param>
            <param name="shortName">The Power's short name.</param>
            <param name="hq">The Power's headquarters.</param>
            <param name="yearOfBirth">The Power's year of birth.</param>
            <param name="allegiance">The Power's allegiance.</param>
            <param name="preparationEthos">The Power's preparation ethos.</param>
            <param name="preparationText">The description of the preparation ethos.</param>
            <param name="expansionEthos">The Power's expansion ethos.</param>
            <param name="expansionText">The description of the expansion ethos.</param>
            <param name="expansionStrongGovernment">The government types that help expansion.</param>
            <param name="expansionWeakGovernment">The government types that hinder expansion.</param>
            <param name="controlEthos">The Power's control ethos.</param>
            <param name="controlText">The description of the control ethos.</param>
            <param name="controlStrongGovernment">The government types that help with control.</param>
            <param name="controlWeakGovernment">The government types that hinder with control.</param>
            <param name="hqSystemEffect">Any effects in the Power's headquarters.</param>
            <param name="controlSystemEffect">The effects on systems the Power controls.</param>
            <param name="allianceExploitedEffect">The effects on Alliance systems the Power exploits.</param>
            <param name="empireExploitedEffect">The effects on Empire systems the Power exploits.</param>
            <param name="federationExploitedEffect">The effects on Federation systems the Power exploits.</param>
            <param name="independentExploitedEffect">The effects on Independent systems the Power exploits.</param>
            <param name="rating1">Commander benefits at rank 1.</param>
            <param name="rating2">Commander benefits at rank 2.</param>
            <param name="rating3">Commander benefits at rank 3.</param>
            <param name="rating4">Commander benefits at rank 4.</param>
            <param name="rating5">Commander benefits at rank 5.</param>
        </member>
        <member name="M:EDlib.Powerplay.PowerDetails.ToString">
            <summary>Returns a string containing some Power details: short name (allegiance) - headquarters</summary>
            <returns>A <see cref="T:System.String" /> that represents the Power details.</returns>
        </member>
        <member name="T:EDlib.Powerplay.StandingChange">
            <summary>The Power's change in standings since the previous cycle.</summary>
        </member>
        <member name="F:EDlib.Powerplay.StandingChange.up">
            <summary>The Power's standing has improved.</summary>
        </member>
        <member name="F:EDlib.Powerplay.StandingChange.down">
            <summary>The Power's standing has decayed.</summary>
        </member>
        <member name="F:EDlib.Powerplay.StandingChange.none">
            <summary>The Power's standing has not changed.</summary>
        </member>
        <member name="T:EDlib.Powerplay.PowerStanding">
            <summary>Represents the Galactic Standings data for a Power.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerStanding.Id">
            <summary>The unique identifier for the Power.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerStanding.Name">
            <summary>The Power's name.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerStanding.Position">
            <summary>The Power's position in the Galactic Standings.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerStanding.Change">
            <summary>The Power's change in the Galactic Standings since the previous cycle.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerStanding.Turmoil">
            <summary>Indicates whether this Power is turmoil.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerStanding.Allegiance">
            <summary>The Power's allegiance - Alliance, Empire, Federation or Independent.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerStanding.ShortName">
            <summary>The short name for the Power.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerStanding.Cycle">
            <summary>The Powerplay cycle.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerStanding.LastUpdated">
            <summary>The date and time the Power's standing was last updated.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerStanding.ChangeString">
            <summary>The Power's change in the Galactic Standings since the previous cycle as a string.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerStanding.CyclesSinceTurmoil">
            <summary>
              The number of cycles since the Power was last in Turmoil.<br/>
              A value of -1 indicates the number of cycles since Turmoil is unknown.
            </summary>
        </member>
        <member name="M:EDlib.Powerplay.PowerStanding.#ctor">
            <summary>Initializes a new instance of the <see cref="T:EDlib.Powerplay.PowerStanding" /> class with no data.</summary>
        </member>
        <member name="M:EDlib.Powerplay.PowerStanding.#ctor(System.Int32,System.String,System.Int32,EDlib.Powerplay.StandingChange,System.Boolean,System.String,System.String,System.DateTime)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.Powerplay.PowerStanding" /> class with the given data.</summary>
            <param name="id">The Power's unique identifier.</param>
            <param name="name">The Power's name.</param>
            <param name="position">The Power's position in the Galactic Standings.</param>
            <param name="change">The Power's change in the Galactic Standings.</param>
            <param name="turmoil">Whether the Power is in Turmoil.</param>
            <param name="allegiance">The Power's allegiance.</param>
            <param name="shortname">The Power's short name.</param>
            <param name="updated">When the Power's standing was last updated.</param>
        </member>
        <member name="M:EDlib.Powerplay.PowerStanding.#ctor(System.Int32,System.String,System.Int32,EDlib.Powerplay.StandingChange,System.Boolean,System.String,System.String,System.DateTime,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.Powerplay.PowerStanding" /> class with the given data.</summary>
            <param name="id">The Power's unique identifier.</param>
            <param name="name">The Power's name.</param>
            <param name="position">The Power's position in the Galactic Standings.</param>
            <param name="change">The Power's change in the Galactic Standings.</param>
            <param name="turmoil">Whether the Power is in Turmoil.</param>
            <param name="allegiance">The Power's allegiance.</param>
            <param name="shortname">The Power's short name.</param>
            <param name="updated">When the Power's standing was last updated.</param>
            <param name="cyclesSinceTurmoil">The number of cycles since the Power was last in Turmoil.</param>
        </member>
        <member name="M:EDlib.Powerplay.PowerStanding.#ctor(System.Int32,System.String,System.Int32,System.DateTime)">
            <summary>
              <para>Initializes a new instance of the <see cref="T:EDlib.Powerplay.PowerStanding" /> class with the given data.</para>
              <para>Used by the Galactic Standings API back-end.</para>
            </summary>
            <param name="position">The Power's position in the Galactic Standings.</param>
            <param name="standing">The Power's name, standings change and turmoil status.</param>
            <param name="cycle">The Powerplay cycle.</param>
            <param name="updated">When the Power's standing was last updated.</param>
        </member>
        <member name="M:EDlib.Powerplay.PowerStanding.ToString">
            <summary>Returns the Power's standing as a string: position + change - Power name (Power allegiance)</summary>
            <returns>A <see cref="T:System.String" /> that represents the Power's standing.</returns>
        </member>
        <member name="T:EDlib.Powerplay.CycleService">
            <summary>A static class that represents the Powerplay cycle and when it changes (ticks).</summary>
        </member>
        <member name="M:EDlib.Powerplay.CycleService.TimeRemaining">
            <summary>
              <para>The time remaining till the end of the current Powerplay cycle.</para>
              <para>Days and hours until the last 24 hours, then hours and minutes.</para>
            </summary>
        </member>
        <member name="M:EDlib.Powerplay.CycleService.CycleImminent(System.Int32)">
            <summary>Returns <c>true</c> if the end of the current Powerplay cycle is imminent - less than <c>imminentHours</c> hours remaining.</summary>
            <param name="imminentHours">The number of hours during which the end of the cycle is imminent.</param>
        </member>
        <member name="M:EDlib.Powerplay.CycleService.FinalDay">
            <summary><c>true</c> if the current Powerplay cycle ends within 24 hours.</summary>
        </member>
        <member name="M:EDlib.Powerplay.CycleService.TimeTillTick">
            <summary>The time remaining till the end of the current Powerplay cycle.</summary>
        </member>
        <member name="M:EDlib.Powerplay.CycleService.CurrentCycle">
            <summary>The current Powerplay cycle number.</summary>
        </member>
        <member name="T:EDlib.Powerplay.PowerDetailsService">
            <summary>
              <para>Provides data about every Power including statistics, ethos and benefits.</para>
              <para>Also gets every Powerplay player group's communications data from an API provided by Taranis Software.<br/>
                    This data changes rarely so please cache for 1 week minimum.</para>
            </summary>
        </member>
        <member name="M:EDlib.Powerplay.PowerDetailsService.Instance(EDlib.Network.IDownloadService)">
            <summary>Instantiates the PowerDetailsService class.</summary>
            <param name="downloadService">IDownloadService instance used to download data.</param>
            <returns>PowerDetailsService</returns>
        </member>
        <member name="M:EDlib.Powerplay.PowerDetailsService.GetPowerDetails(System.String)">
            <summary>Gets a Power's statistics, ethos and benefits data from an embedded json resource.</summary>
            <param name="shortName">The required Power's short name.</param>
            <returns>PowerDetals</returns>
        </member>
        <member name="M:EDlib.Powerplay.PowerDetailsService.GetPowerCommsAsync(System.String,System.Int32)">
            <summary>Gets the comms data for a Power from an online resource - Subreddit and Discord / Slack servers.</summary>
            <param name="shortName">The required Power's short name.</param>
            <param name="cacheDays">The number of days to cache the Power comms data.</param>
            <returns>Task&lt;PowerComms&gt;</returns>
        </member>
        <member name="T:EDlib.Powerplay.StandingsService">
            <summary>
              <para>Gets the current Powerplay Galactic Standings from an API provided by Taranis Software.</para>
              <para>The standings update weekly on a Thursday between 08:00 - 10:00 UTC, the data is cached till 08:00 UTC Thursday.</para>
            </summary>
        </member>
        <member name="M:EDlib.Powerplay.StandingsService.Instance(EDlib.Network.IDownloadService,EDlib.Platform.ICacheService)">
            <summary>Instantiates the StandingsService class.</summary>
            <param name="downloadService">IDownloadService instance used to download data.</param>
            <param name="cacheService">The platform specific cache for downloaded data.</param>
            <returns>StandingsService</returns>
        </member>
        <member name="M:EDlib.Powerplay.StandingsService.GetData(System.Threading.CancellationTokenSource,System.Boolean)">
            <summary>Gets the current Powerplay Galactic Standings.</summary>
            <param name="cancelToken">A cancellation token.</param>
            <param name="ignoreCache">Ignore any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;GalacticStandings&gt;</returns>
        </member>
    </members>
</doc>
