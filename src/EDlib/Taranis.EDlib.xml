<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Taranis.EDlib</name>
    </assembly>
    <members>
        <member name="T:EDlib.BGS.BgsTick">
            <summary>Data for the BGS Tick.</summary>
        </member>
        <member name="P:EDlib.BGS.BgsTick.Time">
            <summary>Returns the date and time of the BGS tick.</summary>
            <value>Date and time of the BGS Tick.</value>
        </member>
        <member name="P:EDlib.BGS.BgsTick.TimeString">
            <summary>Returns the date and time of the BGS tick as a string.</summary>
            <value>Date and time of the BGS Tick.</value>
        </member>
        <member name="M:EDlib.BGS.BgsTick.#ctor">
            <summary>Initializes a new instance of the <see cref="T:EDlib.BGS.BgsTick" /> class, with the value Unknown for the time string.</summary>
        </member>
        <member name="M:EDlib.BGS.BgsTick.#ctor(System.DateTime)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.BGS.BgsTick" /> class with the specified date and time.</summary>
            <param name="time">Date and time of the BGS Tick.</param>
        </member>
        <member name="T:EDlib.BGS.BgsTickService">
            <summary>Gets the date and time that the Background Simulation (BGS) updates, known as the BGS tick.</summary>
        </member>
        <member name="M:EDlib.BGS.BgsTickService.Instance(EDlib.Network.IDownloadService)">
            <summary>Instantiates the BgsTickService class.</summary>
            <param name="downloadService">IDownloadService instance used to download data.</param>
            <returns>BgsTickService</returns>
        </member>
        <member name="M:EDlib.BGS.BgsTickService.GetData(System.Boolean)">
            <summary>Gets the latest BGS tick.</summary>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>BgsTick</returns>
        </member>
        <member name="M:EDlib.BGS.BgsTickService.GetData(System.Int32,System.Boolean)">
            <summary>Gets multiple recent BGS ticks.</summary>
            <param name="days">The required number of days worth of ticks.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;BgsTick&gt;, DateTime)&gt;</returns>
        </member>
        <member name="T:EDlib.Common.Topic">
            <summary>Topic for GalNet News articles and Community Goals.</summary>
        </member>
        <member name="P:EDlib.Common.Topic.Name">
            <summary>The topic name.</summary>
            <value>The topic name.</value>
        </member>
        <member name="P:EDlib.Common.Topic.Terms">
            <summary>The words used to determine if the topic is relevant to the content.</summary>
            <value>The list of words.</value>
        </member>
        <member name="P:EDlib.Common.Topic.Count">
            <summary>The number of times the terms were found in the content.</summary>
            <value>The number of times the terms were found.</value>
        </member>
        <member name="M:EDlib.Common.Topic.#ctor(System.String,System.Collections.Generic.List{System.String})">
            <summary>Initializes a new instance of the <see cref="T:EDlib.Common.Topic" /> class.</summary>
            <param name="name">The topic name.</param>
            <param name="terms">The words used to determine if the topic is relevant to the content.</param>
        </member>
        <member name="T:EDlib.Common.TopicsList">
            <summary>The list of topics for GalNet News articles and Community Goals.</summary>
        </member>
        <member name="P:EDlib.Common.TopicsList.Topics">
            <summary>The list of topics.</summary>
            <value>The list of topics.</value>
        </member>
        <member name="M:EDlib.Common.TopicsList.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.Common.TopicsList" /> class and loads the topics from a json resource file.</summary>
            <param name="filename">The filename of the json resource file.</param>
        </member>
        <member name="T:EDlib.EDSM.ControllingFaction">
            <summary>Represents the BGS faction that controls a system or station returned by EDSM API methods.</summary>
        </member>
        <member name="P:EDlib.EDSM.ControllingFaction.Id">
            <summary>
              <para>The ID of the faction.</para>
              <para>Engineer factions do not have an Id so this property is nullable.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.ControllingFaction.Name">
            <summary>The name of the faction.</summary>
        </member>
        <member name="P:EDlib.EDSM.ControllingFaction.Allegiance">
            <summary>The superpower allegiance of the faction when returned by the EDSM method.</summary>
        </member>
        <member name="P:EDlib.EDSM.ControllingFaction.Government">
            <summary>The government type of the faction when returned by the EDSM method.</summary>
        </member>
        <member name="T:EDlib.EDSM.EliteStatus">
            <summary>Elite: Dangerous server status.</summary>
        </member>
        <member name="P:EDlib.EDSM.EliteStatus.Status">
            <summary>The status code returned by the Elite: Dangerous server.</summary>
        </member>
        <member name="P:EDlib.EDSM.EliteStatus.Type">
            <summary>A Bootstrap style status string - success / warning / danger.</summary>
        </member>
        <member name="P:EDlib.EDSM.EliteStatus.Message">
            <summary>The message returned by the Elite: Dangerous server.</summary>
        </member>
        <member name="P:EDlib.EDSM.EliteStatus.LastUpdated">
            <summary>When EDSM last checked the status from the Elite: Dangerous server.</summary>
        </member>
        <member name="M:EDlib.EDSM.EliteStatus.#ctor">
            <summary>Initializes a new instance of the <see cref="T:EDlib.EDSM.EliteStatus" /> class with unknown status.</summary>
        </member>
        <member name="M:EDlib.EDSM.EliteStatus.#ctor(System.Int32,System.String,System.String,System.DateTime)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.EDSM.EliteStatus" /> class.</summary>
            <param name="status">The server status code.</param>
            <param name="type">The status string.</param>
            <param name="message">The server status message.</param>
            <param name="lastupdate">When the server status was last checked.</param>
        </member>
        <member name="M:EDlib.EDSM.EliteStatus.ToString">
            <summary>Returns the server status message and last updated as a string.</summary>
            <returns>A <see cref="T:System.String" /> that represents the server status.</returns>
        </member>
        <member name="T:EDlib.EDSM.Faction">
            <summary>Represents a BGS faction returned by EDSM System API methods.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.Id">
            <summary>The ID of the faction.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.Name">
            <summary>The name of the faction.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.Allegiance">
            <summary>The superpower allegiance of the faction.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.Government">
            <summary>The government type of the faction.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.Influence">
            <summary>The faction's influence level.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.State">
            <summary>The faction's current state.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.ActiveStates">
            <summary>The faction's active states.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.RecoveringStates">
            <summary>The faction's recovering states.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.PendingStates">
            <summary>The faction's pending states.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.Happiness">
            <summary>The faction's current happiness.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.IsPlayer">
            <summary><c>true</c> if the faction is a player faction.</summary>
        </member>
        <member name="P:EDlib.EDSM.Faction.LastUpdate">
            <summary>The date and time when the information was requested.</summary>
        </member>
        <member name="T:EDlib.EDSM.FactionState">
            <summary>Represents a faction's BGS state returned by EDSM System API methods.</summary>
        </member>
        <member name="P:EDlib.EDSM.FactionState.State">
            <summary>The BGS state.</summary>
        </member>
        <member name="P:EDlib.EDSM.FactionState.Trend">
            <summary>The BGS state trend.</summary>
        </member>
        <member name="T:EDlib.EDSM.Market">
            <summary>Represents a station market returned by EDSM System API methods.</summary>
        </member>
        <member name="P:EDlib.EDSM.Market.Id">
            <summary>The EDSM internal ID of the market.</summary>
        </member>
        <member name="P:EDlib.EDSM.Market.Id64">
            <summary>The EDSM internal ID of the market (64 bit).</summary>
        </member>
        <member name="P:EDlib.EDSM.Market.Name">
            <summary>The name of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.Market.MarketId">
            <summary>The market ID (use this ID for EDSM queries).</summary>
        </member>
        <member name="P:EDlib.EDSM.Market.SId">
            <summary>The EDSM internal ID of the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Market.SName">
            <summary>The name of the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Market.Url">
            <summary>The EDSM URL for the market.</summary>
        </member>
        <member name="P:EDlib.EDSM.Market.Commodities">
            <summary>List of <see cref="T:EDlib.EDSM.Commodity" /> available from this market.</summary>
        </member>
        <member name="P:EDlib.EDSM.Market.LastUpdated">
            <summary>The date and time when the information was requested.</summary>
        </member>
        <member name="M:EDlib.EDSM.Market.#ctor(System.Int64,System.Int64,System.String,System.Int64,System.Int64,System.String,System.String,System.Collections.Generic.List{EDlib.EDSM.Commodity})">
            <summary>Initializes a new instance of the <see cref="T:EDlib.EDSM.Market" /> class.</summary>
            <param name="id">The EDSM market ID.</param>
            <param name="id64">The EDSM 64 bit market ID.</param>
            <param name="name">The system name.</param>
            <param name="marketId">The market ID.</param>
            <param name="sId">The station ID.</param>
            <param name="sName">The station name.</param>
            <param name="url">The EDSM URL for the market.</param>
            <param name="commodities">List of <see cref="T:EDlib.EDSM.Commodity" /> available from this market.</param>
        </member>
        <member name="T:EDlib.EDSM.Commodity">
            <summary>Represents a market commodity returned by EDSM System API methods.</summary>
        </member>
        <member name="P:EDlib.EDSM.Commodity.Id">
            <summary>The ID of the commodity.</summary>
        </member>
        <member name="P:EDlib.EDSM.Commodity.Name">
            <summary>The name of the commodity.</summary>
        </member>
        <member name="P:EDlib.EDSM.Commodity.BuyPrice">
            <summary>The price when buying the commodity.</summary>
        </member>
        <member name="P:EDlib.EDSM.Commodity.Stock">
            <summary>The quantity of the commodity available to buy.</summary>
        </member>
        <member name="P:EDlib.EDSM.Commodity.SellPrice">
            <summary>The price when selling the commodity.</summary>
        </member>
        <member name="P:EDlib.EDSM.Commodity.Demand">
            <summary>Demand for the commodity when selling.</summary>
        </member>
        <member name="P:EDlib.EDSM.Commodity.StockBracket">
            <summary>Stock bracket for the commodity.</summary>
        </member>
        <member name="T:EDlib.EDSM.Shipyard">
            <summary>Represents a station shipyard returned by EDSM System API methods.</summary>
        </member>
        <member name="P:EDlib.EDSM.Shipyard.Id">
            <summary>The EDSM internal ID of the shipyard.</summary>
        </member>
        <member name="P:EDlib.EDSM.Shipyard.Id64">
            <summary>The EDSM internal ID of the shipyard (64 bit).</summary>
        </member>
        <member name="P:EDlib.EDSM.Shipyard.Name">
            <summary>The name of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.Shipyard.MarketId">
            <summary>The shipyard ID (use this ID for EDSM queries).</summary>
        </member>
        <member name="P:EDlib.EDSM.Shipyard.SId">
            <summary>The EDSM internal ID of the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Shipyard.SName">
            <summary>The name of the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Shipyard.Url">
            <summary>The EDSM URL for the shipyard.</summary>
        </member>
        <member name="P:EDlib.EDSM.Shipyard.Ships">
            <summary>List of <see cref="T:EDlib.EDSM.Ship" /> available from this shipyard.</summary>
        </member>
        <member name="P:EDlib.EDSM.Shipyard.LastUpdated">
            <summary>The date and time when the information was requested.</summary>
        </member>
        <member name="M:EDlib.EDSM.Shipyard.#ctor(System.Int64,System.Int64,System.String,System.Int64,System.Int64,System.String,System.String,System.Collections.Generic.List{EDlib.EDSM.Ship})">
            <summary>Initializes a new instance of the <see cref="T:EDlib.EDSM.Market" /> class.</summary>
            <param name="id">The EDSM shipyard ID.</param>
            <param name="id64">The EDSM 64 bit shipyard ID.</param>
            <param name="name">The system name.</param>
            <param name="marketId">The shipyard ID.</param>
            <param name="sId">The station ID.</param>
            <param name="sName">The station name.</param>
            <param name="url">The EDSM URL for the shipyard.</param>
            <param name="ships">List of <see cref="T:EDlib.EDSM.Ship" /> available from this shipyard.</param>
        </member>
        <member name="T:EDlib.EDSM.Ship">
            <summary>Represents a ship returned by EDSM System API methods.</summary>
        </member>
        <member name="P:EDlib.EDSM.Ship.Id">
            <summary>The ship ID.</summary>
        </member>
        <member name="P:EDlib.EDSM.Ship.Name">
            <summary>The name of the ship.</summary>
        </member>
        <member name="T:EDlib.EDSM.SolarSystem">
            <summary>Represents a solar system returned by EDSM Systems API methods.</summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.Name">
            <summary>The name of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.Distance">
            <summary>Distance in light years from another system specified in the API request.</summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.Id">
            <summary>The EDSM internal ID of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.Id64">
            <summary>The EDSM internal ID of the system (64 bit).</summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.Coords">
            <summary>Coordinates of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.CoordsLocked">
            <summary>Whether EDSM has locked the coordinates of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.RequiresPermit">
            <summary>Whether the system requires a permit.</summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.PermitName">
            <summary>The name of the system permit if required.</summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.Information">
            <summary>
              <para>A summary of information about the system.</para>
              <para>Includes Allegiance, Government, Faction, Population, Security and Economic information.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.PrimaryStar">
            <summary>
              <para>Information concerning the primary star of the system.</para>
              <para>Includes Type, Name and if the star can be scooped for fuel.</para>
            </summary>
        </member>
        <member name="P:EDlib.EDSM.SolarSystem.LastUpdated">
            <summary>The date and time when the information was requested.</summary>
        </member>
        <member name="M:EDlib.EDSM.SolarSystem.#ctor(System.String,System.Double,System.Int64,System.Int64,EDlib.EDSM.Coords,System.Boolean,System.Boolean,System.String,EDlib.EDSM.SystemInfo,EDlib.EDSM.PrimaryStar)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.EDSM.SolarSystem" /> class.</summary>
            <param name="name">The system name.</param>
            <param name="distance">Distance from a specified system.</param>
            <param name="id">The EDSM system ID.</param>
            <param name="id64">The EDSM 64 bit system ID.</param>
            <param name="coords">The system coords.</param>
            <param name="coordsLocked">if set to <c>true</c> [coords locked].</param>
            <param name="requirePermit">If the system requires a permit.</param>
            <param name="permitName">Name of the system permit.</param>
            <param name="information">The system information.</param>
            <param name="primaryStar">The primary star information.</param>
        </member>
        <member name="T:EDlib.EDSM.Coords">
            <summary>Galactic coordinates for the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.Coords.X">
            <summary>X coordinate.</summary>
        </member>
        <member name="P:EDlib.EDSM.Coords.Y">
            <summary>Y coordinate.</summary>
        </member>
        <member name="P:EDlib.EDSM.Coords.Z">
            <summary>Z coordinate.</summary>
        </member>
        <member name="T:EDlib.EDSM.SystemInfo">
            <summary>A summary of information about a system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemInfo.Allegiance">
            <summary>The current superpower allegiance of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemInfo.Government">
            <summary>The current government type of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemInfo.Faction">
            <summary>The current faction who controls the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemInfo.FactionState">
            <summary>The current active state of the controlling faction.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemInfo.Population">
            <summary>The population of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemInfo.Security">
            <summary>The current security level of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemInfo.Economy">
            <summary>The primary economy type of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemInfo.SecondEconomy">
            <summary>The secondary economy type of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemInfo.Reserve">
            <summary>The mining reserves present in system.</summary>
        </member>
        <member name="T:EDlib.EDSM.PrimaryStar">
            <summary>Details of the primary star in a system.</summary>
        </member>
        <member name="P:EDlib.EDSM.PrimaryStar.Type">
            <summary>The type of the primary star. See the EDSM Celestial Bodies FAQ for more info.</summary>
        </member>
        <member name="P:EDlib.EDSM.PrimaryStar.Name">
            <summary>The name of the primary star.</summary>
        </member>
        <member name="P:EDlib.EDSM.PrimaryStar.IsScoopable">
            <summary>Whether the primary star can be scooped for fuel.</summary>
        </member>
        <member name="T:EDlib.EDSM.Station">
            <summary>Represents a station returned by EDSM System API methods.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.Id">
            <summary>The EDSM internal ID of the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.MarketId">
            <summary>The market ID (use this ID for EDSM queries).</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.Type">
            <summary>The type of station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.Name">
            <summary>The name of station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.DistanceToArrival">
            <summary>Distance from the primary star to the station in light seconds.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.Allegiance">
            <summary>The superpower allegiance of the faction.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.Government">
            <summary>The government type of the faction.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.Economy">
            <summary>The primary economy type of the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.SecondEconomy">
            <summary>The secondary economy type of the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.HaveMarket">
            <summary><c>true</c> if the station has a market.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.HaveShipyard">
            <summary><c>true</c> if the station has a shipyard.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.HaveOutfitting">
            <summary><c>true</c> if the station has an outfitting service.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.OtherServices">
            <summary>Array of other services available in the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.ControllingFaction">
            <summary>The current faction that controls the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.UpdateTime">
            <summary>When the station details were last updated on ESDM.</summary>
        </member>
        <member name="P:EDlib.EDSM.Station.Body">
            <summary>Location of a planetary outpost.</summary>
        </member>
        <member name="T:EDlib.EDSM.UpdateTime">
            <summary>Represents when the station details were last updated on ESDM.</summary>
        </member>
        <member name="P:EDlib.EDSM.UpdateTime.Information">
            <summary>The date and time when the station data was last updated on EDSM.</summary>
        </member>
        <member name="P:EDlib.EDSM.UpdateTime.Market">
            <summary>The date and time when the market data was last updated on EDSM.</summary>
        </member>
        <member name="P:EDlib.EDSM.UpdateTime.Shipyard">
            <summary>The date and time when the shipyard data was last updated on EDSM.</summary>
        </member>
        <member name="P:EDlib.EDSM.UpdateTime.Outfitting">
            <summary>The date and time when the outfitting data was last updated on EDSM.</summary>
        </member>
        <member name="T:EDlib.EDSM.Body">
            <summary>Represents the location of a planetary outpost returned by EDSM System API methods.</summary>
        </member>
        <member name="P:EDlib.EDSM.Body.Id">
            <summary>The ID of the body.</summary>
        </member>
        <member name="P:EDlib.EDSM.Body.Name">
            <summary>The name of the body.</summary>
        </member>
        <member name="P:EDlib.EDSM.Body.Latitude">
            <summary>The latitude of the planetary outpost if known.</summary>
        </member>
        <member name="P:EDlib.EDSM.Body.Longitude">
            <summary>The longitude of the planetary outpost if known.</summary>
        </member>
        <member name="T:EDlib.EDSM.StationOutfitting">
            <summary>Represents an outfitting service returned by EDSM System API methods.</summary>
        </member>
        <member name="P:EDlib.EDSM.StationOutfitting.Id">
            <summary>The EDSM internal ID of the outfitting service.</summary>
        </member>
        <member name="P:EDlib.EDSM.StationOutfitting.Id64">
            <summary>The EDSM internal ID of the outfitting service (64 bit).</summary>
        </member>
        <member name="P:EDlib.EDSM.StationOutfitting.Name">
            <summary>The name of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.StationOutfitting.MarketId">
            <summary>The outfitting service ID (use this ID for EDSM queries).</summary>
        </member>
        <member name="P:EDlib.EDSM.StationOutfitting.SId">
            <summary>The EDSM internal ID of the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.StationOutfitting.SName">
            <summary>The name of the station.</summary>
        </member>
        <member name="P:EDlib.EDSM.StationOutfitting.Url">
            <summary>The EDSM URL for the outfitting service.</summary>
        </member>
        <member name="P:EDlib.EDSM.StationOutfitting.Outfitting">
            <summary>List of <see cref="T:EDlib.EDSM.ShipModule" /> available from this outfitting service.</summary>
        </member>
        <member name="P:EDlib.EDSM.StationOutfitting.LastUpdated">
            <summary>The date and time when the information was requested.</summary>
        </member>
        <member name="M:EDlib.EDSM.StationOutfitting.#ctor(System.Int64,System.Int64,System.String,System.Int64,System.Int64,System.String,System.String,System.Collections.Generic.List{EDlib.EDSM.ShipModule})">
            <summary>Initializes a new instance of the <see cref="T:EDlib.EDSM.StationOutfitting" /> class.</summary>
            <param name="id">The EDSM outfitting service ID.</param>
            <param name="id64">The EDSM 64 bit outfitting service ID.</param>
            <param name="name">The system name.</param>
            <param name="marketId">The outfitting service ID.</param>
            <param name="sId">The station ID.</param>
            <param name="sName">The station name.</param>
            <param name="url">The EDSM URL for the outfitting service.</param>
            <param name="outfitting">List of <see cref="P:EDlib.EDSM.StationOutfitting.Outfitting" /> available from this outfitting service.</param>
        </member>
        <member name="T:EDlib.EDSM.ShipModule">
            <summary>Represents a ship module returned by EDSM System API methods.</summary>
        </member>
        <member name="P:EDlib.EDSM.ShipModule.Id">
            <summary>The module ID.</summary>
        </member>
        <member name="P:EDlib.EDSM.ShipModule.Name">
            <summary>The name of the module.</summary>
        </member>
        <member name="T:EDlib.EDSM.SystemFactions">
            <summary>Lists the factions in a system returned by EDSM System API methods.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemFactions.Id">
            <summary>The EDSM internal ID of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemFactions.Id64">
            <summary>The EDSM internal ID of the system (64 bit).</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemFactions.Name">
            <summary>The name of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemFactions.Url">
            <summary>The EDSM URL for the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemFactions.ControllingFaction">
            <summary>The BGS faction that controls the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemFactions.Factions">
            <summary>Array of <see cref="T:EDlib.EDSM.Faction" /> in the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemFactions.LastUpdated">
            <summary>The date and time when the information was requested.</summary>
        </member>
        <member name="M:EDlib.EDSM.SystemFactions.#ctor(System.Int64,System.Int64,System.String,System.String,EDlib.EDSM.ControllingFaction,System.Collections.Generic.List{EDlib.EDSM.Faction})">
            <summary>Initializes a new instance of the <see cref="T:EDlib.EDSM.SystemFactions" /> class.</summary>
            <param name="id">The EDSM system ID.</param>
            <param name="id64">The EDSM 64 bit system ID.</param>
            <param name="name">The system name.</param>
            <param name="url">The EDSM URL for the system.</param>
            /// <param name="controlFaction">The faction that controls the system.</param>
            <param name="factions">Array of <see cref="T:EDlib.EDSM.Faction" /> in the system.</param>
        </member>
        <member name="T:EDlib.EDSM.SystemsOptions">
            <summary>EDSM Systems API request options.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemsOptions.ShowId">
            <summary>Include the EDSM system ID in the results.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemsOptions.ShowCoordinates">
            <summary>Include the stellar coordinates of the system in the results.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemsOptions.ShowPermit">
            <summary>Include system permit details in the results.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemsOptions.ShowInformation">
            <summary>Include a summary of system information in the results.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemsOptions.ShowPrimaryStar">
            <summary>Include primary star details in the results.</summary>
        </member>
        <member name="M:EDlib.EDSM.SystemsOptions.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.</summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemsOptions.Equals(EDlib.EDSM.SystemsOptions)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemsOptions.GetHashCode">
            <summary>Returns a hash code for this instance.</summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:EDlib.EDSM.SystemStations">
            <summary>Lists the stations in a system returned by EDSM System API methods.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemStations.Id">
            <summary>The EDSM internal ID of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemStations.Id64">
            <summary>The EDSM internal ID of the system. (64 bit)</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemStations.Name">
            <summary>The name of the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemStations.Url">
            <summary>The EDSM URL for the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemStations.Stations">
            <summary>List of <see cref="T:EDlib.EDSM.Station" /> in the system.</summary>
        </member>
        <member name="P:EDlib.EDSM.SystemStations.LastUpdated">
            <summary>The date and time when the information was requested.</summary>
        </member>
        <member name="M:EDlib.EDSM.SystemStations.#ctor(System.Int64,System.Int64,System.String,System.String,System.Collections.Generic.List{EDlib.EDSM.Station})">
            <summary>Initializes a new instance of the <see cref="T:EDlib.EDSM.SystemStations" /> class.</summary>
            <param name="id">The EDSM system ID.</param>
            <param name="id64">The EDSM 64 bit system ID.</param>
            <param name="name">The system name.</param>
            <param name="url">The EDSM URL for the system.</param>
            <param name="stations">Array of <see cref="T:EDlib.EDSM.Station" /> in the system.</param>
        </member>
        <member name="T:EDlib.EDSM.EdsmService">
            <summary>Utility service used by other services to get data from EDSM APIs.</summary>
        </member>
        <member name="M:EDlib.EDSM.EdsmService.Instance(EDlib.Network.IDownloadService)">
            <summary>Instantiates the EdsmService class.</summary>
            <param name="downloadService">IDownloadService instance used to download data.</param>
            <returns>EdsmService</returns>
        </member>
        <member name="M:EDlib.EDSM.EdsmService.GetData(System.String,System.Collections.Generic.Dictionary{System.String,System.String},EDlib.Network.DownloadOptions)">
            <summary>Gets data from an EDSM API.</summary>
            <param name="method">The EDSM API method.</param>
            <param name="parameters">The parameters for the API method.</param>
            <param name="options"></param>
            
            
            <returns>Task&lt;(string, DateTime)&gt;<br /></returns>
        </member>
        <member name="T:EDlib.EDSM.EliteStatusService">
            <summary>Gets Elite: Dangerous server status.</summary>
        </member>
        <member name="M:EDlib.EDSM.EliteStatusService.Instance(EDlib.Network.IDownloadService)">
            <summary>Instantiates the EliteStatusService class.</summary>
            <param name="downloadService">IDownloadService instance used to download data.</param>
            <returns>EliteStatusService</returns>
        </member>
        <member name="M:EDlib.EDSM.EliteStatusService.GetData(System.Int32,System.Boolean)">
            <summary>Gets the status of the Elite: Dangerous server.</summary>
            <param name="cacheMinutes">The number of minutes to cache the data.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;NewsArticle&gt;, DateTime)&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.EliteStatusService.GetData(System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets the status of the Elite: Dangerous server.</summary>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;NewsArticle&gt;, DateTime)&gt;</returns>
        </member>
        <member name="T:EDlib.EDSM.SystemService">
            <summary>Gets data from the EDSM System API.</summary>
        </member>
        <member name="M:EDlib.EDSM.SystemService.Instance(EDlib.Network.IDownloadService)">
            <summary>Instantiates the SystemService class.</summary>
            <param name="downloadService">IDownloadService instance used to download data.</param>
            <returns>SystemService</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetStations(System.String,System.Int32,System.Boolean)">
            <summary>Gets information about stations in a system.</summary>
            <param name="systemName">The system name.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;SystemStations&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetStations(System.String,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about stations in a system.</summary>
            <param name="systemName">The system name.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;SystemStations&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetMarket(System.Int64,System.Int32,System.Boolean)">
            <summary>Gets information about a market in a station.</summary>
            <param name="marketId">The in-game marketId of the market.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;Market&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetMarket(System.Int64,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about a market in a station.</summary>
            <param name="marketId">The in-game marketId of the market.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;Market&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetMarket(System.String,System.String,System.Int32,System.Boolean)">
            <summary>Gets information about a market in a station.</summary>
            <param name="systemName">The name of the system where the market is located.</param>
            <param name="stationName">The name of the station where the market is located.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;Market&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetMarket(System.String,System.String,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about a market in a station.</summary>
            <param name="systemName">The name of the system where the market is located.</param>
            <param name="stationName">The name of the station where the market is located.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;Market&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetShipyard(System.Int64,System.Int32,System.Boolean)">
            <summary>Gets information about a shipyard in a station.</summary>
            <param name="marketId">The in-game marketId of the station where the shipyard is located.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;Shipyard&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetShipyard(System.Int64,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about a shipyard in a station.</summary>
            <param name="marketId">The in-game marketId of the station where the shipyard is located.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;Shipyard&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetShipyard(System.String,System.String,System.Int32,System.Boolean)">
            <summary>Gets information about a shipyard in a station.</summary>
            <param name="systemName">The name of the system where the shipyard is located.</param>
            <param name="stationName">The name of the station where the shipyard is located.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;Shipyard&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetShipyard(System.String,System.String,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about a shipyard in a station.</summary>
            <param name="systemName">The name of the system where the shipyard is located.</param>
            <param name="stationName">The name of the station where the shipyard is located.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;Shipyard&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetOutfitting(System.Int64,System.Int32,System.Boolean)">
            <summary>Gets information about a outfitting in a station.</summary>
            <param name="marketId">The in-game marketId of the station where the outfitting is located.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;StationOutfitting&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetOutfitting(System.Int64,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about a outfitting in a station.</summary>
            <param name="marketId">The in-game marketId of the station where the outfitting is located.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;StationOutfitting&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetOutfitting(System.String,System.String,System.Int32,System.Boolean)">
            <summary>Gets information about a outfitting in a station.</summary>
            <param name="systemName">The name of the system where the outfitting is located.</param>
            <param name="stationName">The name of the station where the outfitting is located.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;StationOutfitting&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetOutfitting(System.String,System.String,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about a outfitting in a station.</summary>
            <param name="systemName">The name of the system where the outfitting is located.</param>
            <param name="stationName">The name of the station where the outfitting is located.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;StationOutfitting&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetFactions(System.String,System.Int32,System.Boolean)">
            <summary>Gets information about factions in a system.</summary>
            <param name="systemName">The system name.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;SystemFactions&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemService.GetFactions(System.String,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about factions in a system.</summary>
            <param name="systemName">The system name.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;SystemFactions&gt;</returns>
        </member>
        <member name="T:EDlib.EDSM.SystemsService">
            <summary>Gets data from the EDSM Systems API.</summary>
        </member>
        <member name="M:EDlib.EDSM.SystemsService.Instance(EDlib.Network.IDownloadService)">
            <summary>Instantiates the SystemsService class.</summary>
            <param name="downloadService">IDownloadService instance used to download data.</param>
            <returns>SystemsService</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemsService.GetSystem(System.String,EDlib.EDSM.SystemsOptions,System.Int32,System.Boolean)">
            <summary>Gets information about a solar system.</summary>
            <param name="systemName">The system name.</param>
            <param name="options">The Systems API request options.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;SolarSystem&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemsService.GetSystem(System.String,EDlib.EDSM.SystemsOptions,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about a solar system.</summary>
            <param name="systemName">The system name.</param>
            <param name="options">The Systems API request options.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;SolarSystem&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemsService.GetSystems(System.String[],EDlib.EDSM.SystemsOptions,System.Int32,System.Boolean)">
            <summary>Gets information about an array of solar systems.</summary>
            <param name="systemNames">An array of system names.</param>
            <param name="options">The Systems API request options.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;SolarSystem&gt;, DateTime)&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemsService.GetSystems(System.String[],EDlib.EDSM.SystemsOptions,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about an array of solar systems.</summary>
            <param name="systemNames">An array of system names.</param>
            <param name="options">The Systems API request options.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;SolarSystem&gt;, DateTime)&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemsService.GetSystemsInCube(System.String,System.Int32,EDlib.EDSM.SystemsOptions,System.Int32,System.Boolean)">
            <summary>Gets information about systems within a cube.</summary>
            <param name="systemName">The name of the system at the centre of the cube.</param>
            <param name="size">The size of the cube in light years; max 200 ly.</param>
            <param name="options">The Systems API request options.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;SolarSystem&gt;, DateTime)&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemsService.GetSystemsInCube(System.String,System.Int32,EDlib.EDSM.SystemsOptions,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about systems within a cube.</summary>
            <param name="systemName">The name of the system at the centre of the cube.</param>
            <param name="size">The size of the cube in light years; max 200 ly.</param>
            <param name="options">The Systems API request options.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;SolarSystem&gt;, DateTime)&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemsService.GetSystemsInSphere(System.String,System.Int32,System.Int32,EDlib.EDSM.SystemsOptions,System.Int32,System.Boolean)">
            <summary>Gets information about systems within a sphere.</summary>
            <param name="systemName">The name of the system at the centre of the sphere.</param>
            <param name="radius">The radius of the sphere in light years; max 100 ly.</param>
            <param name="minRadius">Set to a value between 0 and <c>radius</c> to reduce the returned results, in light years.</param>
            <param name="options">The Systems API request options.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;SolarSystem&gt;, DateTime)&gt;</returns>
        </member>
        <member name="M:EDlib.EDSM.SystemsService.GetSystemsInSphere(System.String,System.Int32,System.Int32,EDlib.EDSM.SystemsOptions,System.Threading.CancellationTokenSource,System.Int32,System.Boolean)">
            <summary>Gets information about systems within a sphere.</summary>
            <param name="systemName">The name of the system at the centre of the sphere.</param>
            <param name="radius">The radius of the sphere in light years; max 100 ly.</param>
            <param name="minRadius">Set to a value between 0 and <c>radius</c> to reduce the returned results, in light years.</param>
            <param name="options">The Systems API request options.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="cacheMinutes">The number of minutes to cache the data, minimum 5 minutes.</param>
            <param name="ignoreCache">Ignores any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;SolarSystem&gt;, DateTime)&gt;</returns>
        </member>
        <member name="T:EDlib.APIException">
            <summary>Represents errors from an API.</summary>
        </member>
        <member name="P:EDlib.APIException.StatusCode">
            <summary>Gets the error code from the API.</summary>
            <value>The error code.</value>
        </member>
        <member name="M:EDlib.APIException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:EDlib.APIException" /> class.</summary>
        </member>
        <member name="M:EDlib.APIException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.APIException" /> class with a specified error message.</summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:EDlib.APIException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.APIException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:EDlib.APIException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.APIException" /> class with serialised data.</summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo">SerializationInfo</see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext">StreamingContext</see> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:EDlib.APIException.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>Initializes a new instance of the <see cref="T:EDlib.APIException" /> class with a specified error message and error code.</summary>
            <param name="message">The message that describes the error.</param>
            <param name="code">The error code from the API.</param>
        </member>
        <member name="M:EDlib.APIException.#ctor(System.String,System.Exception,System.Nullable{System.Int32})">
            <summary>Initializes a new instance of the <see cref="T:EDlib.APIException" /> class with a specified error message, error code and a reference to the inner exception that is the cause of this exception.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
            <param name="code">The error code from the API.</param>
        </member>
        <member name="T:EDlib.NoNetworkNoCacheException">
            <summary>Represents errors that occur because no network is available and no data is cached.</summary>
        </member>
        <member name="M:EDlib.NoNetworkNoCacheException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:EDlib.NoNetworkNoCacheException" /> class.</summary>
        </member>
        <member name="M:EDlib.NoNetworkNoCacheException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.NoNetworkNoCacheException" /> class with a specified error message.</summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:EDlib.NoNetworkNoCacheException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.NoNetworkNoCacheException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:EDlib.NoNetworkNoCacheException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.NoNetworkNoCacheException" /> class with serialised data.</summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo">SerializationInfo</see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext">StreamingContext</see> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:EDlib.GalNet.NewsArticle">
            <summary>A GalNet News article.</summary>
        </member>
        <member name="P:EDlib.GalNet.NewsArticle.Title">
            <summary>The title of the News article.</summary>
            <value>The article title.</value>
        </member>
        <member name="P:EDlib.GalNet.NewsArticle.Body">
            <summary>The content of the News article.</summary>
            <value>The article content.</value>
        </member>
        <member name="P:EDlib.GalNet.NewsArticle.PublishDateTime">
            <summary>The publish date and time of the News article.</summary>
            <value>When the article was published.</value>
        </member>
        <member name="P:EDlib.GalNet.NewsArticle.Id">
            <summary>Frontier Development's Id for the News article.</summary>
            <value>Article ID.</value>
        </member>
        <member name="P:EDlib.GalNet.NewsArticle.FDImageName">
            <summary>
              <para>
             A key used by Frontier Development's to specify the image displayed with a News article.
             Note: This is not an image url or filename.
              </para>
            </summary>
            <value>Article image name.</value>
        </member>
        <member name="P:EDlib.GalNet.NewsArticle.Slug">
            <summary>A normalised version of the article title used as a unique identifier.</summary>
            <value>The article slug.</value>
        </member>
        <member name="P:EDlib.GalNet.NewsArticle.Topic">
            <summary>The topic of the News article, generated using a Bag of Words technique.</summary>
            <value>The article topic.</value>
        </member>
        <member name="P:EDlib.GalNet.NewsArticle.Tags">
            <summary>Content tags for the News article, generated using a Bag of Words technique.</summary>
            <value>Content tags for the article.</value>
        </member>
        <member name="P:EDlib.GalNet.NewsArticle.PublishDate">
            <summary>The publish date and time of the News article as a string.</summary>
            <value>When the article was published.</value>
        </member>
        <member name="M:EDlib.GalNet.NewsArticle.ClassifyArticle">
            <summary>Determines the Topic and content Tags for an article by analysing it using a Bag of Words technique.</summary>
        </member>
        <member name="M:EDlib.GalNet.NewsArticle.ToString">
            <summary>Returns the Title and Body of an article as a string.</summary>
        </member>
        <member name="T:EDlib.GalNet.NewsArticleConverter">
            <summary>For internal use only. JsonConverter for GalNet News articles.</summary>
        </member>
        <member name="T:EDlib.GalNet.GalNetService">
            <summary>Gets the GalNet News.</summary>
        </member>
        <member name="M:EDlib.GalNet.GalNetService.Instance(EDlib.Network.IDownloadService)">
            <summary>Instantiates the GalNetService class.</summary>
            <param name="downloadService">IDownloadService instance used to download data.</param>
            <returns>GalNetService</returns>
        </member>
        <member name="M:EDlib.GalNet.GalNetService.GetData(System.Int32,System.Threading.CancellationTokenSource,System.Boolean)">
            <summary>Gets the 20 most recent GalNet News articles.</summary>
            <param name="expiryHours">The number of hours to cache the data.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="ignoreCache">Ignore any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;NewsArticle&gt;, DateTime)&gt;</returns>
        </member>
        <member name="M:EDlib.GalNet.GalNetService.GetData(System.Int32,System.Int32,System.Threading.CancellationTokenSource,System.Boolean)">
            <summary>Gets the most recent GalNet News articles.</summary>
            <param name="articleCount">The number of articles to return.</param>
            <param name="expiryHours">The number of hours to cache the data.</param>
            <param name="cancelToken">A cancellation token.</param>
            <param name="ignoreCache">Ignore any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;(List&lt;NewsArticle&gt;, DateTime)&gt;</returns>
        </member>
        <member name="T:EDlib.Network.HttpHelper">
            <summary>A helper class for reading an http response that can decompress data in gzip or deflate streams.</summary>
        </member>
        <member name="M:EDlib.Network.HttpHelper.ReadContentAsync(System.Net.Http.HttpResponseMessage)">
            <summary>Gets the content of an http response which may be compressed.</summary>
            <param name="response">The http response.</param>
            <returns>The content of the http response.</returns>
        </member>
        <member name="T:EDlib.Network.Sha256Helper">
            <summary>Helper class for generating an SHA256 hash.</summary>
        </member>
        <member name="M:EDlib.Network.Sha256Helper.GenerateHash(System.String)">
            <summary>Generates the SHA256 hash of a string.</summary>
            <param name="input">The string that will be hashed.</param>
            <returns>string</returns>
        </member>
        <member name="T:EDlib.Network.CachedDownloadService">
            <summary>Class used to download and cache data.</summary>
        </member>
        <member name="M:EDlib.Network.CachedDownloadService.Instance(System.String,EDlib.Platform.ICacheService,EDlib.Platform.IConnectivityService)">
            <summary>Instantiates the CachedDownloadService class.</summary>
            <param name="userAgent">The user agent used for downloads.</param>
            <param name="cacheService">The platform specific cache for downloaded data.</param>
            <param name="connectivityService">The platform specific connectivity service.</param>
            <returns>DownloadService</returns>
        </member>
        <member name="M:EDlib.Network.CachedDownloadService.GetData(System.String,EDlib.Network.DownloadOptions)">
            <summary>
            Gets and caches the data and when it was last updated with the option to cancel a download.
            If a copy of the data exists in the cache and has not expired it will be returned, otherwise the data will be downloaded.
            </summary>
            <param name="url">The URL for downloading the data.</param>
            <param name="options">Options structure for download.</param>
            <returns>Task&lt;(string data, DateTime updated)&gt;</returns>
            <exception cref="T:EDlib.NoNetworkNoCacheException">No Internet available and no data cached.</exception>
            <exception cref="T:EDlib.APIException">Http errors from the API called.</exception>
        </member>
        <member name="M:EDlib.Network.CachedDownloadService.GetData(System.String,System.String,System.String,EDlib.Network.DownloadOptions)">
            <summary>
            Gets and caches the data and when it was last updated with the option to cancel a download.
            If a copy of the data exists in the cache and has not expired it will be returned, otherwise the data will be downloaded.
            </summary>
            <param name="url">The URL for downloading the data.</param>
            <param name="dataKey">The key for cached data.</param>
            <param name="updatedKey">The key for caching when the data was the last updated.</param>
            <param name="options">Options structure for download.</param>
            <returns>Task&lt;(string data, DateTime updated)&gt;</returns>
            <exception cref="T:EDlib.NoNetworkNoCacheException">No Internet available and no data cached.</exception>
            <exception cref="T:EDlib.APIException">Http errors from the API called.</exception>
        </member>
        <member name="T:EDlib.Network.DownloadOptions">
            <summary>Options structure for download services.</summary>
        </member>
        <member name="P:EDlib.Network.DownloadOptions.CancelToken">
            <summary>A cancellation token for the download method.</summary>
        </member>
        <member name="P:EDlib.Network.DownloadOptions.Expiry">
            <summary>How long to cache the data.</summary>
        </member>
        <member name="P:EDlib.Network.DownloadOptions.IgnoreCache">
            <summary>Download method will ignore any cached data if set to <c>true</c>.</summary>
        </member>
        <member name="M:EDlib.Network.DownloadOptions.#ctor(System.Threading.CancellationTokenSource)">
            <summary>DownloadOptions constructor.</summary>
            <param name="cancelToken">A cancellation token for the download method. (optional)</param>
        </member>
        <member name="M:EDlib.Network.DownloadOptions.#ctor(System.TimeSpan)">
            <summary>DownloadOptions constructor.</summary>
            <param name="expiry">How long to cache the data.</param>
        </member>
        <member name="M:EDlib.Network.DownloadOptions.#ctor(System.Threading.CancellationTokenSource,System.TimeSpan)">
            <summary>DownloadOptions constructor.</summary>
            <param name="cancelToken">A cancellation token.</param>
            <param name="expiry">How long to cache the data.</param>
        </member>
        <member name="M:EDlib.Network.DownloadOptions.#ctor(System.TimeSpan,System.Boolean)">
            <summary>DownloadOptions constructor.</summary>
            <param name="expiry">How long to cache the data.</param>
            <param name="ignoreCache">Ignore any cached data if set to <c>true</c>.</param>
        </member>
        <member name="M:EDlib.Network.DownloadOptions.#ctor(System.Threading.CancellationTokenSource,System.TimeSpan,System.Boolean)">
            <summary>DownloadOptions constructor.</summary>
            <param name="cancelToken">A cancellation token.</param>
            <param name="expiry">How long to cache the data.</param>
            <param name="ignoreCache">Ignore any cached data if set to <c>true</c>.</param>
        </member>
        <member name="T:EDlib.Network.DownloadService">
            <summary>Class used to download without caching.</summary>
        </member>
        <member name="M:EDlib.Network.DownloadService.Instance(System.String,EDlib.Platform.IConnectivityService)">
            <summary>Instantiates the DownloadService class.</summary>
            <param name="userAgent">The user agent used for downloads.</param>
            <param name="connectivityService">The platform specific connectivity service.</param>
            <returns>DownloadService</returns>
        </member>
        <member name="M:EDlib.Network.DownloadService.GetData(System.String,EDlib.Network.DownloadOptions)">
            <summary>Gets the data.</summary>
            <param name="url">The URL for downloading the data.</param>
            <param name="options">Options structure for download.</param>
            <returns>Task&lt;(string data, DateTime updated)&gt;</returns>
            <exception cref="T:EDlib.NoNetworkNoCacheException">No Internet available and no data cached.</exception>
            <exception cref="T:EDlib.APIException">Http errors from the API called.</exception>
        </member>
        <member name="T:EDlib.Network.IDownloadService">
            <summary>Interface for services used to download data.</summary>
        </member>
        <member name="M:EDlib.Network.IDownloadService.GetData(System.String,EDlib.Network.DownloadOptions)">
            <summary>Gets the data.</summary>
            <param name="url">The URL for downloading the data.</param>
            <param name="options">Options structure for download.</param>
            <returns>Task&lt;(string data, DateTime updated)&gt;</returns>
        </member>
        <member name="T:EDlib.Platform.CacheState">
            <summary>Current state of the item in the cache.</summary>
        </member>
        <member name="F:EDlib.Platform.CacheState.None">
            <summary>An unknown state for the cache item.</summary>
        </member>
        <member name="F:EDlib.Platform.CacheState.Expired">
            <summary>Expired cache item.</summary>
        </member>
        <member name="F:EDlib.Platform.CacheState.Active">
            <summary>Active non-expired cache item.</summary>
        </member>
        <member name="T:EDlib.Platform.ICacheService">
            <summary>Interface for a platform specific data caching service.</summary>
        </member>
        <member name="M:EDlib.Platform.ICacheService.Add(System.String,System.String,System.TimeSpan)">
            <summary>Add an item to the cache.</summary>
            <param name="key">Key to identify the cached item.</param>
            <param name="data">String data to store in the cache.</param>
            <param name="expireIn">How long in the future the item should expire.</param>
        </member>
        <member name="M:EDlib.Platform.ICacheService.Delete(System.String[])">
            <summary>Delete the specified items from the cache.</summary>
            <param name="key">A <c>params</c> list of keys identifying the items to delete.</param>
        </member>
        <member name="M:EDlib.Platform.ICacheService.EmptyAll">
            <summary>Empty all items from the cache.</summary>
        </member>
        <member name="M:EDlib.Platform.ICacheService.EmptyExpired">
            <summary>Empty expired items from the cache.</summary>
        </member>
        <member name="M:EDlib.Platform.ICacheService.Exists(System.String)">
            <summary>Checks to see if an item exists in the cache.</summary>
            <param name="key">Key to identify the cached item.</param>
            <returns><c>true</c> if the item exists, else <c>false</c>.</returns>
        </member>
        <member name="M:EDlib.Platform.ICacheService.Get(System.String)">
            <summary>Gets a cached item.</summary>
            <param name="key">Key to identify the cached item.</param>
            <returns>The cached data string if it exists, else <c>null</c>.</returns>
        </member>
        <member name="M:EDlib.Platform.ICacheService.GetExpiration(System.String)">
            <summary>Gets the expiration date and time for a cached item.</summary>
            <param name="key">Key to identify the cached item.</param>
            <returns>The date if the cached item exists, else <c>null</c>.</returns>
        </member>
        <member name="M:EDlib.Platform.ICacheService.GetKeys(EDlib.Platform.CacheState)">
            <summary>Gets keys for any cached items with the specified state.</summary>
            <param name="state">State to get: Multiple with flags: CacheState.Active | CacheState.Expired</param>
            <returns>The relevant keys.</returns>
        </member>
        <member name="M:EDlib.Platform.ICacheService.IsExpired(System.String)">
            <summary>Checks if a cached item is expired.</summary>
            <param name="key">Key to identify the cached item.</param>
            <returns><c>true</c> if expired, else <c>false</c>.</returns>
        </member>
        <member name="T:EDlib.Platform.IConnectivityService">
            <summary>Interface for a platform specific data connectivity service.</summary>
        </member>
        <member name="M:EDlib.Platform.IConnectivityService.IsConnected">
            <summary>Determines whether a network is available.</summary>
            <returns><c>true</c> if a network connection is detected, else <c>false</c>.</returns>
        </member>
        <member name="M:EDlib.Platform.IConnectivityService.IsMetered">
            <summary>Determines whether the network connection is metered.</summary>
            <returns><c>true</c> if the connection is metered, else <c>false</c>.</returns>
        </member>
        <member name="T:EDlib.Platform.PreserveAttribute">
            <summary>
              <para>Linker control attribute.</para>
              <para>To preserve the whole type, use the syntax <c>[Preserve (AllMembers = true)]</c> on the type.
            To preserve a member if the containing type was preserved, use <c>[Preserve (Conditional=true)]</c> on the member.</para>
              <para>See: https://docs.microsoft.com/en-gb/xamarin/ios/deploy-test/linker </para>
            </summary>
        </member>
        <member name="F:EDlib.Platform.PreserveAttribute.AllMembers">
            <summary>Set <c>true</c> to preserve the whole type.</summary>
        </member>
        <member name="F:EDlib.Platform.PreserveAttribute.Conditional">
            <summary>Set <c>true</c> to preserve an individual type member.</summary>
        </member>
        <member name="M:EDlib.Platform.PreserveAttribute.#ctor(System.Boolean,System.Boolean)">
            <summary>Preserve attribute constructor.</summary>
            <param name="allMembers">Set <c>true</c> when preserving the whole type.</param>
            <param name="conditional">Set <c>true</c> when preserving an individual type member.</param>
        </member>
        <member name="M:EDlib.Platform.PreserveAttribute.#ctor">
            <summary>Preserve attribute default constructor.</summary>
        </member>
        <member name="T:EDlib.Powerplay.GalacticStandings">
            <summary>Represents the Powerplay Galactic Standings.</summary>
        </member>
        <member name="P:EDlib.Powerplay.GalacticStandings.Cycle">
            <summary>Gets the Powerplay cycle number.</summary>
            <value>The Powerplay cycle.</value>
        </member>
        <member name="P:EDlib.Powerplay.GalacticStandings.LastUpdated">
            <summary>Gets the date and time the Galactic Standings were last updated.</summary>
            <value>When the Standings were last updated.</value>
        </member>
        <member name="P:EDlib.Powerplay.GalacticStandings.Standings">
            <summary>Gets the Galactic Standings.</summary>
            <value>A list of PowerStanding objects.</value>
        </member>
        <member name="M:EDlib.Powerplay.GalacticStandings.#ctor(System.Int32,System.DateTime)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.Powerplay.GalacticStandings" /> class.</summary>
            <param name="cycle">The Powerplay cycle.</param>
            <param name="lastUpdated">When the Standings were last updated.</param>
        </member>
        <member name="M:EDlib.Powerplay.GalacticStandings.ToString">
            <summary>Returns the Powerplay Galactic Standings as a multi-line string including the cycle and when the Standings were last updated.</summary>
            <returns>A <see cref="T:System.String" /> that represents the Galactic Standings.</returns>
        </member>
        <member name="M:EDlib.Powerplay.GalacticStandings.ToCSV">
            <summary>Returns the Powerplay Galactic Standings as a comma separated string including the cycle and when the Standings were last updated.</summary>
            <returns>A <see cref="T:System.String" /> in CSV format that represents the Galactic Standings.</returns>
        </member>
        <member name="M:EDlib.Powerplay.GalacticStandings.ToJson">
            <summary>Returns the Powerplay Galactic Standings as a JSON string including the cycle and when the Standings were last updated.</summary>
            <returns>A <see cref="T:System.String" /> in JSON format that represents the Galactic Standings.</returns>
        </member>
        <member name="T:EDlib.Powerplay.PowerComms">
            <summary>Contains the comms data for a Power - Reddit Sub and Discord / Slack servers.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerComms.Id">
            <summary>Gets or sets a unique identifier for the Power.</summary>
            <value>The unique identifier for the Power.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerComms.ShortName">
            <summary>Gets or sets a short name for the Power.</summary>
            <value>The Power's short name.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerComms.Reddit">
            <summary>Gets or sets the URL for the Power's subreddit.</summary>
            <value>The Power's subreddit URL.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerComms.Comms">
            <summary>Gets or sets the join link for the Power's Discord or Slack server.</summary>
            <value>The Power's Discord or Slack server join link.</value>
        </member>
        <member name="M:EDlib.Powerplay.PowerComms.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.Powerplay.PowerComms" /> class.</summary>
            <param name="id">The unique identifier for the Power.</param>
            <param name="shortName">The Power's short name.</param>
            <param name="reddit">The Power's subreddit.</param>
            <param name="comms">The Power's Discord or Slack server.</param>
        </member>
        <member name="M:EDlib.Powerplay.PowerComms.ToString">
            <summary>Returns the Power's comms details as a string.</summary>
            <returns>A <see cref="T:System.String" /> that represents the Power's comms details.</returns>
        </member>
        <member name="T:EDlib.Powerplay.PowerDetails">
            <summary>Contains a Power's statistics, ethos and benefits data.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.Id">
            <summary>Gets or sets a unique identifier for the Power.</summary>
            <value>The unique identifier for the Power.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.ShortName">
            <summary>Gets or sets a short name for the Power.</summary>
            <value>The Power's short name.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.HQ">
            <summary>Gets the name of the Power's headquarters system.</summary>
            <value>The name of the Power's headquarters.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.YearOfBirth">
            <summary>Gets the year the Power was born.</summary>
            <value>The year the Power was born..</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.Allegiance">
            <summary>Gets the Power's allegiance.</summary>
            <value>The Power's allegiance.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.PreparationEthos">
            <summary>Gets the Power's preparation ethos.</summary>
            <value>The Power's preparation ethos.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.PreparationText">
            <summary>Gets the description of the Power's preparation ethos.</summary>
            <value>The description of the preparation ethos.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.ExpansionEthos">
            <summary>Gets the Power's expansion ethos.</summary>
            <value>The Power's expansion ethos.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.ExpansionText">
            <summary>Gets the description of the Power's expansion ethos.</summary>
            <value>The description of the expansion ethos.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.ExpansionStrongGovernment">
            <summary>Gets the government types that help the Power's expansion.</summary>
            <value>The government types that help expansion.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.ExpansionWeakGovernment">
            <summary>Gets the government types that hinder the Power's expansion.</summary>
            <value>The government types that hinder expansion.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.ControlEthos">
            <summary>Gets the Power's control ethos.</summary>
            <value>The Power's control ethos.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.ControlText">
            <summary>Gets the description of the Power's control ethos.</summary>
            <value>The description of the control ethos.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.ControlStrongGovernment">
            <summary>Gets the government types that help the Power control their domain.</summary>
            <value>The government types that help with control.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.ControlWeakGovernment">
            <summary>Gets the government types that hinder the Power control their domain.</summary>
            <value>The government types that hinder with control.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.HQSystemEffect">
            <summary>Gets a description of any effects in the Power's headquarters system.</summary>
            <value>A description of any effects in the Power's headquarters.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.ControlSystemEffect">
            <summary>Gets a description of the effects a Power has on systems they control.</summary>
            <value>A description of the effects on systems the Power controls.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.AllianceExploitedEffect">
            <summary>Gets a description of the effects a Power has on Alliance systems they exploit.</summary>
            <value>A description of the effects on Alliance systems the Power exploits.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.EmpireExploitedEffect">
            <summary>Gets a description of the effects a Power has on Empire systems they exploit.</summary>
            <value>A description of the effects on Empire systems the Power exploits.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.FederationExploitedEffect">
            <summary>Gets a description of the effects a Power has on Federation systems they exploit.</summary>
            <value>A description of the effects on Federation systems the Power exploits.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.IndependentExploitedEffect">
            <summary>Gets a description of the effects a Power has on Independent systems they exploit.</summary>
            <value>A description of the effects on Independent systems the Power exploits.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.Rating1">
            <summary>Gets a description of the benefits to a Commander at rank 1.</summary>
            <value>A description of the rank 1 benefits.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.Rating2">
            <summary>Gets a description of the benefits to a Commander at rank 2.</summary>
            <value>A description of the rank 2 benefits.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.Rating3">
            <summary>Gets a description of the benefits to a Commander at rank 3.</summary>
            <value>A description of the rank 3 benefits.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.Rating4">
            <summary>Gets a description of the benefits to a Commander at rank 4.</summary>
            <value>A description of the rank 4 benefits.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerDetails.Rating5">
            <summary>Gets a description of the benefits to a Commander at rank 5.</summary>
            <value>A description of the rank 5 benefits.</value>
        </member>
        <member name="M:EDlib.Powerplay.PowerDetails.#ctor(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.Powerplay.PowerDetails" /> class.</summary>
            <param name="id">The unique identifier for the Power.</param>
            <param name="shortName">The Power's short name.</param>
            <param name="hq">The Power's headquarters.</param>
            <param name="yearOfBirth">The Power's year of birth.</param>
            <param name="allegiance">The Power's allegiance.</param>
            <param name="preparationEthos">The Power's preparation ethos.</param>
            <param name="preparationText">The description of the preparation ethos.</param>
            <param name="expansionEthos">The Power's expansion ethos.</param>
            <param name="expansionText">The description of the expansion ethos.</param>
            <param name="expansionStrongGovernment">The government types that help expansion.</param>
            <param name="expansionWeakGovernment">The government types that hinder expansion.</param>
            <param name="controlEthos">The Power's control ethos.</param>
            <param name="controlText">The description of the control ethos.</param>
            <param name="controlStrongGovernment">The government types that help with control.</param>
            <param name="controlWeakGovernment">The government types that hinder with control.</param>
            <param name="hqSystemEffect">Any effects in the Power's headquarters.</param>
            <param name="controlSystemEffect">The effects on systems the Power controls.</param>
            <param name="allianceExploitedEffect">The effects on Alliance systems the Power exploits.</param>
            <param name="empireExploitedEffect">The effects on Empire systems the Power exploits.</param>
            <param name="federationExploitedEffect">The effects on Federation systems the Power exploits.</param>
            <param name="independentExploitedEffect">The effects on Independent systems the Power exploits.</param>
            <param name="rating1">Commander benefits at rank 1.</param>
            <param name="rating2">Commander benefits at rank 2.</param>
            <param name="rating3">Commander benefits at rank 3.</param>
            <param name="rating4">Commander benefits at rank 4.</param>
            <param name="rating5">Commander benefits at rank 5.</param>
        </member>
        <member name="M:EDlib.Powerplay.PowerDetails.ToString">
            <summary>Returns a string containing some Power details: short name (allegiance) - headquarters</summary>
            <returns>A <see cref="T:System.String" /> that represents the Power details.</returns>
        </member>
        <member name="T:EDlib.Powerplay.StandingChange">
            <summary>The Power's change in standings since the previous cycle.</summary>
        </member>
        <member name="F:EDlib.Powerplay.StandingChange.up">
            <summary>The Power's standing has improved.</summary>
        </member>
        <member name="F:EDlib.Powerplay.StandingChange.down">
            <summary>The Power's standing has decayed.</summary>
        </member>
        <member name="F:EDlib.Powerplay.StandingChange.none">
            <summary>The Power's standing has not changed.</summary>
        </member>
        <member name="T:EDlib.Powerplay.PowerStanding">
            <summary>Contains the Galactic Standings data for a Power.</summary>
        </member>
        <member name="P:EDlib.Powerplay.PowerStanding.Id">
            <summary>Gets or sets a unique identifier for the Power.</summary>
            <value>The unique identifier for the Power.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerStanding.Name">
            <summary>Gets or sets the Power's name.</summary>
            <value>The Power's name.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerStanding.Position">
            <summary>Gets or sets the Power's position in the Galactic Standings.</summary>
            <value>The Power's position in the Galactic Standings.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerStanding.Change">
            <summary>Gets or sets the Power's change in the Galactic Standings since the previous cycle.</summary>
            <value>The Power's change in the standings since the previous cycle.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerStanding.Turmoil">
            <summary>Gets or sets a value indicating whether this Power is turmoil.</summary>
            <value><c>true</c> if turmoil; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerStanding.Allegiance">
            <summary>Gets or sets the Power's allegiance - Alliance, Empire, Federation or Independent.</summary>
            <value>The Power's allegiance.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerStanding.ShortName">
            <summary>Gets or sets a short name for the Power.</summary>
            <value>The Power's short name.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerStanding.Cycle">
            <summary>Gets or sets the Powerplay cycle.</summary>
            <value>The Powerplay cycle.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerStanding.LastUpdated">
            <summary>Gets the date and time the Power's standing was last updated.</summary>
            <value>When the Power's standing was last updated.</value>
        </member>
        <member name="P:EDlib.Powerplay.PowerStanding.ChangeString">
            <summary>Gets the Power's change in the Galactic Standings since the previous cycle as a string.</summary>
            <value>The Power's change in the standings since the previous cycle.</value>
        </member>
        <member name="M:EDlib.Powerplay.PowerStanding.#ctor">
            <summary>Initializes a new instance of the <see cref="T:EDlib.Powerplay.PowerStanding" /> class with no data.</summary>
        </member>
        <member name="M:EDlib.Powerplay.PowerStanding.#ctor(System.Int32,System.String,System.Int32,EDlib.Powerplay.StandingChange,System.Boolean,System.String,System.String,System.DateTime)">
            <summary>Initializes a new instance of the <see cref="T:EDlib.Powerplay.PowerStanding" /> class with the given data.</summary>
            <param name="id">The Power's unique identifier.</param>
            <param name="name">The Power's name.</param>
            <param name="position">The Power's position in the Galactic Standings.</param>
            <param name="change">The Power's change in the Galactic Standings.</param>
            <param name="turmoil">Whether the Power is in Turmoil.</param>
            <param name="allegiance">The Power's allegiance.</param>
            <param name="shortname">The Power's short name.</param>
            <param name="updated">When the Power's standing was last updated.</param>
        </member>
        <member name="M:EDlib.Powerplay.PowerStanding.#ctor(System.Int32,System.String,System.Int32,System.DateTime)">
            <summary>
              <para>Initializes a new instance of the <see cref="T:EDlib.Powerplay.PowerStanding" /> class with the given data.</para>
              <para>Used by the Galactic Standings API back-end.</para>
            </summary>
            <param name="position">The Power's position in the Galactic Standings.</param>
            <param name="standing">The Power's name, standings change and turmoil status.</param>
            <param name="cycle">The Powerplay cycle.</param>
            <param name="updated">When the Power's standing was last updated.</param>
        </member>
        <member name="M:EDlib.Powerplay.PowerStanding.ToString">
            <summary>Returns the Power's standing as a string: position + change - Power name (Power allegiance)</summary>
            <returns>A <see cref="T:System.String" /> that represents the Power's standing.</returns>
        </member>
        <member name="T:EDlib.Powerplay.CycleService">
            <summary>A static class that deals with the Powerplay cycle and when it changes (ticks).</summary>
        </member>
        <member name="M:EDlib.Powerplay.CycleService.TimeRemaining">
            <summary>Gets the time remaining till the end of the current Powerplay cycle.</summary>
            <returns>Days and hours until the last 24 hours, then hours and minutes.</returns>
        </member>
        <member name="M:EDlib.Powerplay.CycleService.CycleImminent">
            <summary>Determines if the end of the current Powerplay cycle is imminent - less than 12 hours remaining.</summary>
            <returns><c>true</c> if imminent, else <c>false</c>.</returns>
        </member>
        <member name="M:EDlib.Powerplay.CycleService.FinalDay">
            <summary>Determines if the current Powerplay cycle ends within 24 hours.</summary>
            <returns><c>true</c> if it is the final 24 hours of the cycle, else <c>false</c>.</returns>
        </member>
        <member name="M:EDlib.Powerplay.CycleService.TimeTillTick">
            <summary>Gets the time remaining till the end of the current Powerplay cycle.</summary>
            <returns>The time till the end of the cycle.</returns>
        </member>
        <member name="M:EDlib.Powerplay.CycleService.CurrentCycle">
            <summary>Gets the current Powerplay cycle number.</summary>
            <returns>The current Powerplay cycle number.</returns>
        </member>
        <member name="T:EDlib.Powerplay.PowerDetailsService">
            <summary>Gets a Power's statistics, ethos, benefits and comms data.</summary>
        </member>
        <member name="M:EDlib.Powerplay.PowerDetailsService.Instance(EDlib.Network.IDownloadService)">
            <summary>Instantiates the PowerDetailsService class.</summary>
            <param name="downloadService">IDownloadService instance used to download data.</param>
            <returns>PowerDetailsService</returns>
        </member>
        <member name="M:EDlib.Powerplay.PowerDetailsService.GetPowerDetails(System.String)">
            <summary>Gets a Power's statistics, ethos and benefits data from an embedded json resource.</summary>
            <param name="shortName">The required Power's short name.</param>
            <returns>PowerDetals</returns>
        </member>
        <member name="M:EDlib.Powerplay.PowerDetailsService.GetPowerCommsAsync(System.String,System.Int32)">
            <summary>Gets the comms data for a Power from an online resource - Subreddit and Discord / Slack servers.</summary>
            <param name="shortName">The required Power's short name.</param>
            <param name="cacheDays">The number of days to cache the Power comms data.</param>
            <returns>Task&lt;PowerComms&gt;</returns>
        </member>
        <member name="T:EDlib.Powerplay.StandingsService">
            <summary>Gets the current Powerplay Galactic Standings.</summary>
        </member>
        <member name="M:EDlib.Powerplay.StandingsService.Instance(System.String,EDlib.Platform.ICacheService,EDlib.Platform.IConnectivityService)">
            <summary>Instantiates the StandingsService class.</summary>
            <param name="userAgent">The user agent used for downloads.</param>
            <param name="cacheService">The platform specific cache for downloaded data.</param>
            <param name="connectivityService">The platform specific connectivity service.</param>
            <returns>StandingsService</returns>
        </member>
        <member name="M:EDlib.Powerplay.StandingsService.GetData(System.Threading.CancellationTokenSource,System.Boolean)">
            <summary>Gets the current Powerplay Galactic Standings.</summary>
            <param name="cancelToken">A cancellation token.</param>
            <param name="ignoreCache">Ignore any cached data if set to <c>true</c>.</param>
            <returns>Task&lt;GalacticStandings&gt;</returns>
        </member>
    </members>
</doc>
